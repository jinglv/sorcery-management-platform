{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js!/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/Infos/apiRequestDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/Infos/apiRequestDialog.vue","mtime":1685610005674},{"path":"/Users/lvjing/sorcery-management-platform/front/babel.config.js","mtime":1679466191236},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["jsonViewer","vueJsonEditor","debugApi","assertApi","createApi","checkExtract","updateApi","apiInfoDetail","dictDialog","name","components","props","title","type","String","default","aid","Number","data","methodOption","value","label","request_path","activeName","paramsType","json","response","assertType","apiInfoForm","url","method","request_headers","request_params","request_body","response_body","assert_type","assert_text","apiForm","module_id","api_path","header","params_type","params_body","params","saveFlag","extractList","timeLineHeight","headerData","key","show","paramData","bodyFlag","paramFlag","mounted","_this","document","documentElement","clientHeight","window","onresize","getApiInfoDetail","methods","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_callee$","_context","prev","next","sent","console","info","success","result","length","$message","error","message","stop","sendClick","_this3","_callee2","req_header","i","head","req","_callee2$","_context2","push","toLocaleLowerCase","JSON","stringify","parse","code","log","assertClick","_this4","_callee3","_callee3$","_context3","saveTestCase","_this5","_callee4","req_params","_callee4$","_context4","dictHeaderData","dictParamsData","extract_list","setTimeout","$emit","updateTestCase","_this6","_callee5","_callee5$","_context5","cid","addExtract","removeExtract","index","splice","_this7","_callee6","_callee6$","_context6","abrupt","closeDialog","param"],"sources":["src/components/Infos/apiRequestDialog.vue"],"sourcesContent":["<template>\n  <div :style=\"{'max-height': timeLineHeight +'px'}\" style=\"margin-left: 10px; margin-right: 10px; overflow-y:scroll;\">\n    <div v-if=\"title == '接口详情'\" class=\"div-line\">\n      <el-form\n        :model=\"apiInfoForm\"\n        label-width=\"100px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"接口URL:\" prop=\"url\">{{ apiInfoForm.url }}</el-form-item>\n        <el-form-item label=\"请求方式:\" prop=\"method\">{{ apiInfoForm.method }}</el-form-item>\n        <el-form-item label=\"请求头:\" prop=\"request_headers\">\n          <el-table\n            :data=\"apiInfoForm.request_headers\"\n            border\n            style=\"width: 80%\"\n          >\n            <el-table-column\n              prop=\"name\"\n              label=\"Name\"\n              width=\"180\"\n            />\n            <el-table-column\n              prop=\"value\"\n              label=\"Value\"\n            />\n          </el-table>\n        </el-form-item>\n        <el-form-item label=\"Params:\" prop=\"request_params\">\n          <el-table\n            :data=\"apiInfoForm.request_params\"\n            border\n            style=\"width: 80%\"\n          >\n            <el-table-column\n              prop=\"name\"\n              label=\"Name\"\n              width=\"180\"\n            />\n            <el-table-column\n              prop=\"value\"\n              label=\"Value\"\n            />\n          </el-table>\n        </el-form-item>\n        <el-form-item label=\"Body:\" prop=\"request_body\">\n          <json-viewer :value=\"apiInfoForm.request_body\" :expand-depth=\"3\" />\n        </el-form-item>\n        <el-form-item label=\"响应主体:\" prop=\"response_body\">\n          <json-viewer :value=\"apiInfoForm.response_body\" :expand-depth=\"3\" />\n        </el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog()\">返回</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div v-if=\"title != '接口详情'\">\n      <div class=\"div-line\" style=\"height: 50px\">\n        <el-select\n          v-model=\"apiInfoForm.method\"\n          placeholder=\"方法\"\n          style=\"width: 20%; float: left\"\n        >\n          <el-option\n            v-for=\"item in methodOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n        <el-input\n          v-model=\"apiInfoForm.url\"\n          placeholder=\"接口URL\"\n          style=\"width: 65%; float: left\"\n        />\n        <el-button\n          type=\"primary\"\n          style=\"float: left\"\n          @click=\"sendClick()\"\n        >发送</el-button>\n      </div>\n      <div class=\"div-line\" style=\"height: 260px; overflow-y: auto;\">\n        <span class=\"title-text\">Headers</span>\n        <dict-dialog :dict-data=\"headerData\" />\n      </div>\n      <span class=\"title-text\">Request Params</span>\n      <div class=\"div-line\" style=\"height: 220px; overflow-y: auto;\">\n        <dict-dialog :dict-data=\"paramData\" />\n      </div>\n      <span class=\"title-text\">Request Body</span>\n      <div class=\"div-line\" style=\"height: 220px; overflow-y: auto;\">\n        <vue-json-editor v-model=\"apiInfoForm.request_body\" :mode=\"'code'\" />\n      </div>\n      <div class=\"div-line\" style=\"height: 150px\">\n        <el-tabs>\n          <el-tab-pane label=\"接口响应结果\">\n            <vue-json-editor v-model=\"apiInfoForm.response_body\" :mode=\"'code'\" />\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n      <div class=\"div-line\" style=\"margin-top: 70px\">\n        <el-collapse>\n          <el-collapse-item title=\"断言\" name=\"1\">\n            <div style=\"height: 40px\">\n              <el-radio\n                v-model=\"apiForm.assert_type\"\n                label=\"include\"\n              >Include</el-radio>\n              <el-radio\n                v-model=\"apiForm.assert_type\"\n                label=\"equal\"\n              >Equal</el-radio>\n              <el-button\n                class=\"debug-button\"\n                type=\"success\"\n                plain\n                size=\"small\"\n                @click=\"assertClick()\"\n              >断言</el-button>\n            </div>\n            <div style=\"height: 120px\">\n              <el-input\n                v-model=\"apiForm.assert_text\"\n                type=\"textarea\"\n                :rows=\"5\"\n                placeholder=\"Assert text\"\n              />\n            </div>\n          </el-collapse-item>\n        </el-collapse>\n        <el-collapse>\n          <el-collapse-item title=\"提取器\" name=\"2\">\n            <el-form label-width=\"60px\">\n              <div v-for=\"(item, index) in extractList\" :key=\"index\">\n                <el-form-item label=\"提取器\">\n                  <el-col :span=\"8\">\n                    <el-input\n                      v-model=\"item.name\"\n                      placeholder=\"变量名\"\n                      style=\"width: 200px\"\n                    />\n                  </el-col>\n                  <el-col class=\"line\" :span=\"2\">-</el-col>\n                  <el-col :span=\"11\">\n                    <el-input\n                      v-model=\"item.value\"\n                      placeholder=\"提取规则\"\n                      style=\"width: 100%\"\n                    />\n                  </el-col>\n                  <el-button\n                    type=\"text\"\n                    style=\"padding-right: 10px\"\n                    @click=\"removeExtract(index)\"\n                  >\n                    <i class=\"el-icon-remove-outline\" />\n                  </el-button>\n                </el-form-item>\n              </div>\n            </el-form>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              plain\n              @click=\"addExtract()\"\n            >添加</el-button>\n            <el-button\n              type=\"success\"\n              size=\"mini\"\n              icon=\"el-icon-document-checked\"\n              plain\n              @click=\"checkExtract()\"\n            >检查</el-button>\n          </el-collapse-item>\n        </el-collapse>\n      </div>\n      <div style=\"height: 50px\">\n        <el-input\n          v-model=\"apiForm.name\"\n          placeholder=\"请输入用例名称\"\n          size=\"small\"\n          style=\"width: 60%; float: left\"\n        />\n        <el-button\n          v-if=\"title != '编辑接口'\"\n          type=\"primary\"\n          size=\"small\"\n          style=\"float: left\"\n          :disabled=\"saveFlag\"\n          @click=\"saveTestCase()\"\n        >保存</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport jsonViewer from 'vue-json-viewer'\nimport vueJsonEditor from 'vue-json-editor'\nimport { debugApi, assertApi, createApi, checkExtract, updateApi } from '@/api/apis'\nimport { apiInfoDetail } from '@/api/infos'\nimport dictDialog from '@/components/Api/dictDialog.vue'\nexport default {\n  name: 'ApiRequest',\n  components: {\n    vueJsonEditor,\n    jsonViewer,\n    dictDialog\n  },\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    aid: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      methodOption: [\n        {\n          value: 'get',\n          label: 'GET'\n        },\n        {\n          value: 'post',\n          label: 'POST'\n        },\n        {\n          value: 'put',\n          label: 'PUT'\n        },\n        {\n          value: 'delete',\n          label: 'DELETE'\n        }\n      ],\n      request_path: '',\n      activeName: 'first',\n      paramsType: 1,\n      json: {},\n      response: '',\n      assertType: 'include',\n      apiInfoForm: {\n        url: '',\n        method: '',\n        request_headers: [],\n        request_params: [],\n        request_body: {},\n        response_body: {},\n        assert_type: 'include',\n        assert_text: ''\n      },\n      apiForm: {\n        name: '',\n        module_id: 0,\n        api_path: '',\n        method: 'get',\n        header: [],\n        params_type: 'params',\n        params_body: '',\n        response: '',\n        assert_type: 'include',\n        assert_text: ''\n      },\n      params: [],\n      saveFlag: false,\n      extractList: [],\n      timeLineHeight: '',\n      headerData: [{\n        key: '',\n        value: '',\n        // 是否显示新增按钮\n        show: 'true'\n      }],\n      paramData: [{\n        key: '',\n        value: '',\n        // 是否显示新增按钮\n        show: 'true'\n      }],\n      bodyFlag: false,\n      paramFlag: true\n    }\n  },\n  mounted() {\n    // 窗口滑动\n    this.timeLineHeight = document.documentElement.clientHeight - 150\n    window.onresize = () => { this.timeLineHeight = document.documentElement.clientHeight - 150 }\n    // 初始化数据\n    this.getApiInfoDetail()\n  },\n  methods: {\n    // 获取一条用例信息\n    async getApiInfoDetail() {\n      const resp = await apiInfoDetail(this.aid)\n      console.info('响应结果：', resp)\n      if (resp.success === true) {\n        // 接口获取数据\n        this.apiInfoForm = resp.result\n        // 将获取到的数据赋值给表单数据\n        this.headerData = resp.result.request_headers\n        // 获取头信息后，添加，是否可展示信息\n        this.headerData[this.headerData.length - 1]['show'] = 'true'\n        this.paramData = resp.result.request_params\n        if (this.paramData.length !== 0) {\n          this.paramData[this.paramData.length - 1]['show'] = 'true'\n        }\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    // 发送请求\n    async sendClick() {\n      // 请求头参数转换\n      const req_header = []\n      for (var i = 0; i < this.headerData.length; i++) {\n        const head = {\n          name: this.headerData[i].name,\n          value: this.headerData[i].value\n        }\n        req_header.push(head)\n      }\n      if (this.apiInfoForm.request_params.length === 0) {\n        this.apiForm.params_type = 'json'\n      } else {\n        this.apiForm.params_type = 'params'\n      }\n      // 入参进行转换\n      const req = {\n        method: this.apiInfoForm.method.toLocaleLowerCase(),\n        url: this.apiInfoForm.url,\n        header: req_header,\n        params_type: this.apiForm.params_type,\n        params_body: this.apiForm.params_type === 'params' ? JSON.stringify(this.paramData) : JSON.stringify(this.apiInfoForm.request_body)\n      }\n      console.info('req:', req)\n      const resp = await debugApi(req)\n      if (resp.success === true) {\n        this.apiInfoForm.response_body = JSON.parse(resp.result.response)\n      } else {\n        if (resp.error.code === '10044') {\n          this.$message.error(resp.error.message)\n        }\n        console.log(resp)\n      }\n    },\n    // 接口断言\n    async assertClick() {\n      const req = {\n        response: JSON.stringify(this.apiForm.response),\n        assert_type: this.apiForm.assert_type,\n        assert_text: this.apiForm.assert_text\n      }\n      const resp = await assertApi(req)\n      if (resp.success === true) {\n        this.$message.success('断言成功')\n      } else {\n        this.$message.error('断言失败')\n      }\n    },\n    // 保存用例\n    async saveTestCase() {\n      // 请求头参数转换\n      const req_header = this.dictHeaderData()\n      const req_params = this.dictParamsData()\n      if (this.apiForm.params_type !== 'json') {\n        this.apiForm.params_body = req_params\n      }\n      this.apiForm.extract_list = this.extractList\n      this.apiForm.header = req_header\n      this.apiForm.response = JSON.stringify(this.apiForm.response)\n      const resp = await createApi(this.apiForm)\n      if (resp.success === true) {\n        this.$message.success('保存成功')\n        this.saveFlag = true\n        // 延时器\n        setTimeout(() => {\n          this.$emit('close')\n          this.$emit('refresh')\n        }, 500)\n      } else {\n        this.$message.error('保存失败')\n      }\n    },\n    // 更新用例\n    async updateTestCase() {\n      // 请求头参数转换\n      const req_header = this.dictHeaderData()\n      const req_params = this.dictParamsData()\n      if (this.apiForm.params_type !== 'json') {\n        this.apiForm.params_body = req_params\n      }\n      this.apiForm.extract_list = this.extractList\n      this.apiForm.header = req_header\n      this.apiForm.response = JSON.stringify(this.apiForm.response)\n      const resp = await updateApi(this.cid, this.apiForm)\n      if (resp.success === true) {\n        this.$message.success('更新成功')\n        this.saveFlag = true\n        // 延时器\n        setTimeout(() => {\n          this.$emit('close')\n          this.$emit('refresh')\n        }, 500)\n      } else {\n        this.$message.error('更新失败')\n      }\n    },\n    // 添加提取规则\n    addExtract() {\n      this.extractList.push({ name: '', value: '' })\n      console.info(this.extractList)\n    },\n    // 删除提取规则\n    removeExtract(index) {\n      this.extractList.splice(index, 1)\n    },\n    // 校验提取规则\n    async checkExtract() {\n      if (this.extractList.length === 0) {\n        this.$message.error('请添加提取器')\n        return\n      }\n      const req = {\n        response: this.apiForm.response,\n        extractList: this.extractList\n      }\n      const resp = await checkExtract(req)\n      if (resp.success === true) {\n        this.$message.success('提取器校验成功')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    // 关闭\n    closeDialog() {\n      this.$emit('close')\n    },\n    dictHeaderData() {\n      const req_header = []\n      for (var i = 0; i < this.headerData.length; i++) {\n        const head = {\n          key: this.headerData[i].key,\n          value: this.headerData[i].value\n        }\n        req_header.push(head)\n      }\n      return req_header\n    },\n    dictParamsData() {\n      const req_params = []\n      for (var i = 0; i < this.paramData.length; i++) {\n        const param = {\n          key: this.paramData[i].key,\n          value: this.paramData[i].value\n        }\n        req_params.push(param)\n      }\n      return req_params\n    }\n  }\n}\n</script>\n\n<style>\ndiv.jsoneditor {\n  border: thin solid #ced4da;\n}\ndiv.jsoneditor-menu {\n  display: none;\n}\n.ace-jsoneditor .ace_gutter {\n  background: white;\n}\ndiv.jsoneditor-outer.has-main-menu-bar {\n  margin-top: 0px;\n  padding-top: 0px;\n}\n.per-label {\n  margin-right: 10px;\n  margin-bottom: 4px;\n  font-size: 1rem;\n}\n</style>\n\n<style scoped>\n.debug-button {\n  float: right;\n  margin-right: 20px;\n}\n.div-line {\n  height: auto;\n  width: 100%;\n  text-align: left;\n  margin-bottom: 10px;\n}\n.title-text {\n  font-family: \"Lucida Calligraphy\", cursive, serif, sans-serif;\n  font-size: 18px;\n  font-weight: bolder;\n}\n</style>\n"],"mappings":"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"}]}