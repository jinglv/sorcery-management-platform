{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js!/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerApiDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerApiDialog.vue","mtime":1686799579043},{"path":"/Users/lvjing/sorcery-management-platform/front/babel.config.js","mtime":1679466191236},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getModuleTree","httpRunnerProjectList","createHttpRunnerApi","getApisList","components","props","data","showTitle","dialogVisible","apiForm","name","httprunner_project_id","base_api_id","httprunner_api_name","moduleData","apiData","apiNum","casesData","currentModuleId","apiInfoList","projectValue","projectLabel","projectOption","projectId","req","page","size","total","saveFlag","computed","isInputEmpty","trim","mounted","initHttpRunnerProjectList","methods","closeDialog","$emit","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","i","wrap","_callee$","_context","prev","next","sent","success","items","length","push","value","id","label","project_id","console","info","$message","error","stop","changeProject","find","item","getModuleList","pid","_this2","_callee2","_callee2$","_context2","result","nodeClick","getModuleApiList","mid","_this3","_callee3","_callee3$","_context3","$nextTick","apiId","module_id","rows","j","forEach","row","$refs","multipleTable","toggleRowSelection","clearSelection","message","selectionAllApi","val","log","getApiinfo","selectiveApi","selectionOneApi","ls","multipleSelection","selective","calculationCase","_this4","_callee4","_callee4$","_context4","abrupt","handleCurrentChange","concat"],"sources":["src/components/HttpRunner/httpRunnerApiDialog.vue"],"sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"900px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      ref=\"ruleForm\"\n      :model=\"apiForm\"\n      label-width=\"120px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"HttpRunner项目\">\n        <el-select\n          v-model=\"projectValue\"\n          placeholder=\"请选择HttpRunner项目名称\"\n          style=\"width: 100%;\"\n          @change=\"changeProject\"\n        >\n          <el-option\n            v-for=\"item in projectOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <div style=\"margin-top: 10px\">\n          <el-card style=\"width: 28%; height: 300px; float: left\">\n            <el-tree\n              :data=\"moduleData\"\n              node-key=\"id\"\n              default-expand-all\n              :expand-on-click-node=\"false\"\n              @node-click=\"nodeClick\"\n            >\n              <span slot-scope=\"{ node }\" class=\"custom-tree-node\">\n                <span style=\"float: left\">{{ node.label }}</span>\n              </span>\n            </el-tree>\n          </el-card>\n          <div style=\"width: 70%; float: right\">\n            <el-table\n              ref=\"multipleTable\"\n              :data=\"apiData\"\n              border\n              style=\"width: 100%\"\n              @select=\"selectionOneApi\"\n              @select-all=\"selectionAllApi\"\n            >\n              <el-table-column type=\"selection\" width=\"55\" />\n              <el-table-column prop=\"id\" label=\"接口ID\" width=\"80\" />\n              <el-table-column prop=\"name\" label=\"接口名称\" width=\"120\" />\n              <el-table-column label=\"httpRunner项目接口名称\">\n                <template slot-scope=\"scope\">\n                  <el-input\n                    v-model=\"scope.row.value\"\n                    :required=\"true\"\n                    placeholder=\"请输入httpRunner项目接口名称\"\n                  />\n                  <span v-if=\"isInputEmpty\" style=\"color: red;\">*接口名称不能为空</span>\n                </template>\n              </el-table-column>>\n            </el-table>\n            <!--分页-->\n            <div style=\"width: 100%; text-align: right\">\n              <el-pagination\n                background\n                layout=\"prev, pager, next\"\n                :page-size=\"req.size\"\n                :total=\"total\"\n                @current-change=\"handleCurrentChange\"\n              />\n            </div>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <div class=\"dialog-footer\">\n          已选择【{{ apiNum }}】接口\n          <el-button @click=\"closeDialog()\">取消</el-button>\n          <el-button\n            type=\"primary\"\n            :disabled=\"saveFlag\"\n            @click=\"createHttpRunnerApi\"\n          >创建</el-button>\n        </div>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n\n<script>\nimport { getModuleTree } from '@/api/modules'\nimport { httpRunnerProjectList, createHttpRunnerApi } from '@/api/httprunner'\nimport { getApisList } from '@/api/apis'\n\nexport default {\n  components: {},\n  props: {\n  },\n  data() {\n    return {\n      showTitle: '创建HttpRunner项目接口',\n      dialogVisible: true,\n      apiForm: {\n        name: '',\n        httprunner_project_id: '',\n        base_api_id: ''\n      },\n      httprunner_api_name: '',\n      moduleData: [],\n      apiData: [],\n      apiNum: 0,\n      casesData: [],\n      currentModuleId: 0,\n      apiInfoList: [],\n      projectValue: '',\n      projectLabel: '',\n      projectOption: [],\n      projectId: 0,\n      req: {\n        page: 1,\n        size: 10\n      },\n      // 分页页数\n      total: 10,\n      saveFlag: false\n    }\n  },\n  computed: {\n    isInputEmpty() {\n      // 检查输入框的值是否为空\n      return this.httprunner_api_name.trim() === ''\n    }\n  },\n  mounted() {\n    this.initHttpRunnerProjectList()\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n    },\n    async initHttpRunnerProjectList() {\n      const resp = await httpRunnerProjectList(this.req)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name,\n            projectId: resp.items[i].project_id\n          })\n        }\n        console.info('project options:', this.projectOption)\n        this.total = resp.total\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    changeProject(value) {\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n      this.projectId = this.projectOption.find(\n        (item) => item.value === value\n      ).projectId\n      console.info('project id:', this.projectId)\n      this.apiForm.httprunner_project_id = value\n      this.getModuleList(this.projectId)\n    },\n    // 查询模块列表\n    async getModuleList(pid) {\n      const resp = await getModuleTree(pid)\n      if (resp.success === true) {\n        this.moduleData = resp.result\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n\n    // 点击模块\n    nodeClick(data) {\n      this.currentModuleId = data.id\n      this.getModuleApiList(data.id)\n    },\n\n    // 初始化用例数据\n    async getModuleApiList(mid) {\n      const resp = await getApisList(mid, this.req)\n      if (resp.success === true) {\n        this.apiData = resp.items\n        this.$message.success('查询成功！')\n        // 已经选中的用例\n        this.$nextTick(() => {\n          var apiId = []\n          for (let i = 0; i < this.apiInfoList.length; i++) {\n            if (this.apiInfoList[i].module_id === mid) {\n              apiId.push(this.apiInfoList[i].base_api_id)\n            }\n          }\n          const rows = []\n          for (let i = 0; i < apiId.length; i++) {\n            for (let j = 0; j < this.apiInfoList.length; j++) {\n              if (apiId[i] === this.apiInfoList[i].base_api_id) {\n                rows.push(this.apiInfoList[i])\n              }\n            }\n          }\n          if (rows) {\n            rows.forEach((row) => {\n              this.$refs.multipleTable.toggleRowSelection(row)\n            })\n          } else {\n            this.$refs.multipleTable.clearSelection()\n          }\n        })\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n\n    // 选择所有用例\n    selectionAllApi(val, row) {\n      console.log('选择所有用例 val', val)\n      for (let i = 0; i < val.length; i++) {\n        const getApiinfo = {\n          'name': val[i].value,\n          'base_api_id': val[i].id,\n          'httprunner_project_id': this.projectValue,\n          'module_id': val[i].module_id\n        }\n        this.apiInfoList.push(getApiinfo)\n      }\n      console.info('api info list:', this.apiInfoList)\n      this.selectiveApi(this.apiInfoList)\n    },\n    // 选择一条用例\n    selectionOneApi(val, row) {\n      console.log('selection-one-change val', val)\n      console.log('selection-one-change row', row)\n      const ls = []\n      for (let i = 0; i < val.length; i++) {\n        const getApiinfo = {\n          'name': val[i].value,\n          'base_api_id': val[i].id,\n          'httprunner_project_id': this.projectValue,\n          'module_id': val[i].module_id\n        }\n        ls.push(getApiinfo)\n      }\n      console.info('api info list:', ls)\n      this.selectiveApi(ls)\n    },\n\n    // 公共方法：选择接口\n    selectiveApi(multipleSelection) {\n      console.info('multipleSelection:', multipleSelection)\n      var selective = false\n      for (let i = 0; i < multipleSelection.length; i++) {\n        if (multipleSelection[i].module_id === this.currentModuleId) {\n          selective = true\n          this.apiInfoList = multipleSelection\n        }\n      }\n      if (selective === false) {\n        this.apiInfoList.push(multipleSelection)\n      }\n      this.calculationCase()\n    },\n\n    // 公共方法：计算用例数量\n    calculationCase() {\n      this.apiNum += this.apiInfoList.length - this.apiNum\n      // for (let i = 0; i < this.apiInfoList.length; i++) {\n      //   this.apiNum += this.apiInfoList.length\n      // }\n    },\n    // 创建接口\n    async createHttpRunnerApi() {\n      for (let i = 0; i < this.apiInfoList.length; i++) {\n        const req = this.apiInfoList[i]\n        if (this.isInputEmpty) {\n          // 输入内容为空，显示必填提示，不进行提交操作\n          return\n        }\n        const resp = await createHttpRunnerApi(req)\n        if (resp.success === true) {\n          this.closeDialog()\n          this.$message.success('创建成功！')\n        } else {\n          this.$message.error(resp.error.message)\n        }\n      }\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`)\n      this.req.page = val\n      this.getModuleApiList(this.currentModuleId)\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n</style>\n"],"mappings":"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"}]}