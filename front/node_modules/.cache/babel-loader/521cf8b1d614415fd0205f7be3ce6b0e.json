{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js!/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerRunApiDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerRunApiDialog.vue","mtime":1686817886660},{"path":"/Users/lvjing/sorcery-management-platform/front/babel.config.js","mtime":1679466191236},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["httpRunnerProjectList","httpRunnerRunApi","envsListByProject","components","props","ids","type","Array","default","data","showTitle","dialogVisible","projectValue","projectLabel","projectOption","projectId","envValue","envLabel","envOption","typeValue","typeLabel","typeOption","value","label","apiRunForm","api_ids","env_url","req","page","size","total","saveFlag","mounted","initHttpRunnerProjectList","length","$message","error","methods","closeDialog","$emit","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","i","wrap","_callee$","_context","prev","next","sent","success","items","push","id","name","project_id","stop","changeProject","find","item","getEnvList","_this2","_callee2","_callee2$","_context2","result","env","protocol","base_url","changeEnv","changeType","handleCurrentChange","val","console","log","concat","getModuleApiList","currentModuleId","httpRunnerApi","_this3","_callee3","_callee3$","_context3","info","message"],"sources":["src/components/HttpRunner/httpRunnerRunApiDialog.vue"],"sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"900px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      ref=\"ruleForm\"\n      :model=\"apiRunForm\"\n      label-width=\"120px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"HttpRunner项目\">\n        <el-select\n          v-model=\"projectValue\"\n          placeholder=\"请选择HttpRunner项目名称\"\n          style=\"width: 100%;\"\n          @change=\"changeProject\"\n        >\n          <el-option\n            v-for=\"item in projectOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"执行环境\">\n        <el-select\n          v-model=\"envValue\"\n          placeholder=\"请选择执行环境\"\n          style=\"width: 100%;\"\n          @change=\"changeEnv\"\n        >\n          <el-option\n            v-for=\"item in envOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"类型\">\n        <el-select\n          v-model=\"typeValue\"\n          placeholder=\"请选择类型\"\n          style=\"width: 100%;\"\n          @change=\"changeType\"\n        >\n          <el-option\n            v-for=\"item in typeOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <div class=\"dialog-footer\">\n          <el-button @click=\"closeDialog()\">取消</el-button>\n          <el-button\n            type=\"primary\"\n            @click=\"httpRunnerApi\"\n          >执行</el-button>\n        </div>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n\n<script>\nimport { httpRunnerProjectList, httpRunnerRunApi } from '@/api/httprunner'\nimport { envsListByProject } from '@/api/envs'\n\nexport default {\n  components: {},\n  props: {\n    ids: {\n      type: Array,\n      default: null\n    }\n  },\n  data() {\n    return {\n      showTitle: 'HttpRunner接口执行',\n      dialogVisible: true,\n      projectValue: '',\n      projectLabel: '',\n      projectOption: [],\n      projectId: 0,\n      envValue: '',\n      envLabel: '',\n      envOption: [],\n      typeValue: '',\n      typeLabel: '',\n      typeOption: [\n        {\n          value: 'API',\n          label: 'Api'\n        },\n        {\n          value: 'TESTCASE',\n          label: 'TestCase'\n        },\n        {\n          value: 'TESTSUITE',\n          label: 'TestSuite'\n        }\n      ],\n      apiRunForm: {\n        type: '',\n        api_ids: [],\n        env_url: ''\n      },\n      req: {\n        page: 1,\n        size: 10\n      },\n      // 分页页数\n      total: 10,\n      saveFlag: false\n    }\n  },\n  mounted() {\n    this.initHttpRunnerProjectList()\n    if (this.ids.length === 0) {\n      this.$message.error('请选择接口')\n    }\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n    },\n    async initHttpRunnerProjectList() {\n      const resp = await httpRunnerProjectList(this.req)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name,\n            projectId: resp.items[i].project_id\n          })\n        }\n        this.total = resp.total\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    changeProject(value) {\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n      this.projectId = this.projectOption.find(\n        (item) => item.value === value\n      ).projectId\n      this.getEnvList()\n    },\n    // 查看环境列表\n    async getEnvList() {\n      const resp = await envsListByProject(this.projectId)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.result.length; i++) {\n          this.envOption.push({\n            value: resp.result[i].env + '=' + resp.result[i].protocol + resp.result[i].base_url,\n            label: resp.result[i].name\n          })\n        }\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    changeEnv(value) {\n      this.envValue = value\n      this.envLabel = this.envOption.find(\n        (item) => item.value === value\n      ).label\n    },\n    changeType(value) {\n      this.typeValue = value\n      this.typeLabel = this.typeOption.find(\n        (item) => item.value === value\n      ).label\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`)\n      this.req.page = val\n      this.getModuleApiList(this.currentModuleId)\n    },\n    async httpRunnerApi() {\n      this.apiRunForm.type = this.typeValue\n      this.apiRunForm.env_url = this.envValue\n      this.apiRunForm.api_ids = this.ids\n      console.info('req:', this.apiRunForm)\n      const resp = await httpRunnerRunApi(this.apiRunForm)\n      if (resp.success === true) {\n        this.closeDialog()\n        this.$message.success('创建成功！')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n</style>\n"],"mappings":"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"}]}