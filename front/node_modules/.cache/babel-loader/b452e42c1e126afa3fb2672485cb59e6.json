{"remainingRequest":"/Users/jeanlv/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js!/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeanlv/sorcery-management-platform/front/src/components/Cases/testCasesDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeanlv/sorcery-management-platform/front/src/components/Cases/testCasesDialog.vue","mtime":1702870236846},{"path":"/Users/jeanlv/sorcery-management-platform/front/babel.config.js","mtime":1698032213828},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1698032214874},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1698032217227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["projectList","getModuleTree","createTestCase","getTestCasesDetail","updateTestCase","getToken","DemandListDialog","DemandDetailDialog","ApiListDialog","ApiDialog","E","hljs","name","components","filters","caseType","value","testLabel","caseImportance","priorityType","requirementsType","props","title","type","String","default","case","Number","data","showTitle","dialogVisible","testCaseForm","version_number","project_id","module_id","test_label","importance","priority","precondition","test_steps","remark","rules","required","message","trigger","moduleValue","moduleData","expandOnClickNode","treeProps","children","label","projectValue","projectLabel","projectOption","testLableValue","testLableLabel","testLableOption","typeValue","typeLabel","typeOption","importanceValue","importanceLabel","importanceOption","priorityValue","priorityLabel","priorityOption","testStepData","test_step","test_data","expected_result","api_id","api_name","isDelete","currentIndex","currentApiId","apiDetailTitle","versionNumberData","versionNumbers","fileList","imageVisible","disabled","editor_precondition","editor_remark","editor_demand","dialogFlag","drawer","dialogDemandFlag","currentDemandId","demandDetailTitle","dialogDemandDetailFlag","created","_this","getTestCaseDetail","$nextTick","highlight","config","uploadImgServer","uploadFileName","uploadImgHeaders","Authorization","uploadVideoServer","uploadVideoName","uploadVideoHeaders","create","mounted","initProjectList","methods","closeDialog","$emit","destroy","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req_body","resp","i","wrap","_callee$","_context","prev","next","req","sent","success","items","length","push","id","$message","error","stop","initModuleList","pid","_this3","_callee2","_callee2$","_context2","result","changeProject","find","item","handleNodeClick","node","$refs","selectTree","blur","changeTestLable","changeType","changeImportance","changePriority","addTestSteps","rowData","deleteTestSteps","index","splice","selectApi","clearApiId","row","closeApiListDialog","getApiData","apiData","showApiDetail","closeDrawer","addDemand","closeDemandDialog","getDemandInfo","showDemand","deleteDemand","submitTestCase","formName","_this4","validate","valid","pre_content","txt","html","remark_content","then","_this5","_callee3","res","resSteps","steps","stepDict","_callee3$","_context3","module_name","version_info","JSON","parse","replace"],"sources":["src/components/Cases/testCasesDialog.vue"],"sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"80%\"\n    :before-close=\"closeDialog\"\n    :close-on-click-modal=\"false\"\n  >\n    <div v-if=\"title == 'detail'\" class=\"div-line\">\n      <el-form\n        ref=\"ruleForm\"\n        :model=\"testCaseForm\"\n        label-width=\"120px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-col>\n          <el-form-item label=\"用例名称：\" prop=\"name\">{{ testCaseForm.name }}</el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"项目名称：\" prop=\"project_name\">{{ testCaseForm.project_name }}</el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"模块名称：\" prop=\"module_name\">{{ testCaseForm.module_name }}</el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"标签：\" prop=\"test_label\">\n            {{ testCaseForm.test_label | testLabel }}\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"用例类型：\" prop=\"type\">\n            {{ testCaseForm.type | caseType }}\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"重要程度：\" prop=\"importance\">\n            {{ testCaseForm.importance | caseImportance }}\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"优先级：\" prop=\"priority\">\n            {{ testCaseForm.priority | priorityType }}\n          </el-form-item>\n        </el-col>\n        <el-form-item label=\"前置条件：\" prop=\"precondition\">\n          <div class=\"w-e-text\" style=\"height: 100px; overflow-y: auto;\" v-html=\"testCaseForm.precondition\" />\n        </el-form-item>\n        <el-form-item label=\"测试用例步骤：\" prop=\"test_steps\">\n          <el-table\n            :data=\"testCaseForm.test_steps\"\n            border\n            style=\"width: 100%\"\n          >\n            <el-table-column\n              type=\"index\"\n              label=\"ID\"\n              width=\"80\"\n            />\n            <el-table-column\n              prop=\"test_step\"\n              label=\"测试步骤描述\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"test_data\"\n              label=\"测试数据\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"expected_result\"\n              label=\"预期结果\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"api_name\"\n              label=\"接口名称\"\n              width=\"auto\"\n            >\n              <template slot-scope=\"scope\">\n                <el-link type=\"primary\" @click=\"showApiDetail(scope.row)\">{{ scope.row.api_name }}</el-link>\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"remark\"\n              label=\"备注\"\n            />\n          </el-table>\n        </el-form-item>\n        <el-form-item label=\"需求版本信息：\" prop=\"version_info\">\n          <el-table\n            :data=\"testCaseForm.version_info\"\n            border\n            style=\"width: 100%\"\n          >\n            <el-table-column\n              label=\"ID\"\n              type=\"index\"\n              width=\"80\"\n            />\n            <el-table-column\n              prop=\"name\"\n              label=\"需求名称\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"project_name\"\n              label=\"项目名称\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"version_number\"\n              label=\"版本号\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"requirements_type\"\n              label=\"需求类型\"\n            >\n              <template slot-scope=\"{ row }\">\n                {{ row.requirements_type | requirementsType }}\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"option\"\n              label=\"操作\"\n              fixed=\"right\"\n              width=\"150\"\n            >\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"primary\"\n                  size=\"mini\"\n                  icon=\"el-icon-view\"\n                  @click=\"showDemand(scope.row)\"\n                />\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-form-item>\n        <el-form-item label=\"备注：\" prop=\"remark\">\n          <div class=\"w-e-text\" style=\"height: 100px; overflow-y: auto;\" v-html=\"testCaseForm.remark\" />\n        </el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog\">返回</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div v-if=\"title != 'detail'\">\n      <el-form\n        ref=\"ruleForm\"\n        :model=\"testCaseForm\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"用例名称\" prop=\"name\">\n          <el-input v-model=\"testCaseForm.name\" />\n        </el-form-item>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"6\">\n            <el-form-item label=\"项目\" prop=\"project\">\n              <el-select\n                v-model=\"projectValue\"\n                size=\"small\"\n                placeholder=\"请选择项目\"\n                @change=\"changeProject\"\n              >\n                <el-option\n                  v-for=\"item in projectOption\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-form-item label=\"模块\" prop=\"module\">\n              <el-select\n                ref=\"selectTree\"\n                v-model=\"moduleValue\"\n                size=\"small\"\n                class=\"main-select-tree\"\n                placeholder=\"请选择模块\"\n              >\n                <el-option style=\"height: 100%; padding: 0;\" value=\"\" />\n                <el-tree\n                  ref=\"selectelTree\"\n                  class=\"main-select-el-tree\"\n                  :data=\"moduleData\"\n                  :props=\"treeProps\"\n                  :expand-on-click-node=\"expandOnClickNode\"\n                  highlight-current\n                  default-expand-all\n                  style=\"font-weight: normal;\"\n                  @node-click=\"handleNodeClick\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-form-item label=\"标签\" prop=\"test_label\">\n              <el-select\n                v-model=\"testLableValue\"\n                size=\"small\"\n                placeholder=\"请选择测试标签\"\n                @change=\"changeTestLable\"\n              >\n                <el-option\n                  v-for=\"item in testLableOption\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"6\">\n            <el-form-item label=\"用例类型\" prop=\"type\">\n              <el-select\n                v-model=\"typeValue\"\n                size=\"small\"\n                placeholder=\"请选择用例类型\"\n                @change=\"changeType\"\n              >\n                <el-option\n                  v-for=\"item in typeOption\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-form-item label=\"重要程度\" prop=\"importance\">\n              <el-select\n                v-model=\"importanceValue\"\n                size=\"small\"\n                placeholder=\"请选择用例重要程度\"\n                @change=\"changeImportance\"\n              >\n                <el-option\n                  v-for=\"item in importanceOption\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-form-item label=\"优先级\" prop=\"priority\">\n              <el-select\n                v-model=\"priorityValue\"\n                size=\"small\"\n                placeholder=\"请选择用例重要程度\"\n                @change=\"changePriority\"\n              >\n                <el-option\n                  v-for=\"item in priorityOption\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-form-item label=\"前置条件\" prop=\"precondition\">\n          <div id=\"editor_precondition\" />\n        </el-form-item>\n        <el-form-item label=\"测试步骤\" prop=\"test_steps\">\n          <div id=\"test-step\">\n            <el-table\n              size=\"mini\"\n              :data=\"testStepData\"\n              border\n              style=\"width: 100%\"\n            >\n              <el-table-column\n                label=\"#\"\n                type=\"index\"\n                width=\"50\"\n              />\n              <el-table-column\n                prop=\"test_step\"\n                label=\"步骤描述\"\n                width=\"auto\"\n                :style=\"{ 'width': '100%' }\"\n                show-overflow-tooltip\n              >\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.test_step\" type=\"textarea\" :rows=\"1\" placeholder=\"请输入测试用例步骤描述\" />\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"test_data\"\n                label=\"测试数据\"\n                width=\"auto\"\n                show-overflow-tooltip\n              >\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.test_data\" type=\"textarea\" :rows=\"1\" placeholder=\"请输入测试用例测试数据\" />\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"expected_result\"\n                label=\"预期结果\"\n                width=\"auto\"\n                show-overflow-tooltip\n              >\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.expected_result\" type=\"textarea\" :rows=\"1\" placeholder=\"请输入测试用例预期结果\" />\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"api_id\"\n                label=\"接口\"\n                width=\"200\"\n              >\n                <template slot-scope=\"scope\">\n                  <div class=\"cell-container\">\n                    <el-button v-if=\"scope.row.api_id === 0\" type=\"text\" size=\"mini\" @click=\"selectApi(scope.$index)\">查看接口</el-button>\n                    <el-link v-else type=\"primary\" @click=\"showApiDetail(scope.row)\">{{ scope.row.api_name }}</el-link>\n                    <el-button v-if=\"scope.row.api_id !== 0\" type=\"danger\" size=\"mini\" class=\"el-icon-close custom-button\" circle @click=\"clearApiId(scope.row)\" />\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"remark\"\n                label=\"备注\"\n                width=\"180\"\n                show-overflow-tooltip\n              >\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.remark\" type=\"textarea\" :rows=\"1\" placeholder=\"请输入备注信息\" />\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"option\"\n                label=\"操作\"\n                fixed=\"right\"\n                width=\"100\"\n              >\n                <template slot-scope=\"scope\">\n                  <el-button\n                    type=\"danger\"\n                    size=\"mini\"\n                    icon=\"el-icon-delete\"\n                    :disabled=\"scope.row.isDelete\"\n                    @click=\"deleteTestSteps(scope.$index)\"\n                  />\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n          <el-button type=\"primary\" size=\"small\" plain @click=\"addTestSteps()\">新增测试步骤</el-button>\n        </el-form-item>\n        <el-form-item label=\"关联需求\" prop=\"version_number\">\n          <div id=\"version_number\">\n            <el-table\n              size=\"mini\"\n              :data=\"versionNumberData\"\n              border\n              style=\"width: 100%\"\n            >\n              <el-table-column\n                label=\"#\"\n                type=\"index\"\n                width=\"50\"\n              />\n              <el-table-column\n                prop=\"name\"\n                label=\"需求名称\"\n                width=\"auto\"\n              />\n              <el-table-column\n                prop=\"project_name\"\n                label=\"项目\"\n                width=\"auto\"\n              />\n              <el-table-column\n                prop=\"version_number\"\n                label=\"版本号\"\n                width=\"auto\"\n              />\n              <el-table-column\n                prop=\"requirements_type\"\n                label=\"需求类型\"\n                width=\"auto\"\n              >\n                <template slot-scope=\"{ row }\">\n                  {{ row.requirements_type | requirementsType }}\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"option\"\n                label=\"操作\"\n                fixed=\"right\"\n                width=\"150\"\n              >\n                <template slot-scope=\"scope\">\n                  <el-button\n                    type=\"primary\"\n                    size=\"mini\"\n                    icon=\"el-icon-view\"\n                    :disabled=\"scope.row.isDelete\"\n                    @click=\"showDemand(scope.row)\"\n                  />\n                  <el-button\n                    type=\"danger\"\n                    size=\"mini\"\n                    icon=\"el-icon-delete\"\n                    :disabled=\"scope.row.isDelete\"\n                    @click=\"deleteDemand(scope.$index)\"\n                  />\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n          <el-button type=\"primary\" size=\"small\" round @click=\"addDemand()\">添加需求</el-button>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"remark\">\n          <div id=\"editor_remark\" />\n        </el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog\">取消</el-button>\n          <el-button\n            v-if=\"title != 'edit'\"\n            type=\"primary\"\n            @click=\"submitTestCase('ruleForm')\"\n          >确定</el-button>\n          <el-button\n            v-if=\"title == 'edit'\"\n            type=\"primary\"\n            @click=\"submitTestCase('ruleForm')\"\n          >更新</el-button>\n        </el-form-item>\n      </el-form>\n      <api-list-dialog v-if=\"dialogFlag\" @getApiData=\"getApiData\" @cancel=\"closeApiListDialog\" />\n      <demand-list-dialog v-if=\"dialogDemandFlag\" @getDemandInfo=\"getDemandInfo\" @cancel=\"closeDemandDialog\" />\n    </div>\n    <el-drawer\n      :title=\"apiDetailTitle\"\n      :visible.sync=\"drawer\"\n      direction=\"rtl\"\n      size=\"55%\"\n      :append-to-body=\"true\"\n    >\n      <api-dialog v-if=\"drawer\" :title=\"apiDetailTitle\" :cid=\"currentApiId\" @close=\"closeDrawer()\" />\n    </el-drawer>\n    <demand-detail-dialog v-if=\"dialogDemandDetailFlag\" :title=\"demandDetailTitle\" :did=\"currentDemandId\" @cancel=\"closeDemandDialog\" />\n  </el-dialog>\n</template>\n\n<script>\nimport { projectList } from '@/api/projects'\nimport { getModuleTree } from '@/api/modules'\nimport { createTestCase, getTestCasesDetail, updateTestCase } from '@/api/cases'\nimport { getToken } from '@/utils/auth'\nimport DemandListDialog from '@/components/Cases/demandListDialog'\nimport DemandDetailDialog from '@/components/Cases/demandDetailDialog'\nimport ApiListDialog from '@/components/Cases/apiListDialog'\nimport ApiDialog from '@/components/Api/apiDialog'\nimport E from 'wangeditor'\nimport hljs from 'highlight.js'\n\nexport default {\n  name: 'DemandDialog',\n  components: {\n    ApiListDialog,\n    ApiDialog,\n    DemandListDialog,\n    DemandDetailDialog\n  },\n  filters: {\n    caseType(value) {\n      if (value === 1) {\n        return '功能测试用例'\n      } else if (value === 2) {\n        return '接口测试用例'\n      } else {\n        return '未知类型'\n      }\n    },\n    testLabel(value) {\n      if (value === 1) {\n        return '正向场景测试用例'\n      } else if (value === 2) {\n        return '异常场景测试用例'\n      } else {\n        return ''\n      }\n    },\n    caseImportance(value) {\n      if (value === 1) {\n        return 'P0'\n      } else if (value === 2) {\n        return 'P1'\n      } else if (value === 3) {\n        return 'P2'\n      } else if (value === 4) {\n        return 'P3'\n      } else {\n        return ''\n      }\n    },\n    priorityType(value) {\n      if (value === 1) {\n        return '高'\n      } else if (value === 2) {\n        return '中'\n      } else if (value === 3) {\n        return '低'\n      } else {\n        return ''\n      }\n    },\n    requirementsType(value) {\n      if (value === 'business') {\n        return '业务类需求'\n      } else if (value === 'improve') {\n        return 'Bug改进类需求'\n      } else if (value === 'technical') {\n        return '技术类需求'\n      } else {\n        return ''\n      }\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    case: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      showTitle: '',\n      dialogVisible: true,\n      testCaseForm: {\n        name: '',\n        version_number: [],\n        project_id: '',\n        module_id: 0,\n        test_label: '',\n        type: '',\n        importance: '',\n        priority: '',\n        precondition: '',\n        test_steps: [],\n        remark: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入需求名称', trigger: 'blur' }\n        ]\n      },\n      moduleValue: null,\n      moduleData: [],\n      expandOnClickNode: true,\n      treeProps: {\n        children: 'children',\n        label: 'label'\n      },\n      projectValue: '',\n      projectLabel: '',\n      projectOption: [],\n      testLableValue: '',\n      testLableLabel: '',\n      testLableOption: [\n        {\n          value: 1,\n          label: '正向场景测试用例'\n        },\n        {\n          value: 2,\n          label: '异常场景测试用例'\n        }\n      ],\n      typeValue: '',\n      typeLabel: '',\n      typeOption: [\n        {\n          value: 1,\n          label: '功能测试用例'\n        },\n        {\n          value: 2,\n          label: '接口测试用例'\n        }\n      ],\n      importanceValue: '',\n      importanceLabel: '',\n      importanceOption: [\n        {\n          value: 1,\n          label: 'P0'\n        },\n        {\n          value: 2,\n          label: 'P1'\n        },\n        {\n          value: 3,\n          label: 'P2'\n        },\n        {\n          value: 4,\n          label: 'P3'\n        }\n      ],\n      priorityValue: '',\n      priorityLabel: '',\n      priorityOption: [\n        {\n          value: 1,\n          label: '高'\n        },\n        {\n          value: 2,\n          label: '中'\n        },\n        {\n          value: 3,\n          label: '低'\n        }\n      ],\n      testStepData: [\n        {\n          test_step: '',\n          test_data: '',\n          expected_result: '',\n          api_id: 0,\n          api_name: '',\n          remark: '',\n          isDelete: true\n        }\n      ],\n      currentIndex: 0,\n      currentApiId: 0,\n      apiDetailTitle: '',\n      versionNumberData: [],\n      versionNumbers: [],\n      fileList: [],\n      imageVisible: false,\n      disabled: false,\n      editor_precondition: null,\n      editor_remark: null,\n      editor_demand: null,\n      dialogFlag: false,\n      drawer: false,\n      dialogDemandFlag: false,\n      currentDemandId: 0,\n      demandDetailTitle: '',\n      dialogDemandDetailFlag: false\n    }\n  },\n  created() {\n    if (this.title === 'detail') {\n      this.showTitle = '测试用例详情'\n      this.getTestCaseDetail()\n    } else {\n      this.showTitle = '创建测试用例'\n      // 组件打开则进行加载\n      // 使用时钟函数进行延迟，否则获取不到元素 -- 等元素加载完成后再进行创建E\n      this.$nextTick(() => {\n        this.editor_precondition = new E('#editor_precondition')\n        this.editor_precondition.highlight = hljs\n        // 富文本组价设置图片上传接口\n        this.editor_precondition.config.uploadImgServer = '/api/commons/editor/file/image'\n        this.editor_precondition.config.uploadFileName = 'file'\n        this.editor_precondition.config.uploadImgHeaders = {\n          Authorization: 'Bearer ' + getToken()\n        }\n        // 富文本组价设置视频上传接口\n        this.editor_precondition.config.uploadVideoServer = '/api/commons/editor/file/video'\n        this.editor_precondition.config.uploadVideoName = 'file'\n        this.editor_precondition.config.uploadVideoHeaders = {\n          Authorization: 'Bearer ' + getToken()\n        }\n        // 创建\n        this.editor_precondition.create()\n\n        this.editor_remark = new E('#editor_remark')\n        this.editor_remark.highlight = hljs\n        // 富文本组价设置图片上传接口\n        this.editor_remark.config.uploadImgServer = '/api/commons/editor/file/image'\n        this.editor_remark.config.uploadFileName = 'file'\n        this.editor_remark.config.uploadImgHeaders = {\n          Authorization: 'Bearer ' + getToken()\n        }\n        // 富文本组价设置视频上传接口\n        this.editor_remark.config.uploadVideoServer = '/api/commons/editor/file/video'\n        this.editor_remark.config.uploadVideoName = 'file'\n        this.editor_remark.config.uploadVideoHeaders = {\n          Authorization: 'Bearer ' + getToken()\n        }\n        this.editor_remark.create()\n      })\n      if (this.title === 'edit') {\n        this.showTitle = '编辑测试用例'\n        this.getTestCaseDetail()\n      }\n    }\n  },\n  mounted() {\n    this.initProjectList()\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n      if (this.title !== 'detail') {\n        // 关闭弹窗，销毁E\n        this.editor_precondition.destroy()\n        this.editor_precondition = null\n\n        this.editor_remark.destroy()\n        this.editor_remark = null\n      }\n    },\n    // 初始化项目列表\n    async initProjectList() {\n      const req_body = {\n        'name': ''\n      }\n      const resp = await projectList(this.req, req_body)\n      if (resp.success === true) {\n        // 在初始化项目信息，同时初始化项目下的模块信息\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name\n          })\n        }\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 查询模块列表\n    async initModuleList(pid) {\n      const resp = await getModuleTree(pid)\n      if (resp.success === true) {\n        this.moduleData = resp.result\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 修改选中项目\n    changeProject(value) {\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n      this.testCaseForm.project_id = value\n      this.initModuleList(value)\n    },\n    // 点击节点的响应\n    handleNodeClick(node) {\n      this.moduleValue = node.label\n      this.$refs.selectTree.blur()\n      this.testCaseForm.module_id = node.id\n    },\n    changeTestLable(value) {\n      this.testLableValue = value\n      this.testLableLabel = this.testLableOption.find(\n        (item) => item.value === value\n      ).label\n      this.testCaseForm.test_label = value\n    },\n    changeType(value) {\n      this.typeValue = value\n      this.typeLabel = this.typeOption.find(\n        (item) => item.value === value\n      ).label\n      this.testCaseForm.type = value\n    },\n    changeImportance(value) {\n      this.importanceValue = value\n      this.importanceLabel = this.importanceOption.find(\n        (item) => item.value === value\n      ).label\n      this.testCaseForm.importance = value\n    },\n    changePriority(value) {\n      this.priorityValue = value\n      this.priorityLabel = this.priorityOption.find(\n        (item) => item.value === value\n      ).label\n      this.testCaseForm.priority = value\n    },\n    // 添加测试用例步骤\n    addTestSteps() {\n      // 新添加，将原有的不可删除变更为可删除\n      this.testStepData[0].isDelete = false\n      const rowData = {\n        test_step: '',\n        test_data: '',\n        expected_result: '',\n        api_id: 0,\n        api_name: '',\n        remark: '',\n        isDelete: false\n      }\n      this.testStepData.push(rowData)\n    },\n    deleteTestSteps(index) {\n      this.testStepData.splice(index, 1)\n      // 删除行，删除的只剩下1时，可删除变更为不可删除\n      if (this.testStepData.length === 1) {\n        this.testStepData[0].isDelete = true\n      }\n    },\n    selectApi(index) {\n      this.currentIndex = index\n      this.dialogFlag = true\n    },\n    clearApiId(row) {\n      row.api_id = 0\n    },\n    closeApiListDialog() {\n      this.dialogFlag = false\n    },\n    getApiData(data) {\n      const apiData = this.testStepData[this.currentIndex]\n      apiData.api_id = data.id\n      apiData.api_name = data.name\n    },\n    showApiDetail(row) {\n      this.drawer = true\n      this.currentApiId = row.api_id\n      this.apiDetailTitle = '接口详情'\n    },\n    // 传递子组件，关闭抽屉\n    closeDrawer() {\n      this.drawer = false\n    },\n    // 添加需求\n    addDemand() {\n      this.dialogDemandFlag = true\n    },\n    closeDemandDialog() {\n      this.dialogDemandFlag = false\n      this.dialogDemandDetailFlag = false\n    },\n    getDemandInfo(data) {\n      this.versionNumberData.push(data)\n      this.versionNumbers.push(data.version_number)\n    },\n    showDemand(row) {\n      this.dialogDemandDetailFlag = true\n      this.demandDetailTitle = '需求详情'\n      this.currentDemandId = row.id\n    },\n    deleteDemand(index) {\n      this.versionNumberData.splice(index, 1)\n    },\n    // 创建测试用例\n    submitTestCase(formName) {\n      this.$refs[formName].validate((valid) => {\n        this.testCaseForm.version_number = this.versionNumbers\n        this.testCaseForm.test_steps = this.testStepData\n        const pre_content = this.editor_precondition.txt.html()\n        this.testCaseForm.precondition = pre_content\n        const remark_content = this.editor_remark.txt.html()\n        this.testCaseForm.remark = remark_content\n        if (valid) {\n          if (this.title === 'create') {\n            createTestCase(this.testCaseForm).then((resp) => {\n              if (resp.success === true) {\n                this.closeDialog()\n                this.$message.success('创建成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          } else if (this.title === 'edit') {\n            updateTestCase(this.case, this.testCaseForm).then((resp) => {\n              if (resp.success === true) {\n                this.closeDialog()\n                this.$message.success('更新成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          }\n        }\n      })\n    },\n    async getTestCaseDetail() {\n      const resp = await getTestCasesDetail(this.case)\n      if (resp.success === true) {\n        const res = resp.result\n        this.testCaseForm = res\n        if (this.title === 'edit') {\n          this.projectValue = res.project_id\n          this.initModuleList(res.project_id)\n          this.moduleValue = res.module_name\n          this.testLableValue = res.test_label\n          this.typeValue = res.type\n          this.importanceValue = res.importance\n          this.priorityValue = res.priority\n          const resSteps = res.test_steps\n          const steps = []\n          for (let i = 0; i < resSteps.length; i++) {\n            const stepDict = resSteps[i]\n            stepDict['isDelete'] = false\n            steps.push(stepDict)\n          }\n          this.currentApiId = res.api_id\n          this.testStepData = steps\n          this.versionNumberData = res.version_info\n          this.currentDemandId = res.version_info.id\n          this.versionNumbers = JSON.parse(res.version_number.replace(/'/g, '\"'))\n          // 设置富文本中获取的数据\n          // 前置条件\n          this.editor_precondition.txt.html(resp.result.precondition)\n          this.editor_remark.txt.html(resp.result.remark)\n        }\n        this.$message.success('查询成功')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n\n#editor_precondition {\n  border: 1px solid #ccc;\n  z-index: 100; /* 按需定义 */\n}\n\n#editor_remark {\n  border: 1px solid #ccc;\n  z-index: 100; /* 按需定义 */\n}\n\n.cell-container {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.custom-button {\n  margin-left: 10px; /* 设置按钮距离右边的间距 */\n}\n\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2cA,SAAAA,WAAA;AACA,SAAAC,aAAA;AACA,SAAAC,cAAA,EAAAC,kBAAA,EAAAC,cAAA;AACA,SAAAC,QAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,kBAAA;AACA,OAAAC,aAAA;AACA,OAAAC,SAAA;AACA,OAAAC,CAAA;AACA,OAAAC,IAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL,aAAA,EAAAA,aAAA;IACAC,SAAA,EAAAA,SAAA;IACAH,gBAAA,EAAAA,gBAAA;IACAC,kBAAA,EAAAA;EACA;EACAO,OAAA;IACAC,QAAA,WAAAA,SAAAC,KAAA;MACA,IAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA;QACA;MACA;IACA;IACAC,SAAA,WAAAA,UAAAD,KAAA;MACA,IAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA;QACA;MACA;IACA;IACAE,cAAA,WAAAA,eAAAF,KAAA;MACA,IAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA;QACA;MACA;IACA;IACAG,YAAA,WAAAA,aAAAH,KAAA;MACA,IAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA;QACA;MACA;IACA;IACAI,gBAAA,WAAAA,iBAAAJ,KAAA;MACA,IAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA,WAAAA,KAAA;QACA;MACA;QACA;MACA;IACA;EACA;EACAK,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,IAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;MACAC,aAAA;MACAC,YAAA;QACAnB,IAAA;QACAoB,cAAA;QACAC,UAAA;QACAC,SAAA;QACAC,UAAA;QACAZ,IAAA;QACAa,UAAA;QACAC,QAAA;QACAC,YAAA;QACAC,UAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACA7B,IAAA,GACA;UAAA8B,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,WAAA;MACAC,UAAA;MACAC,iBAAA;MACAC,SAAA;QACAC,QAAA;QACAC,KAAA;MACA;MACAC,YAAA;MACAC,YAAA;MACAC,aAAA;MACAC,cAAA;MACAC,cAAA;MACAC,eAAA,GACA;QACAxC,KAAA;QACAkC,KAAA;MACA,GACA;QACAlC,KAAA;QACAkC,KAAA;MACA,EACA;MACAO,SAAA;MACAC,SAAA;MACAC,UAAA,GACA;QACA3C,KAAA;QACAkC,KAAA;MACA,GACA;QACAlC,KAAA;QACAkC,KAAA;MACA,EACA;MACAU,eAAA;MACAC,eAAA;MACAC,gBAAA,GACA;QACA9C,KAAA;QACAkC,KAAA;MACA,GACA;QACAlC,KAAA;QACAkC,KAAA;MACA,GACA;QACAlC,KAAA;QACAkC,KAAA;MACA,GACA;QACAlC,KAAA;QACAkC,KAAA;MACA,EACA;MACAa,aAAA;MACAC,aAAA;MACAC,cAAA,GACA;QACAjD,KAAA;QACAkC,KAAA;MACA,GACA;QACAlC,KAAA;QACAkC,KAAA;MACA,GACA;QACAlC,KAAA;QACAkC,KAAA;MACA,EACA;MACAgB,YAAA,GACA;QACAC,SAAA;QACAC,SAAA;QACAC,eAAA;QACAC,MAAA;QACAC,QAA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"}]}