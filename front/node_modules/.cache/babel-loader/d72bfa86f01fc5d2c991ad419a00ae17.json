{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js!/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerApiDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerApiDialog.vue","mtime":1687688378775},{"path":"/Users/lvjing/sorcery-management-platform/front/babel.config.js","mtime":1679466191236},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getModuleTree","httpRunnerProjectList","getApisList","HttpRunnerCreateApiDialog","components","props","data","showTitle","dialogVisible","apiForm","name","httprunner_project_id","base_api_id","moduleData","apiData","apiNum","casesData","currentModuleId","apiInfoList","projectValue","projectLabel","projectOption","projectId","req","page","size","total","createApiDialog","mounted","initHttpRunnerProjectList","methods","closeDialog","$emit","dialogClose","value","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","i","wrap","_callee$","_context","prev","next","sent","success","items","length","push","id","label","project_id","$message","error","stop","changeProject","find","item","getModuleList","pid","_this2","_callee2","_callee2$","_context2","result","nodeClick","getModuleApiList","mid","_this3","_callee3","_callee3$","_context3","$nextTick","rows","j","forEach","row","$refs","multipleTable","toggleRowSelection","message","selectionAllApi","val","selectiveApi","selectionOneApi","multipleSelection","selective","module_id","calculationApi","showHttpRunnerApi","handleCurrentChange"],"sources":["src/components/HttpRunner/httpRunnerApiDialog.vue"],"sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"900px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      ref=\"ruleForm\"\n      :model=\"apiForm\"\n      label-width=\"120px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"HttpRunner项目\">\n        <el-select\n          v-model=\"projectValue\"\n          placeholder=\"请选择HttpRunner项目名称\"\n          style=\"width: 100%;\"\n          @change=\"changeProject\"\n        >\n          <el-option\n            v-for=\"item in projectOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <div style=\"margin-top: 10px\">\n          <el-card style=\"width: 28%; height: 300px; float: left\">\n            <el-tree\n              :data=\"moduleData\"\n              node-key=\"id\"\n              default-expand-all\n              :expand-on-click-node=\"false\"\n              @node-click=\"nodeClick\"\n            >\n              <span slot-scope=\"{ node }\" class=\"custom-tree-node\">\n                <span style=\"float: left\">{{ node.label }}</span>\n              </span>\n            </el-tree>\n          </el-card>\n          <div style=\"width: 70%; float: right\">\n            <el-table\n              ref=\"multipleTable\"\n              :data=\"apiData\"\n              border\n              style=\"width: 100%\"\n              @select=\"selectionOneApi\"\n              @select-all=\"selectionAllApi\"\n            >\n              <el-table-column type=\"selection\" width=\"55\" />\n              <el-table-column prop=\"id\" label=\"接口ID\" width=\"70\" />\n              <el-table-column prop=\"name\" label=\"接口名称\" width=\"150\" />\n              <el-table-column prop=\"api_path\" label=\"接口地址\" />\n            </el-table>\n            <!--分页-->\n            <div style=\"width: 100%; text-align: right\">\n              <el-pagination\n                background\n                layout=\"prev, pager, next\"\n                :page-size=\"req.size\"\n                :total=\"total\"\n                @current-change=\"handleCurrentChange\"\n              />\n            </div>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <div class=\"dialog-footer\">\n          已选择【{{ apiNum }}】接口\n          <el-button @click=\"closeDialog()\">取消</el-button>\n          <el-button\n            type=\"primary\"\n            @click=\"showHttpRunnerApi\"\n          >创建HttpRunner工程接口</el-button>\n        </div>\n      </el-form-item>\n    </el-form>\n    <http-runner-create-api-dialog v-if=\"createApiDialog\" :modal=\"false\" :datas=\"apiInfoList\" :project=\"apiForm.httprunner_project_id\" @visible=\"dialogClose\" @cancel=\"closeDialog\" />\n  </el-dialog>\n</template>\n\n<script>\nimport { getModuleTree } from '@/api/modules'\nimport { httpRunnerProjectList } from '@/api/httprunner'\nimport { getApisList } from '@/api/apis'\nimport HttpRunnerCreateApiDialog from './httpRunnerCreateApiDialog'\n\nexport default {\n  components: { HttpRunnerCreateApiDialog },\n  props: {\n  },\n  data() {\n    return {\n      showTitle: '选择接口',\n      dialogVisible: true,\n      apiForm: {\n        name: '',\n        httprunner_project_id: '',\n        base_api_id: ''\n      },\n      moduleData: [],\n      apiData: [],\n      apiNum: 0,\n      casesData: [],\n      currentModuleId: 0,\n      apiInfoList: [],\n      projectValue: '',\n      projectLabel: '',\n      projectOption: [],\n      projectId: 0,\n      req: {\n        page: 1,\n        size: 10\n      },\n      // 分页页数\n      total: 10,\n      createApiDialog: false\n    }\n  },\n  mounted() {\n    this.initHttpRunnerProjectList()\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n    },\n    dialogClose(value) {\n      if (value === false) {\n        this.createApiDialog = false\n      }\n    },\n    async initHttpRunnerProjectList() {\n      const resp = await httpRunnerProjectList(this.req)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name,\n            projectId: resp.items[i].project_id\n          })\n        }\n        this.total = resp.total\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    changeProject(value) {\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n      this.projectId = this.projectOption.find(\n        (item) => item.value === value\n      ).projectId\n      this.apiForm.httprunner_project_id = value\n      this.getModuleList(this.projectId)\n    },\n    // 查询模块列表\n    async getModuleList(pid) {\n      const resp = await getModuleTree(pid)\n      if (resp.success === true) {\n        this.moduleData = resp.result\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 点击模块\n    nodeClick(data) {\n      this.currentModuleId = data.id\n      this.getModuleApiList(data.id)\n    },\n    // 初始化模块下接口数据\n    async getModuleApiList(mid) {\n      const resp = await getApisList(mid, this.req)\n      if (resp.success === true) {\n        this.apiData = resp.items\n        // this.$message.success('查询成功！')\n        // 记录模块下，已选中的接口\n        this.$nextTick(() => {\n          const rows = []\n          for (let i = 0; i < this.apiInfoList.length; i++) {\n            for (let j = 0; j < this.apiData.length; j++) {\n              if (this.apiInfoList[i].id === this.apiData[j].id) {\n                rows.push(this.apiData[j])\n              }\n            }\n          }\n          rows.forEach((row) => {\n            this.$refs.multipleTable.toggleRowSelection(row)\n          })\n        })\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    // 选择所有用例\n    selectionAllApi(val, row) {\n      this.selectiveApi(val)\n    },\n    // 选择一条用例\n    selectionOneApi(val, row) {\n      this.selectiveApi(val)\n    },\n    // 公共方法：选择接口\n    selectiveApi(multipleSelection) {\n      var selective = false\n      for (let i = 0; i < this.apiInfoList.length; i++) {\n        if (this.apiInfoList[i].module_id === this.currentModuleId) {\n          selective = true\n          this.apiInfoList = multipleSelection\n        }\n      }\n      if (selective === false) {\n        for (let i = 0; i < multipleSelection.length; i++) {\n          this.apiInfoList.push(multipleSelection[i])\n        }\n      }\n      this.calculationApi()\n    },\n    // 公共方法：计算用例数量\n    calculationApi() {\n      this.apiNum = 0\n      this.apiNum += this.apiInfoList.length\n    },\n    showHttpRunnerApi() {\n      this.createApiDialog = true\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      this.req.page = val\n      this.getModuleApiList(this.currentModuleId)\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n</style>\n"],"mappings":"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"}]}