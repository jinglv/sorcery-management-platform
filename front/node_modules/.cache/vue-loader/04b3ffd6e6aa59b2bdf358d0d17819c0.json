{"remainingRequest":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeanlv/sorcery-management-platform/front/src/views/cases/demand/index.vue?vue&type=style&index=0&id=3764b418&scoped=true&lang=css&","dependencies":[{"path":"/Users/jeanlv/sorcery-management-platform/front/src/views/cases/demand/index.vue","mtime":1702621109518},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1698032215256},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1698032217228},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1698032216585},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1698032217227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmN1c3RvbS10cmVlLW5vZGUgewogIHdpZHRoOiAxMDAlOwp9Ci5sYWJlbC10aXRsZSB7CiAgZm9udC1mYW1pbHk6ICJMaWJlcmF0aW9uIE1vbm8iLCBtb25vc3BhY2UsIHNlcmlmLCBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMjRweDsKfQoubGFiZWwtdGV4dCB7CiAgZm9udC1mYW1pbHk6ICJMdWNpZGEgQ2FsbGlncmFwaHkiLCBjdXJzaXZlLCBzZXJpZiwgc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDIwcHg7CiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsKICBmbG9hdDogbGVmdDsKICBtYXJnaW4tdG9wOiA1cHg7Cn0KLmZsZXgtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4Owp9CgouZWwtY29udGFpbmVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbGluZS1oZWlnaHQ6IDM4cHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/cases/demand","sourcesContent":["<template>\n  <div class=\"demand\">\n    <div class=\"filter-container\">\n      <el-row :gutter=\"24\">\n        <el-col :span=\"6\">\n          <div class=\"demo-input-suffix\">\n            需求名称:\n            <el-input v-model=\"demandSearchFrom.name\" placeholder=\"请输入需求名称\" style=\"width: 64%;margin-right: 5px;\" class=\"filter-item\" />\n          </div>\n        </el-col>\n        <el-col :span=\"6\">\n          <div class=\"demo-input-suffix\">\n            项目名称:\n            <el-select\n              v-model=\"projectValue\"\n              placeholder=\"请选择用例类型\"\n              @change=\"changeProject\"\n            >\n              <el-option\n                v-for=\"item in projectOption\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </div>\n        </el-col>\n        <el-col :span=\"6\">\n          <div class=\"demo-input-suffix\">\n            版本号:\n            <el-input v-model=\"demandSearchFrom.version_number\" placeholder=\"请输入版本号\" style=\"width: 64%;margin-right: 5px;\" class=\"filter-item\" />\n          </div>\n        </el-col>\n        <el-col :span=\"6\">\n          <div class=\"demo-input-suffix\">\n            需求类型:\n            <el-select\n              v-model=\"demandValue\"\n              placeholder=\"请选择需求类型\"\n              @change=\"demandType\"\n            >\n              <el-option\n                v-for=\"item in demandOption\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </div>\n        </el-col>\n      </el-row>\n      <div style=\"text-align: right;margin-top: 10px;\">\n        <el-button class=\"filter-item\" icon=\"el-icon-delete\" @click=\"clearSearch()\">重置</el-button>\n        <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"getDemandList()\">搜索</el-button>\n      </div>\n    </div>\n    <div style=\"text-align: left; margin-top: 10px;\">\n      <el-button class=\"el-icon-circle-plus-outline\" type=\"primary\" @click=\"createDemand()\">创建需求</el-button>\n    </div>\n    <div style=\"margin-top: 10px\">\n      <el-table\n        :data=\"demandDate\"\n        border\n        style=\"width: 100%\"\n      >\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"name\" label=\"需求名称\" width=\"auto\" />\n        <el-table-column prop=\"project.name\" label=\"项目\" width=\"auto\" />\n        <el-table-column prop=\"version_number\" label=\"版本号\" width=\"auto\" />\n        <el-table-column prop=\"requirements_type\" label=\"需求类型\" width=\"auto\">\n          <template slot-scope=\"{ row }\">\n            {{ row.requirements_type | requirementsType }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"requirements_detail\" label=\"需求详情\" width=\"auto\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"text\"\n              size=\"small\"\n              @click=\"demandRowInfo(scope.row)\"\n            >显示详情内容</el-button>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"create_time\" label=\"创建时间\" width=\"auto\" />\n        <el-table-column fixed=\"right\" label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"text\"\n              @click=\"editDemandInfo(scope.row)\"\n            >编辑</el-button>\n            <el-button\n              type=\"text\"\n              @click=\"deleteDemandInfo(scope.row)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!--分页-->\n      <div style=\"width: 100%; text-align: right\">\n        <el-pagination\n          background\n          :total=\"total\"\n          :page-size=\"req.size\"\n          layout=\"total, prev, pager, next\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </div>\n    <!-- 创建需求 -->\n    <demand-dialog\n      v-if=\"dialogFlag\"\n      :title=\"demandTitle\"\n      :did=\"currentDemandId\"\n      @cancel=\"closeDialog\"\n    />\n    <demand-detail-dialog v-if=\"dialogDemandDetailFlag\" :title=\"demandDetailTitle\" :did=\"currentDemandId\" @cancel=\"closeDialog\" />\n  </div>\n</template>\n<script>\nimport { projectList } from '@/api/projects'\nimport { getDemandList, deleteDemand } from '@/api/cases'\nimport DemandDialog from '@/components/Cases/demandDialog'\nimport DemandDetailDialog from '@/components/Cases/demandDetailDialog'\n\nexport default {\n  name: 'DemandManage',\n  components: {\n    DemandDialog,\n    DemandDetailDialog\n  },\n  filters: {\n    requirementsType(value) {\n      if (value === 'business') {\n        return '业务类需求'\n      } else if (value === 'improve') {\n        return 'Bug改进类需求'\n      } else if (value === 'technical') {\n        return '技术类需求'\n      } else {\n        return '未知类型'\n      }\n    }\n  },\n  data() {\n    return {\n      demandTitle: '',\n      projectValue: '',\n      projectLabel: '',\n      projectOption: [],\n      demandDate: [],\n      dialogFlag: false,\n      demandSearchFrom: {\n        'name': '',\n        'project_id': 0,\n        'version_number': '',\n        'requirements_type': '',\n        'create_time': ''\n      },\n      demandValue: '',\n      demandLabel: '',\n      demandOption: [\n        {\n          value: 'business',\n          label: '业务类需求'\n        },\n        {\n          value: 'improve',\n          label: '改进类需求'\n        },\n        {\n          value: 'technical',\n          label: '技术类需求'\n        }\n      ],\n      currentDemandId: 0,\n      dialogDemandDetailFlag: false,\n      demandDetailTitle: '',\n      req: {\n        page: 1,\n        size: 10\n      },\n      // 分页页数\n      total: 10\n    }\n  },\n  mounted() {\n    this.initProjectList()\n    this.getDemandList()\n  },\n  methods: {\n    // 创建需求\n    createDemand() {\n      this.dialogFlag = true\n      this.demandTitle = 'create'\n    },\n    demandType(value) {\n      this.demandValue = value\n      this.demandLabel = this.demandOption.find(\n        (item) => item.value === value\n      ).label\n      this.demandSearchFrom.requirements_type = value\n    },\n    // 初始化项目列表\n    async initProjectList() {\n      const req_body = {\n        'name': ''\n      }\n      const resp = await projectList(this.req, req_body)\n      if (resp.success === true) {\n        // 在初始化项目信息，同时初始化项目下的模块信息\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name\n          })\n        }\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 修改选中项目\n    changeProject(value) {\n      console.log('change project -->', value)\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n      this.demandSearchFrom.project_id = value\n    },\n    // 获取需求列表\n    async getDemandList() {\n      const resp = await getDemandList(this.req, JSON.stringify(this.demandSearchFrom))\n      if (resp.success === true) {\n        this.total = resp.total\n        for (let i = 0; i < resp.items.length; i++) {\n          resp.items[i].create_time = this.$moment(\n            resp.items[i].create_time\n          ).format('YYYY-MM-DD HH:mm:ss')\n        }\n        this.demandDate = resp.items\n        this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 创建模块关闭\n    closeDialog() {\n      this.dialogFlag = false\n      this.dialogDemandDetailFlag = false\n      this.getDemandList()\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      // console.log(`当前页: ${val}`)\n      this.req.page = val\n      // this.initProjectList()\n    },\n    // 清除搜索\n    clearSearch() {\n      this.demandSearchFrom.name = ''\n      this.demandSearchFrom.version_number = ''\n      this.demandSearchFrom.project_id = 0\n      this.projectValue = ''\n      this.demandSearchFrom.requirements_type = ''\n      this.demandValue = ''\n      this.getDemandList()\n    },\n    // 查看需求详情\n    demandRowInfo(row) {\n      // 点击用例，获取用例id\n      this.currentDemandId = row.id\n      this.dialogDemandDetailFlag = true\n      this.demandDetailTitle = '需求详情'\n    },\n    // 编辑测试用例\n    editDemandInfo(row) {\n      // 点击用例，获取用例id\n      this.currentDemandId = row.id\n      this.dialogFlag = true\n      this.demandTitle = 'edit'\n    },\n    // 删除需求信息\n    deleteDemandInfo(row) {\n      deleteDemand(row.id).then((resp) => {\n        this.$confirm('删除任务, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n          center: true\n        }).then(() => {\n          if (resp.success === true) {\n            this.getDemandList()\n          } else {\n            this.$message.error(resp.error.msg)\n          }\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n.custom-tree-node {\n  width: 100%;\n}\n.label-title {\n  font-family: \"Liberation Mono\", monospace, serif, sans-serif;\n  font-size: 24px;\n}\n.label-text {\n  font-family: \"Lucida Calligraphy\", cursive, serif, sans-serif;\n  font-size: 20px;\n  font-weight: bolder;\n  float: left;\n  margin-top: 5px;\n}\n.flex-container {\n  display: flex;\n}\n\n.el-container {\n  text-align: center;\n  line-height: 38px;\n}\n</style>\n"]}]}