{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/views/tests/data/index.vue?vue&type=style&index=0&id=50587d16&lang=css&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/views/tests/data/index.vue","mtime":1687255264893},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1679466708477},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1679466707591},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1679466707836},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGV4dCB7CiAgZm9udC1zaXplOiAxNHB4Owp9CgouaXRlbSB7CiAgcGFkZGluZzogMThweCAwOwp9CgouYm94LWNhcmQgewogIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0QA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/tests/data","sourcesContent":["<template>\n  <div class=\"test-data\">\n    <div style=\"height: 50px; margin-top: 10px;\">\n      <span style=\"float: left; line-height: 36px;\">基础数据类型：</span>\n      <el-cascader\n        v-model=\"testDataType\"\n        :options=\"options\"\n        :props=\"props\"\n        clearable\n        placeholder=\"请输入基础数据类型\"\n        style=\"width: 45%; float: left\"\n      />\n      <el-button\n        type=\"primary\"\n        style=\"float: left; margin-left: 20px;\"\n        @click=\"templateClick()\"\n      >生成</el-button>\n      <el-button\n        style=\"float:right\"\n        type=\"text\"\n        @click=\"copyBaseData()\"\n      >复制</el-button>\n    </div>\n    <json-viewer ref=\"base\" :value=\"dataResult\" :expand-depth=\"5\" copyable boxed />\n    <div class=\"test_data_time\" style=\"margin-top: 30px;\">\n      <div style=\"height: 50px; margin-top: 10px;\">\n        <span>时间数据类型：</span>\n        <el-select v-model=\"time_value\" placeholder=\"请选择...\" @change=\"changeTimeData\">\n          <el-option\n            v-for=\"item in timeTypeOption\"\n            :key=\"item.time_value\"\n            :label=\"item.label\"\n            :value=\"item.time_value\"\n          />\n        </el-select>\n        <el-button\n          v-if=\"time_value !== undefined\"\n          style=\"margin-left: 20px;\"\n          type=\"primary\"\n          @click=\"changeTimeData()\"\n        >再点一下</el-button>\n      </div>\n      <div class=\"div-line\" style=\"height: 100px\">\n        <el-input\n          v-model=\"getTimeData\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"生成的数据\"\n        />\n      </div>\n    </div>\n    <div class=\"test_random_number\">\n      <div style=\"height: 50px; margin-top: 10px;\">\n        <span style=\"float: left; line-height: 36px\">随机生成数字：</span>\n        <el-input\n          v-model=\"numberLength\"\n          placeholder=\"请输入生成随机数字的长度\"\n          style=\"width: 20%; float: left\"\n        />\n        <el-button\n          type=\"primary\"\n          style=\"float: left; margin-left: 20px;\"\n          @click=\"sendRandomNumber()\"\n        >生成</el-button>\n      </div>\n      <div class=\"div-line\" style=\"height: 100px\">\n        <el-input\n          v-model=\"numberResult\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"生成的数据\"\n        />\n      </div>\n    </div>\n    <div class=\"test_random_cn\">\n      <div style=\"height: 50px; margin-top: 10px;\">\n        <span style=\"float: left; line-height: 36px\">随机生成汉字：</span>\n        <el-input\n          v-model=\"cnLength\"\n          placeholder=\"请输入生成随机汉字的长度\"\n          style=\"width: 20%; float: left\"\n        />\n        <el-button\n          type=\"primary\"\n          style=\"float: left; margin-left: 20px;\"\n          @click=\"sendRandomCn()\"\n        >生成</el-button>\n      </div>\n      <div class=\"div-line\" style=\"height: 100px\">\n        <el-input\n          v-model=\"cnResult\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"生成的数据\"\n        />\n      </div>\n    </div>\n    <div class=\"test_random_letter\">\n      <div style=\"height: 50px; margin-top: 10px;\">\n        <span style=\"float: left; line-height: 36px\">随机生成字母：</span>\n        <el-input\n          v-model=\"letterLength\"\n          placeholder=\"请输入生成随机字母的长度\"\n          style=\"width: 20%; float: left\"\n        />\n        <el-button\n          type=\"primary\"\n          style=\"float: left; margin-left: 20px;\"\n          @click=\"sendRandomLetter()\"\n        >生成</el-button>\n      </div>\n      <div class=\"div-line\" style=\"height: 100px\">\n        <el-input\n          v-model=\"letterResult\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"生成的数据\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport jsonViewer from 'vue-json-viewer/ssr'\nimport 'vue-json-viewer/style.css'\nimport { getTestData, getTimeData, getRandomNumberData, getRandomCnData, getRandomLetterData } from '@/api/tests'\n\nexport default {\n  components: {\n    jsonViewer\n  },\n  data() {\n    return {\n      testDataType: '',\n      props: { multiple: true },\n      options: [\n        {\n          value: 'name',\n          label: '中文姓名'\n        },\n        {\n          value: 'telephone',\n          label: '电话号码'\n        },\n        {\n          value: 'address',\n          label: '地址'\n        },\n        {\n          value: 'id_card',\n          label: '身份证号码'\n        },\n        {\n          value: 'country',\n          label: '国家'\n        },\n        {\n          value: 'province',\n          label: '省'\n        },\n        {\n          value: 'city',\n          label: '市'\n        },\n        {\n          value: 'postcode',\n          label: '邮编'\n        }\n      ],\n      dataResult: '',\n      time_value: undefined,\n      timeTypeOption: [\n        {\n          time_value: 1,\n          label: '时间戳-秒'\n        },\n        {\n          time_value: 2,\n          label: '时间戳-毫秒'\n        },\n        {\n          time_value: 3,\n          label: '格式化时间 年-月-日 时:分:秒'\n        },\n        {\n          time_value: 4,\n          label: '格式化时间 年-月-日'\n        }\n      ],\n      getTimeData: '',\n      numberLength: '',\n      numberResult: '',\n      cnLength: '',\n      cnResult: '',\n      letterLength: '',\n      letterResult: ''\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    // 点击生成数据\n    async templateClick() {\n      const req = {\n        'data_type': this.testDataType.toString()\n      }\n      const resp = await getTestData(req)\n      if (resp.success === true) {\n        // this.dataResult = JSON.stringify(resp.result, null, 2)\n        this.dataResult = resp.result\n      } else {\n        this.$message.error('生成失败！')\n      }\n    },\n    copyBaseData() {\n      const input = document.createElement('base')\n      input.value = this.dataResult\n      document.body.appendChild(input)\n      input.select()\n      document.execCommand('copy')\n      document.body.removeChild(input)\n    },\n    // 选中项，生成对应的时间数据\n    changeTimeData() {\n      this.getTimeDataInfo()\n    },\n    // 选中选项，生成对应的基础数据\n    changeBaseData() {\n      this.getBaseDataInfo()\n    },\n    async getTimeDataInfo() {\n      const resp = await getTimeData(this.time_value)\n      if (resp.success === true) {\n        this.getTimeData = resp.result.time_data\n      }\n    },\n    async sendRandomNumber() {\n      const resp = await getRandomNumberData(this.numberLength)\n      if (resp.success === true) {\n        this.numberResult = resp.result.number\n      } else {\n        this.$message.error('生成失败！')\n      }\n    },\n    async sendRandomCn() {\n      const resp = await getRandomCnData(this.cnLength)\n      if (resp.success === true) {\n        this.cnResult = resp.result.cn\n      } else {\n        this.$message.error('生成失败！')\n      }\n    },\n    async sendRandomLetter() {\n      const resp = await getRandomLetterData(this.letterLength)\n      if (resp.success === true) {\n        this.letterResult = resp.result.letters\n      } else {\n        this.$message.error('生成失败！')\n      }\n    }\n  }\n}\n</script>\n\n<style>\n  .text {\n    font-size: 14px;\n  }\n\n  .item {\n    padding: 18px 0;\n  }\n\n  .box-card {\n    width: 100%;\n  }\n</style>\n"]}]}