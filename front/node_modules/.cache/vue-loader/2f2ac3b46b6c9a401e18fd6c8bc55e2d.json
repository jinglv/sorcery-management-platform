{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/Api/dictDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/Api/dictDialog.vue","mtime":1685605631236},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRGljdERpYWxvZycsCiAgcHJvcHM6IHsKICAgIGRpY3REYXRhOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHB1c2hOZXdIZWFkZXJzKGluZGV4KSB7CiAgICAgIGNvbnN0IGxpc3QgPSB0aGlzLmRpY3REYXRhCiAgICAgIGxpc3RbaW5kZXhdLnNob3cgPSAnZmFsc2UnCiAgICAgIGxpc3QucHVzaCh7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgdmFsdWU6ICcnLAogICAgICAgIHNob3c6ICd0cnVlJwogICAgICB9KQogICAgICB0aGlzLmRpY3REYXRhID0gbGlzdAogICAgfSwKICAgIGRlbGV0ZUhlYWRlcnMoaW5kZXgpIHsKICAgICAgY29uc3QgbGlzdCA9IHRoaXMuZGljdERhdGEKICAgICAgaWYgKGluZGV4ID09PSAwICYmIGxpc3QubGVuZ3RoID09PSAxKSB7CiAgICAgICAgbGlzdC5zcGxpY2UoaW5kZXgsIDEpCiAgICAgICAgbGlzdC5wdXNoKHsKICAgICAgICAgIG5hbWU6ICcnLAogICAgICAgICAgdmFsdWU6ICcnLAogICAgICAgICAgc2hvdzogJ3RydWUnCiAgICAgICAgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICBsaXN0LnNwbGljZShpbmRleCwgMSkKICAgICAgfQogICAgICBpZiAoaW5kZXggPT09IGxpc3QubGVuZ3RoKSB7CiAgICAgICAgbGlzdFtpbmRleCAtIDFdLnNob3cgPSAndHJ1ZScKICAgICAgfQogICAgICB0aGlzLmRpY3REYXRhID0gbGlzdAogICAgfQogIH0KfQo="},{"version":3,"sources":["dictDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dictDialog.vue","sourceRoot":"src/components/Api","sourcesContent":["<template>\n  <div>\n    <el-table\n      :data=\"dictData\"\n      style=\"width: 100%\"\n    >\n      <el-table-column label=\"Name\" width=\"350\">\n        <template slot-scope=\"scope\">\n          <el-input\n            v-model=\"scope.row.name\"\n            size=\"small\"\n            placeholder=\"请输入Name\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Value\" width=\"350\">\n        <template slot-scope=\"scope\">\n          <el-input\n            v-model=\"scope.row.value\"\n            size=\"small\"\n            placeholder=\"请输入value\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button\n            v-if=\"scope.row.show === 'true'\"\n            type=\"success\"\n            size=\"mini\"\n            icon=\"el-icon-circle-plus-outline\"\n            plain\n            @click=\"pushNewHeaders(scope.$index)\"\n          />\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            icon=\"el-icon-delete\"\n            plain\n            @click=\"deleteHeaders(scope.$index)\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DictDialog',\n  props: {\n    dictData: {\n      type: Array,\n      default: null\n    }\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    pushNewHeaders(index) {\n      const list = this.dictData\n      list[index].show = 'false'\n      list.push({\n        name: '',\n        value: '',\n        show: 'true'\n      })\n      this.dictData = list\n    },\n    deleteHeaders(index) {\n      const list = this.dictData\n      if (index === 0 && list.length === 1) {\n        list.splice(index, 1)\n        list.push({\n          name: '',\n          value: '',\n          show: 'true'\n        })\n      } else {\n        list.splice(index, 1)\n      }\n      if (index === list.length) {\n        list[index - 1].show = 'true'\n      }\n      this.dictData = list\n    }\n  }\n}\n</script>\n"]}]}