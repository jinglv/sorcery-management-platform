{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/Api/envsDialog.vue?vue&type=style&index=0&id=6061b1d3&scoped=true&lang=css&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/Api/envsDialog.vue","mtime":1679475726583},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1679466708477},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1679466707591},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1679466707836},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNpbWFnZSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQo="},{"version":3,"sources":["envsDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA","file":"envsDialog.vue","sourceRoot":"src/components/Api","sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"1000px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      ref=\"ruleForm\"\n      :model=\"envForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"环境名称\" prop=\"name\">\n        <el-input v-model=\"envForm.name\" />\n      </el-form-item>\n      <el-form-item label=\"环境值\" prop=\"env\">\n        <el-input v-model=\"envForm.env\" />\n      </el-form-item>\n      <el-form-item label=\"浏览器\">\n        <el-input v-model=\"envForm.browser\" />\n      </el-form-item>\n      <el-form-item label=\"基础URL\" prop=\"base_url\" :inline=\"true\">\n        <el-select\n          v-model=\"httpValue\"\n          style=\"width: 15%; float: left\"\n          @change=\"changeProtocol\"\n        >\n          <el-option\n            v-for=\"item in httpOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n        <el-input v-model=\"envForm.base_url\" style=\"width:85%\" />\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <div class=\"dialog-footer\">\n          <el-button @click=\"closeDialog()\">取消</el-button>\n          <el-button\n            type=\"primary\"\n            :disabled=\"saveFlag\"\n            @click=\"submitForm('ruleForm')\"\n          >保存</el-button>\n        </div>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n\n<script>\nimport { createEnvs } from '@/api/envs'\n\nexport default {\n  props: {\n    pid: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      showTitle: '',\n      dialogVisible: true,\n      envForm: {\n        project_id: 0,\n        name: '',\n        env: '',\n        browser: '',\n        protocol: '',\n        base_url: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入环境的名称', trigger: 'blur' }\n        ],\n        env: [\n          { required: true, message: '请输入环境的值,如:dev、test、prod', trigger: 'blur' }\n        ],\n        base_url: [\n          { required: true, message: '请输入环境的基础URL', trigger: 'blur' }\n        ]\n      },\n      httpValue: 1,\n      httpLabel: 'http://',\n      httpOption: [\n        {\n          value: 1,\n          label: 'http://'\n        },\n        {\n          value: 2,\n          label: 'https://'\n        }\n      ],\n      saveFlag: false\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n    },\n    // 创建环境信息\n    async submitForm() {\n      this.envForm.project_id = this.pid\n      this.envForm.protocol = this.httpLabel\n      const resp = await createEnvs(this.envForm)\n      if (resp.success === true) {\n        this.closeDialog()\n        this.$message.success('保存成功')\n        this.saveFlag = true\n        // 延时器\n        setTimeout(() => {\n          this.$emit('close')\n          this.$emit('refresh')\n        }, 500)\n      } else {\n        this.$message.error('保存失败')\n      }\n    },\n    // 获取选中的协议值\n    changeProtocol(value) {\n      this.httpValue = value\n      this.httpLabel = this.httpOption.find(\n        (item) => item.value === value\n      ).label\n      console.log('选中名称', this.httpLabel)\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n</style>\n"]}]}