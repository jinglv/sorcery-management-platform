{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/views/cases/demand/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/views/cases/demand/index.vue","mtime":1701336949667},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEZW1hbmREaWFsb2cgZnJvbSAnQC9jb21wb25lbnRzL0Nhc2VzL2RlbWFuZERpYWxvZycKaW1wb3J0IHsgZ2V0Q2FzZXNMaXN0IH0gZnJvbSAnQC9hcGkvY2FzZXMnCmltcG9ydCB7IGdldE1vZHVsZUFsbFRyZWUgfSBmcm9tICdAL2FwaS9tb2R1bGVzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEZW1hbmRNYW5hZ2UnLAogIGNvbXBvbmVudHM6IHsKICAgIERlbWFuZERpYWxvZwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRlc3RDYXNlRGF0ZTogW10sCiAgICAgIG1vZHVsZVZhbHVlOiBudWxsLAogICAgICBtb2R1bGVEYXRhOiBbXSwKICAgICAgZGlhbG9nRmxhZzogZmFsc2UsCiAgICAgIGRlbWFuZEZyb206IHsKICAgICAgICAnbmFtZSc6ICcnLAogICAgICAgICd2ZXJzaW9uX251bWJlcic6IDAKICAgICAgfSwKICAgICAgcmVxOiB7CiAgICAgICAgcGFnZTogMSwKICAgICAgICBzaXplOiAxMAogICAgICB9LAogICAgICAvLyDliIbpobXpobXmlbAKICAgICAgdG90YWw6IDEwCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5pbml0TW9kdWxlQWxsTGlzdCgpCiAgICB0aGlzLmdldENhc2VzTGlzdCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJvlu7rpnIDmsYIKICAgIGNyZWF0ZURlbWFuZCgpIHsKICAgICAgdGhpcy5kaWFsb2dGbGFnID0gdHJ1ZQogICAgfSwKICAgIC8vIOiOt+WPlua1i+ivleeUqOS+i+WIl+ihqAogICAgYXN5bmMgZ2V0Q2FzZXNMaXN0KCkgewogICAgICB0aGlzLmNhc2VzRnJvbS5tb2R1bGVfaWQgPSB0aGlzLm1vZHVsZVZhbHVlID09PSBudWxsID8gMCA6IHRoaXMubW9kdWxlVmFsdWUKICAgICAgdGhpcy5jYXNlc0Zyb20udHlwZSA9IHRoaXMudHlwZVZhbHVlID09PSAnJyA/IDAgOiB0aGlzLnR5cGVWYWx1ZQogICAgICB0aGlzLmNhc2VzRnJvbS5pbXBvcnRhbmNlID0gdGhpcy5pbXBvcnRhbmNlVmFsdWUgPT09ICcnID8gMCA6IHRoaXMuaW1wb3J0YW5jZVZhbHVlCiAgICAgIHRoaXMuY2FzZXNGcm9tLnN0YXR1cyA9IHRoaXMuc3RhdHVzVmFsdWUgPT09ICcnID8gMCA6IHRoaXMuc3RhdHVzVmFsdWUKICAgICAgdGhpcy5jYXNlc0Zyb20ucmVzdWx0X3N0YXR1cyA9IHRoaXMucmVzdWx0U3RhdHVzVmFsdWUgPT09ICcnID8gMCA6IHRoaXMucmVzdWx0U3RhdHVzVmFsdWUKICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IGdldENhc2VzTGlzdCh0aGlzLnJlcSwgSlNPTi5zdHJpbmdpZnkodGhpcy5jYXNlc0Zyb20pKQogICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3AudG90YWwKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3AuaXRlbXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIHJlc3AuaXRlbXNbaV0uY3JlYXRlX3RpbWUgPSB0aGlzLiRtb21lbnQoCiAgICAgICAgICAgIHJlc3AuaXRlbXNbaV0uY3JlYXRlX3RpbWUKICAgICAgICAgICkuZm9ybWF0KCdZWVlZLU1NLUREIEhIOm1tOnNzJykKICAgICAgICB9CiAgICAgICAgdGhpcy50ZXN0Q2FzZURhdGUgPSByZXNwLml0ZW1zCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmn6Xor6LmiJDlip/vvIEnKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+afpeivouWksei0pe+8gScpCiAgICAgIH0KICAgIH0sCiAgICAvLyDmn6Xor6LmqKHlnZfliJfooagKICAgIGFzeW5jIGluaXRNb2R1bGVBbGxMaXN0KCkgewogICAgICBjb25zdCByZXNwID0gYXdhaXQgZ2V0TW9kdWxlQWxsVHJlZSgpCiAgICAgIGlmIChyZXNwLnN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICB0aGlzLm1vZHVsZURhdGEgPSByZXNwLnJlc3VsdAogICAgICAgIC8vIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5p+l6K+i5oiQ5Yqf77yBIikKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmn6Xor6LlpLHotKXvvIEnKQogICAgICB9CiAgICB9LAogICAgLy8g5Yib5bu65qih5Z2X5YWz6ZetCiAgICBjbG9zZURpYWxvZygpIHsKICAgICAgdGhpcy5kaWFsb2dGbGFnID0gZmFsc2UKICAgICAgLy8gdGhpcy5pbml0TW9kdWxlTGlzdCh0aGlzLnByb2plY3RWYWx1ZSkKICAgIH0sCiAgICAvLyDot7PovazliLDnrKzlh6DpobUKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UodmFsKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKGDlvZPliY3pobU6ICR7dmFsfWApCiAgICAgIHRoaXMucmVxLnBhZ2UgPSB2YWwKICAgICAgdGhpcy5pbml0UHJvamVjdExpc3QoKQogICAgfSwKICAgIC8vIOa4hemZpOaQnOe0ogogICAgY2xlYXJTZWFyY2goKSB7CiAgICAgIHRoaXMudHlwZVZhbHVlID0gMAogICAgICBpZiAodGhpcy50eXBlVmFsdWUgPT09IDApIHsKICAgICAgICB0aGlzLnR5cGVWYWx1ZSA9ICcnCiAgICAgIH0KICAgICAgdGhpcy5pbXBvcnRhbmNlVmFsdWUgPSAwCiAgICAgIGlmICh0aGlzLmltcG9ydGFuY2VWYWx1ZSA9PT0gMCkgewogICAgICAgIHRoaXMuaW1wb3J0YW5jZVZhbHVlID0gJycKICAgICAgfQogICAgICB0aGlzLnN0YXR1c1ZhbHVlID0gMAogICAgICBpZiAodGhpcy5zdGF0dXNWYWx1ZSA9PT0gMCkgewogICAgICAgIHRoaXMuc3RhdHVzVmFsdWUgPSAnJwogICAgICB9CiAgICAgIHRoaXMucmVzdWx0U3RhdHVzVmFsdWUgPSAwCiAgICAgIGlmICh0aGlzLnJlc3VsdFN0YXR1c1ZhbHVlID09PSAwKSB7CiAgICAgICAgdGhpcy5yZXN1bHRTdGF0dXNWYWx1ZSA9ICcnCiAgICAgIH0KICAgICAgdGhpcy5jYXNlc0Zyb20ubmFtZSA9ICcnCiAgICAgIHRoaXMuZ2V0Q2FzZXNMaXN0KCkKICAgIH0sCiAgICAvLyDojrflj5bpgInkuK3nmoTljY/orq7lgLwKICAgIGNoYW5nZVR5cGUodmFsdWUpIHsKICAgICAgdGhpcy50eXBlVmFsdWUgPSB2YWx1ZQogICAgICB0aGlzLnR5cGVMYWJlbCA9IHRoaXMudHlwZU9wdGlvbi5maW5kKAogICAgICAgIChpdGVtKSA9PiBpdGVtLnZhbHVlID09PSB2YWx1ZQogICAgICApLmxhYmVsCiAgICB9LAogICAgY2hhbmdlSW1wb3J0YW5jZSh2YWx1ZSkgewogICAgICB0aGlzLmltcG9ydGFuY2VWYWx1ZSA9IHZhbHVlCiAgICAgIHRoaXMuaW1wb3J0YW5jZUxhYmVsID0gdGhpcy5pbXBvcnRhbmNlT3B0aW9uLmZpbmQoCiAgICAgICAgKGl0ZW0pID0+IGl0ZW0udmFsdWUgPT09IHZhbHVlCiAgICAgICkubGFiZWwKICAgIH0sCiAgICBjaGFuZ2VTdGF0dXModmFsdWUpIHsKICAgICAgdGhpcy5zdGF0dXNWYWx1ZSA9IHZhbHVlCiAgICAgIHRoaXMuc3RhdHVzTGFiZWwgPSB0aGlzLnN0YXR1c09wdGlvbi5maW5kKAogICAgICAgIChpdGVtKSA9PiBpdGVtLnZhbHVlID09PSB2YWx1ZQogICAgICApLmxhYmVsCiAgICB9LAogICAgY2hhbmdlUmVzdWx0U3RhdHVzKHZhbHVlKSB7CiAgICAgIHRoaXMucmVzdWx0U3RhdHVzVmFsdWUgPSB2YWx1ZQogICAgICB0aGlzLnJlc3VsdFN0YXR1c0xhYmVsID0gdGhpcy5yZXN1bHRTdGF0dXNPcHRpb24uZmluZCgKICAgICAgICAoaXRlbSkgPT4gaXRlbS52YWx1ZSA9PT0gdmFsdWUKICAgICAgKS5sYWJlbAogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"index.vue","sourceRoot":"src/views/cases/demand","sourcesContent":["<template>\n  <div class=\"demand\">\n    <div class=\"filter-container\">\n      <el-row :gutter=\"24\">\n        <el-col :span=\"6\">\n          <div class=\"demo-input-suffix\">\n            需求名称:\n            <el-input v-model=\"demandFrom.name\" placeholder=\"请输入需求名称\" style=\"width: 54%;margin-right: 5px;\" class=\"filter-item\" />\n          </div>\n        </el-col>\n        <el-col :span=\"6\">\n          <div class=\"demo-input-suffix\">\n            版本号:\n            <el-select\n              v-model=\"typeValue\"\n              placeholder=\"请选择用例类型\"\n              @change=\"changeType\"\n            >\n              <el-option\n                v-for=\"item in typeOption\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </div>\n        </el-col>\n      </el-row>\n      <div style=\"text-align: right;margin-top: 10px;\">\n        <el-button class=\"filter-item\" icon=\"el-icon-delete\" @click=\"clearSearch()\">重置</el-button>\n        <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"getCasesList()\">搜索</el-button>\n      </div>\n    </div>\n    <div style=\"text-align: left; margin-top: 10px;\">\n      <el-button class=\"el-icon-circle-plus-outline\" type=\"primary\" @click=\"createDemand()\">创建需求</el-button>\n    </div>\n    <div style=\"margin-top: 10px\">\n      <el-table\n        :data=\"testCaseDate\"\n        border\n        style=\"width: 100%\"\n      >\n        <el-table-column prop=\"id\" label=\"ID\" width=\"100\" />\n        <el-table-column prop=\"name\" label=\"需求名称\" width=\"200\" />\n        <el-table-column prop=\"version_number\" label=\"版本号\" width=\"200\" />\n        <el-table-column prop=\"create_time\" label=\"创建时间\" />\n      </el-table>\n      <!--分页-->\n      <div style=\"width: 100%; text-align: right\">\n        <el-pagination\n          background\n          :total=\"total\"\n          :page-size=\"req.size\"\n          layout=\"total, prev, pager, next\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </div>\n    <!-- 创建用例集 -->\n    <demand-dialog\n      v-if=\"dialogFlag\"\n      @cancel=\"closeDialog\"\n    />\n  </div>\n</template>\n<script>\nimport DemandDialog from '@/components/Cases/demandDialog'\nimport { getCasesList } from '@/api/cases'\nimport { getModuleAllTree } from '@/api/modules'\n\nexport default {\n  name: 'DemandManage',\n  components: {\n    DemandDialog\n  },\n  data() {\n    return {\n      testCaseDate: [],\n      moduleValue: null,\n      moduleData: [],\n      dialogFlag: false,\n      demandFrom: {\n        'name': '',\n        'version_number': 0\n      },\n      req: {\n        page: 1,\n        size: 10\n      },\n      // 分页页数\n      total: 10\n    }\n  },\n  mounted() {\n    this.initModuleAllList()\n    this.getCasesList()\n  },\n  methods: {\n    // 创建需求\n    createDemand() {\n      this.dialogFlag = true\n    },\n    // 获取测试用例列表\n    async getCasesList() {\n      this.casesFrom.module_id = this.moduleValue === null ? 0 : this.moduleValue\n      this.casesFrom.type = this.typeValue === '' ? 0 : this.typeValue\n      this.casesFrom.importance = this.importanceValue === '' ? 0 : this.importanceValue\n      this.casesFrom.status = this.statusValue === '' ? 0 : this.statusValue\n      this.casesFrom.result_status = this.resultStatusValue === '' ? 0 : this.resultStatusValue\n      const resp = await getCasesList(this.req, JSON.stringify(this.casesFrom))\n      if (resp.success === true) {\n        this.total = resp.total\n        for (let i = 0; i < resp.items.length; i++) {\n          resp.items[i].create_time = this.$moment(\n            resp.items[i].create_time\n          ).format('YYYY-MM-DD HH:mm:ss')\n        }\n        this.testCaseDate = resp.items\n        this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 查询模块列表\n    async initModuleAllList() {\n      const resp = await getModuleAllTree()\n      if (resp.success === true) {\n        this.moduleData = resp.result\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 创建模块关闭\n    closeDialog() {\n      this.dialogFlag = false\n      // this.initModuleList(this.projectValue)\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      // console.log(`当前页: ${val}`)\n      this.req.page = val\n      this.initProjectList()\n    },\n    // 清除搜索\n    clearSearch() {\n      this.typeValue = 0\n      if (this.typeValue === 0) {\n        this.typeValue = ''\n      }\n      this.importanceValue = 0\n      if (this.importanceValue === 0) {\n        this.importanceValue = ''\n      }\n      this.statusValue = 0\n      if (this.statusValue === 0) {\n        this.statusValue = ''\n      }\n      this.resultStatusValue = 0\n      if (this.resultStatusValue === 0) {\n        this.resultStatusValue = ''\n      }\n      this.casesFrom.name = ''\n      this.getCasesList()\n    },\n    // 获取选中的协议值\n    changeType(value) {\n      this.typeValue = value\n      this.typeLabel = this.typeOption.find(\n        (item) => item.value === value\n      ).label\n    },\n    changeImportance(value) {\n      this.importanceValue = value\n      this.importanceLabel = this.importanceOption.find(\n        (item) => item.value === value\n      ).label\n    },\n    changeStatus(value) {\n      this.statusValue = value\n      this.statusLabel = this.statusOption.find(\n        (item) => item.value === value\n      ).label\n    },\n    changeResultStatus(value) {\n      this.resultStatusValue = value\n      this.resultStatusLabel = this.resultStatusOption.find(\n        (item) => item.value === value\n      ).label\n    }\n  }\n}\n</script>\n<style scoped>\n.custom-tree-node {\n  width: 100%;\n}\n.label-title {\n  font-family: \"Liberation Mono\", monospace, serif, sans-serif;\n  font-size: 24px;\n}\n.label-text {\n  font-family: \"Lucida Calligraphy\", cursive, serif, sans-serif;\n  font-size: 20px;\n  font-weight: bolder;\n  float: left;\n  margin-top: 5px;\n}\n.flex-container {\n  display: flex;\n}\n\n.el-container {\n  text-align: center;\n  line-height: 38px;\n}\n</style>\n"]}]}