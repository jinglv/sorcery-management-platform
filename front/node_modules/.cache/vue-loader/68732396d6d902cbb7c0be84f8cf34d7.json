{"remainingRequest":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeanlv/sorcery-management-platform/front/src/components/Cases/testSuiteDialog.vue?vue&type=style&index=0&id=2b50d2bc&scoped=true&lang=css&","dependencies":[{"path":"/Users/jeanlv/sorcery-management-platform/front/src/components/Cases/testSuiteDialog.vue","mtime":1702542875388},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1698032215256},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1698032217228},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1698032216585},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1698032217227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNpbWFnZSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQoKI2VkaXRvcl9yZW1hcmsgewogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgei1pbmRleDogMTAwOyAvKiDmjInpnIDlrprkuYkgKi8KfQoKLmNlbGwtY29udGFpbmVyIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmN1c3RvbS1idXR0b24gewogIG1hcmdpbi1sZWZ0OiAxMHB4OyAvKiDorr7nva7mjInpkq7ot53nprvlj7PovrnnmoTpl7Tot50gKi8KfQo="},{"version":3,"sources":["testSuiteDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+iBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"testSuiteDialog.vue","sourceRoot":"src/components/Cases","sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"80%\"\n    :before-close=\"closeDialog\"\n    :close-on-click-modal=\"false\"\n  >\n    <div v-if=\"title == 'detail'\" class=\"div-line\">\n      <el-form\n        ref=\"ruleForm\"\n        :model=\"testSuiteSearchForm\"\n        label-width=\"120px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"用例集名称：\" prop=\"name\">{{ testSuiteSearchForm.name }}</el-form-item>\n        <el-form-item label=\"执行状态：\" prop=\"status\">\n          <el-tag :type=\"testSuiteStatusType(testSuiteSearchForm.status)\" effect=\"dark\">\n            {{ testSuiteSearchForm.status | testSuiteStatus }}\n          </el-tag>\n        </el-form-item>\n        <el-form-item label=\"需求版本号\" prop=\"version_number\">\n          <el-table\n            size=\"mini\"\n            :data=\"testSuiteSearchForm.version_info\"\n            border\n            style=\"width: 100%\"\n          >\n            <el-table-column\n              prop=\"name\"\n              label=\"需求名称\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"project_name\"\n              label=\"项目\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"version_number\"\n              label=\"版本号\"\n              width=\"auto\"\n            />\n            <el-table-column\n              prop=\"requirements_type\"\n              label=\"需求类型\"\n              width=\"auto\"\n            >\n              <template slot-scope=\"{ row }\">\n                {{ row.requirements_type | requirementsType }}\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-form-item>\n        <el-form-item label=\"测试用例：\" prop=\"test_cases\">\n          <el-table\n            size=\"mini\"\n            :data=\"testSuiteSearchForm.test_cases\"\n            border\n            style=\"width: 100%\"\n          >\n            <el-table-column\n              label=\"#\"\n              type=\"index\"\n              width=\"50\"\n            />\n            <el-table-column\n              prop=\"name\"\n              label=\"用例名称\"\n              width=\"auto\"\n              show-overflow-tooltip\n            />\n            <el-table-column\n              prop=\"project_name\"\n              label=\"项目名称\"\n              width=\"auto\"\n              show-overflow-tooltip\n            />\n            <el-table-column\n              prop=\"module_name\"\n              label=\"模块名称\"\n              width=\"auto\"\n              show-overflow-tooltip\n            />\n            <el-table-column\n              prop=\"type\"\n              label=\"测试用例类型\"\n              width=\"200\"\n            >\n              <template slot-scope=\"{ row }\">\n                {{ row.type | caseType }}\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"test_label\"\n              label=\"用例标签\"\n              width=\"180\"\n              show-overflow-tooltip\n            >\n              <template slot-scope=\"{ row }\">\n                {{ row.test_label | testLabel }}\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"importance\"\n              label=\"重要程度\"\n              width=\"180\"\n              show-overflow-tooltip\n            >\n              <template slot-scope=\"{ row }\">\n                <el-tag :type=\"caseImportanceType(row.importance)\" effect=\"plain\">\n                  {{ row.importance | caseImportance }}\n                </el-tag>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-form-item>\n        <el-form-item label=\"描述：\" prop=\"describe\">\n          <div class=\"w-e-text\" style=\"height: 100px; overflow-y: auto;\" v-html=\"testSuiteSearchForm.describe\" />\n        </el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog\">返回</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div v-if=\"title != 'detail'\">\n      <el-form\n        ref=\"ruleForm\"\n        :model=\"testSuiteForm\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"用例集名称\" prop=\"name\">\n          <el-input v-model=\"testSuiteForm.name\" />\n        </el-form-item>\n        <el-form-item label=\"需求版本\" prop=\"version_number\">\n          <div id=\"version_number\">\n            <el-table\n              size=\"mini\"\n              :data=\"versionNumberData\"\n              border\n              style=\"width: 100%\"\n            >\n              <el-table-column\n                prop=\"name\"\n                label=\"需求名称\"\n                width=\"auto\"\n              />\n              <el-table-column\n                prop=\"project_name\"\n                label=\"项目\"\n                width=\"auto\"\n              />\n              <el-table-column\n                prop=\"version_number\"\n                label=\"版本号\"\n                width=\"auto\"\n              />\n              <el-table-column\n                prop=\"requirements_type\"\n                label=\"需求类型\"\n                width=\"auto\"\n              >\n                <template slot-scope=\"{ row }\">\n                  {{ row.requirements_type | requirementsType }}\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"option\"\n                label=\"操作\"\n                fixed=\"right\"\n                width=\"150\"\n              >\n                <template slot-scope=\"scope\">\n                  <el-button\n                    type=\"primary\"\n                    size=\"mini\"\n                    icon=\"el-icon-view\"\n                    :disabled=\"scope.row.isDelete\"\n                    @click=\"showDemand(scope.row)\"\n                  />\n                  <el-button\n                    type=\"danger\"\n                    size=\"mini\"\n                    icon=\"el-icon-delete\"\n                    :disabled=\"scope.row.isDelete\"\n                    @click=\"deleteDemand(scope.$index)\"\n                  />\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n          <el-button type=\"primary\" size=\"small\" round :disabled=\"addDemandFlag\" @click=\"addDemand()\">添加需求</el-button>\n        </el-form-item>\n        <el-form-item label=\"测试用例\" prop=\"test_steps\">\n          <div id=\"test-step\">\n            <el-table\n              size=\"mini\"\n              :data=\"testCaseData\"\n              border\n              style=\"width: 100%\"\n            >\n              <el-table-column\n                label=\"#\"\n                type=\"index\"\n                width=\"50\"\n              />\n              <el-table-column\n                prop=\"name\"\n                label=\"用例名称\"\n                width=\"auto\"\n                show-overflow-tooltip\n              />\n              <el-table-column\n                prop=\"project_name\"\n                label=\"项目名称\"\n                width=\"auto\"\n                show-overflow-tooltip\n              />\n              <el-table-column\n                prop=\"module_name\"\n                label=\"模块名称\"\n                width=\"auto\"\n                show-overflow-tooltip\n              />\n              <el-table-column\n                prop=\"type\"\n                label=\"测试用例类型\"\n                width=\"200\"\n              >\n                <template slot-scope=\"{ row }\">\n                  {{ row.type | caseType }}\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"test_label\"\n                label=\"用例标签\"\n                width=\"180\"\n                show-overflow-tooltip\n              >\n                <template slot-scope=\"{ row }\">\n                  {{ row.test_label | testLabel }}\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"importance\"\n                label=\"重要程度\"\n                width=\"180\"\n                show-overflow-tooltip\n              >\n                <template slot-scope=\"{ row }\">\n                  <el-tag :type=\"caseImportanceType(row.importance)\" effect=\"plain\">\n                    {{ row.importance | caseImportance }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column\n                prop=\"option\"\n                label=\"操作\"\n                fixed=\"right\"\n                width=\"100\"\n              >\n                <template slot-scope=\"scope\">\n                  <el-button\n                    type=\"danger\"\n                    size=\"mini\"\n                    icon=\"el-icon-delete\"\n                    :disabled=\"scope.row.isDelete\"\n                    @click=\"deleteTestCase(scope.$index)\"\n                  />\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n          <el-button type=\"primary\" size=\"small\" plain @click=\"addTestCase()\">添加测试用例</el-button>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"remark\">\n          <div id=\"editor_remark\" />\n        </el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog\">取消</el-button>\n          <el-button\n            v-if=\"title != 'edit'\"\n            type=\"primary\"\n            @click=\"submitTestCase('ruleForm')\"\n          >确定</el-button>\n          <el-button\n            v-if=\"title == 'edit'\"\n            type=\"primary\"\n            @click=\"submitTestCase('ruleForm')\"\n          >更新</el-button>\n        </el-form-item>\n      </el-form>\n      <demand-list-dialog v-if=\"dialogDemandFlag\" @getDemandInfo=\"getDemandInfo\" @cancel=\"closeDemandDialog\" />\n      <demand-detail-dialog v-if=\"dialogDemandDetailFlag\" :title=\"demandDetailTitle\" :did=\"currentDemandId\" @cancel=\"closeDemandDialog\" />\n      <test-case-list-dialog v-if=\"testCaseListDialogFlag\" @getTestCaseData=\"getTestCaseData\" @cancel=\"closeDemandDialog\" />\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { createCaseSuite, updateTestCase, getCaseSuiteDetail } from '@/api/cases'\nimport { getToken } from '@/utils/auth'\nimport DemandListDialog from '@/components/Cases/demandListDialog'\nimport DemandDetailDialog from '@/components/Cases/demandDetailDialog'\nimport TestCaseListDialog from '@/components/Cases/testCaseListDialog'\nimport E from 'wangeditor'\nimport hljs from 'highlight.js'\n\nexport default {\n  name: 'TestSuiteDialog',\n  components: {\n    DemandListDialog,\n    DemandDetailDialog,\n    TestCaseListDialog\n  },\n  filters: {\n    testSuiteStatus(value) {\n      if (value === 1) {\n        return '未执行'\n      } else if (value === 2) {\n        return '执行中'\n      } else if (value === 3) {\n        return '已完成'\n      } else {\n        return ''\n      }\n    },\n    caseType(value) {\n      if (value === 1) {\n        return '功能测试用例'\n      } else if (value === 2) {\n        return '接口测试用例'\n      } else {\n        return '未知类型'\n      }\n    },\n    testLabel(value) {\n      if (value === 1) {\n        return '正向场景测试用例'\n      } else if (value === 2) {\n        return '异常场景测试用例'\n      } else {\n        return ''\n      }\n    },\n    caseImportance(value) {\n      if (value === 1) {\n        return 'P0'\n      } else if (value === 2) {\n        return 'P1'\n      } else if (value === 3) {\n        return 'P2'\n      } else if (value === 4) {\n        return 'P3'\n      } else {\n        return ''\n      }\n    },\n    requirementsType(value) {\n      if (value === 'business') {\n        return '业务类需求'\n      } else if (value === 'improve') {\n        return 'Bug改进类需求'\n      } else if (value === 'technical') {\n        return '技术类需求'\n      } else {\n        return ''\n      }\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    sid: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      showTitle: '',\n      dialogVisible: true,\n      testSuiteForm: {\n        name: '',\n        version_number: '',\n        case_ids: [],\n        describe: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入用例集名称', trigger: 'blur' }\n        ]\n      },\n      testSuiteSearchForm: {},\n      testCaseData: [],\n      addDemandFlag: false,\n      versionNumberData: [],\n      fileList: [],\n      disabled: false,\n      editor_remark: null,\n      testCaseListDialogFlag: false,\n      dialogDemandFlag: false,\n      currentDemandId: 0,\n      demandDetailTitle: '',\n      dialogDemandDetailFlag: false\n    }\n  },\n  created() {\n    if (this.title === 'detail') {\n      this.showTitle = '测试用例集详情'\n      this.getTestCaseSuiteDetail()\n    } else {\n      this.showTitle = '创建测试用例集'\n      // 组件打开则进行加载\n      // 使用时钟函数进行延迟，否则获取不到元素 -- 等元素加载完成后再进行创建E\n      this.$nextTick(() => {\n        this.editor_remark = new E('#editor_remark')\n        this.editor_remark.highlight = hljs\n        // 富文本组价设置图片上传接口\n        this.editor_remark.config.uploadImgServer = '/api/commons/editor/file/image'\n        this.editor_remark.config.uploadFileName = 'file'\n        this.editor_remark.config.uploadImgHeaders = {\n          Authorization: 'Bearer ' + getToken()\n        }\n        // 富文本组价设置视频上传接口\n        this.editor_remark.config.uploadVideoServer = '/api/commons/editor/file/video'\n        this.editor_remark.config.uploadVideoName = 'file'\n        this.editor_remark.config.uploadVideoHeaders = {\n          Authorization: 'Bearer ' + getToken()\n        }\n        this.editor_remark.create()\n      })\n      if (this.title === 'edit') {\n        this.showTitle = '编辑测试用例集'\n        this.getTestCaseSuiteDetail()\n      }\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    testSuiteStatusType(value) {\n      if (value === 1) {\n        return 'warning'\n      } else if (value === 2) {\n        return 'info'\n      } else if (value === 3) {\n        return 'success'\n      } else {\n        return ''\n      }\n    },\n    caseImportanceType(value) {\n      if (value === 1) {\n        return 'danger'\n      } else if (value === 2) {\n        return 'warning'\n      } else if (value === 3) {\n        return 'info'\n      } else if (value === 4) {\n        return 'success'\n      } else {\n        return ''\n      }\n    },\n    closeDialog() {\n      this.$emit('cancel', {})\n      if (this.title !== 'detail') {\n        this.editor_remark.destroy()\n        this.editor_remark = null\n      }\n    },\n    // 添加测试用例步骤\n    addTestCase() {\n      this.testCaseListDialogFlag = true\n    },\n    deleteTestCase(index) {\n      this.testCaseData.splice(index, 1)\n    },\n    // 添加需求\n    addDemand() {\n      this.dialogDemandFlag = true\n    },\n    closeDemandDialog() {\n      this.dialogDemandFlag = false\n      this.dialogDemandDetailFlag = false\n      this.testCaseListDialogFlag = false\n    },\n    getDemandInfo(data) {\n      this.versionNumberData.push(data)\n      this.testSuiteForm.version_number = data.version_number\n      this.addDemandFlag = true\n    },\n    showDemand(row) {\n      this.dialogDemandDetailFlag = true\n      this.demandDetailTitle = '需求详情'\n      this.currentDemandId = row.id\n    },\n    deleteDemand(index) {\n      this.versionNumberData.splice(index, 1)\n      this.addDemandFlag = false\n    },\n    getTestCaseData(data) {\n      this.testCaseData.push(data)\n      this.testSuiteForm.case_ids.push(data.id)\n    },\n    // 创建测试用例\n    submitTestCase(formName) {\n      this.$refs[formName].validate((valid) => {\n        const remark_content = this.editor_remark.txt.html()\n        this.testSuiteForm.describe = remark_content\n        if (valid) {\n          if (this.title === 'create') {\n            createCaseSuite(this.testSuiteForm).then((resp) => {\n              if (resp.success === true) {\n                this.closeDialog()\n                this.$message.success('创建成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          } else if (this.title === 'edit') {\n            updateTestCase(this.sid, this.testSuiteForm).then((resp) => {\n              if (resp.success === true) {\n                this.closeDialog()\n                this.$message.success('更新成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          }\n        }\n      })\n    },\n    async getTestCaseSuiteDetail() {\n      const resp = await getCaseSuiteDetail(this.sid)\n      if (resp.success === true) {\n        const res = resp.result\n        this.testSuiteSearchForm = res\n        if (this.title === 'edit') {\n          this.testSuiteForm = res\n          this.versionNumberData = res.version_info\n          this.testCaseData = res.test_cases\n          // 设置富文本中获取的数据\n          this.editor_remark.txt.html(res.describe)\n        }\n        this.$message.success('查询成功')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n\n#editor_remark {\n  border: 1px solid #ccc;\n  z-index: 100; /* 按需定义 */\n}\n\n.cell-container {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.custom-button {\n  margin-left: 10px; /* 设置按钮距离右边的间距 */\n}\n</style>\n"]}]}