{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/Api/apiDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/Api/apiDialog.vue","mtime":1685609266908},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["apiDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"apiDialog.vue","sourceRoot":"src/components/Api","sourcesContent":["<template>\n  <div :style=\"{'max-height': timeLineHeight +'px'}\" style=\"margin-left: 10px; margin-right: 10px; overflow-y:scroll;\">\n    <div v-if=\"title == '接口详情'\" class=\"div-line\">\n      <el-form\n        :model=\"apiForm\"\n        label-width=\"100px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"接口名称：\" prop=\"name\">{{ apiForm.name }}</el-form-item>\n        <el-form-item label=\"接口地址：\" prop=\"api_path\">{{ apiForm.api_path }}</el-form-item>\n        <el-form-item label=\"请求方式：\" prop=\"method\">{{ apiForm.method }}</el-form-item>\n        <el-form-item label=\"请求头：\" prop=\"header\">\n          <el-table\n            :data=\"apiForm.header\"\n            border\n            style=\"width: 80%\"\n          >\n            <el-table-column\n              prop=\"name\"\n              label=\"Name\"\n              width=\"180\"\n            />\n            <el-table-column\n              prop=\"value\"\n              label=\"Value\"\n            />\n          </el-table>\n        </el-form-item>\n        <el-form-item label=\"请求参数：\" prop=\"params_type\">{{ apiForm.params_type }}</el-form-item>\n        <el-form-item v-if=\"apiForm.params_type=='params' || apiForm.params_type=='form-data'\" label=\"请求主体：\" prop=\"params_body\">\n          <el-table\n            :data=\"params\"\n            border\n            style=\"width: 80%\"\n          >\n            <el-table-column\n              prop=\"name\"\n              label=\"Name\"\n              width=\"180\"\n            />\n            <el-table-column\n              prop=\"value\"\n              label=\"Value\"\n            />\n          </el-table>\n        </el-form-item>\n        <el-form-item v-if=\"apiForm.params_type=='json'\" label=\"请求主体：\" prop=\"params_body\">\n          <json-viewer :value=\"apiForm.params_body\" :expand-depth=\"3\" />\n        </el-form-item>\n        <el-form-item label=\"响应主体：\" prop=\"response\">\n          <json-viewer :value=\"apiForm.response\" :expand-depth=\"3\" />\n        </el-form-item>\n        <el-form-item label=\"断言类型：\" prop=\"assert_type\">{{ apiForm.assert_type }}</el-form-item>\n        <el-form-item label=\"断言内容：\" prop=\"assert_text\">{{ apiForm.assert_text }}</el-form-item>\n        <el-form-item label=\"提取器：\" prop=\"assert_text\">\n          <el-table\n            :data=\"extractList\"\n            border\n            style=\"width: 80%\"\n          >\n            <el-table-column\n              prop=\"name\"\n              label=\"名称\"\n              width=\"180\"\n            />\n            <el-table-column\n              prop=\"value\"\n              label=\"提取器表达式\"\n            />\n          </el-table>\n        </el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog()\">返回</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div v-if=\"title != '接口详情'\">\n      <div class=\"div-line\" style=\"height: 50px\">\n        <el-select\n          v-model=\"apiForm.method\"\n          placeholder=\"方法\"\n          style=\"width: 10%; float: left\"\n        >\n          <el-option\n            v-for=\"item in methodOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n        <el-select\n          v-model=\"evnValue\"\n          placeholder=\"请选执行择环境\"\n          style=\"width: 15%; float: left\"\n          @change=\"changeEnvs\"\n        >\n          <el-option\n            v-for=\"item in envsOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n        <el-input\n          v-model=\"apiForm.api_path\"\n          placeholder=\"API Path\"\n          style=\"width: 65%; float: left\"\n        />\n        <el-button\n          type=\"primary\"\n          style=\"float: left\"\n          @click=\"sendClick()\"\n        >发送</el-button>\n      </div>\n      <div class=\"div-line\" style=\"height: 260px; overflow-y: auto;\">\n        <span class=\"title-text\">Headers</span>\n        <dict-dialog :dict-data=\"headerData\" />\n      </div>\n      <span class=\"title-text\">Param/Body</span>\n      <div class=\"div-line\" style=\"margin-top: 10px;\">\n        <el-radio v-model=\"apiForm.params_type\" label=\"params\" @change=\"changeRadio\">Params</el-radio>\n        <el-radio v-model=\"apiForm.params_type\" label=\"form\" @change=\"changeRadio\">Form-data</el-radio>\n        <el-radio v-model=\"apiForm.params_type\" label=\"json\" @change=\"changeJsonRadio\">JSON</el-radio>\n      </div>\n      <div v-show=\"bodyFlag\" class=\"div-line\" style=\"height: 220px; overflow-y: auto;\">\n        <vue-json-editor v-model=\"apiForm.params_body\" :mode=\"'code'\" />\n      </div>\n      <div v-show=\"paramFlag\" class=\"div-line\" style=\"height: 220px; overflow-y: auto;\">\n        <dict-dialog :dict-data=\"paramData\" />\n      </div>\n      <div class=\"div-line\" style=\"height: 150px\">\n        <el-tabs>\n          <el-tab-pane label=\"接口响应结果\">\n            <vue-json-editor v-model=\"apiForm.response\" :mode=\"'code'\" />\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n      <div class=\"div-line\" style=\"margin-top: 70px\">\n        <el-collapse>\n          <el-collapse-item title=\"断言\" name=\"1\">\n            <div style=\"height: 40px\">\n              <el-radio\n                v-model=\"apiForm.assert_type\"\n                label=\"include\"\n              >Include</el-radio>\n              <el-radio\n                v-model=\"apiForm.assert_type\"\n                label=\"equal\"\n              >Equal</el-radio>\n              <el-button\n                class=\"debug-button\"\n                type=\"success\"\n                plain\n                size=\"small\"\n                @click=\"assertClick()\"\n              >断言</el-button>\n            </div>\n            <div style=\"height: 120px\">\n              <el-input\n                v-model=\"apiForm.assert_text\"\n                type=\"textarea\"\n                :rows=\"5\"\n                placeholder=\"Assert text\"\n              />\n            </div>\n          </el-collapse-item>\n        </el-collapse>\n        <el-collapse>\n          <el-collapse-item title=\"提取器\" name=\"2\">\n            <el-form label-width=\"60px\">\n              <div v-for=\"(item, index) in extractList\" :key=\"index\">\n                <el-form-item label=\"提取器\">\n                  <el-col :span=\"8\">\n                    <el-input\n                      v-model=\"item.name\"\n                      placeholder=\"变量名\"\n                      style=\"width: 200px\"\n                    />\n                  </el-col>\n                  <el-col class=\"line\" :span=\"2\">-</el-col>\n                  <el-col :span=\"11\">\n                    <el-input\n                      v-model=\"item.value\"\n                      placeholder=\"提取规则\"\n                      style=\"width: 100%\"\n                    />\n                  </el-col>\n                  <el-button\n                    type=\"text\"\n                    style=\"padding-right: 10px\"\n                    @click=\"removeExtract(index)\"\n                  >\n                    <i class=\"el-icon-remove-outline\" />\n                  </el-button>\n                </el-form-item>\n              </div>\n            </el-form>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              plain\n              @click=\"addExtract()\"\n            >添加</el-button>\n            <el-button\n              type=\"success\"\n              size=\"mini\"\n              icon=\"el-icon-document-checked\"\n              plain\n              @click=\"checkExtract()\"\n            >检查</el-button>\n          </el-collapse-item>\n        </el-collapse>\n      </div>\n      <div style=\"height: 50px\">\n        <el-input\n          v-model=\"apiForm.name\"\n          placeholder=\"请输入用例名称\"\n          size=\"small\"\n          style=\"width: 60%; float: left\"\n        />\n        <el-button\n          v-if=\"title != '编辑接口'\"\n          type=\"primary\"\n          size=\"small\"\n          style=\"float: left\"\n          :disabled=\"saveFlag\"\n          @click=\"saveTestCase()\"\n        >保存</el-button>\n        <el-button\n          v-if=\"title == '编辑接口'\"\n          type=\"primary\"\n          size=\"small\"\n          style=\"float: left\"\n          :disabled=\"saveFlag\"\n          @click=\"updateTestCase()\"\n        >更新</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport jsonViewer from 'vue-json-viewer'\nimport vueJsonEditor from 'vue-json-editor'\nimport { debugApi, getApiDetail, assertApi, createApi, checkExtract, updateApi } from '@/api/apis'\nimport { envsListByProject, getEnvsInfo } from '@/api/envs'\nimport dictDialog from '@/components/Api/dictDialog.vue'\nexport default {\n  name: 'ApiDialog',\n  components: {\n    vueJsonEditor,\n    jsonViewer,\n    dictDialog\n  },\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    mid: {\n      type: Number,\n      default: 1\n    },\n    pid: {\n      type: Number,\n      default: 1\n    },\n    cid: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      methodOption: [\n        {\n          value: 'get',\n          label: 'GET'\n        },\n        {\n          value: 'post',\n          label: 'POST'\n        },\n        {\n          value: 'put',\n          label: 'PUT'\n        },\n        {\n          value: 'delete',\n          label: 'DELETE'\n        }\n      ],\n      envLabel: '',\n      evnValue: '',\n      envsOption: [],\n      request_path: '',\n      activeName: 'first',\n      paramsType: 1,\n      json: {},\n      response: '',\n      assertType: 'include',\n      apiForm: {\n        name: '',\n        module_id: 0,\n        api_path: '',\n        method: 'get',\n        header: [],\n        params_type: 'params',\n        params_body: '',\n        response: '',\n        assert_type: 'include',\n        assert_text: ''\n      },\n      params: [],\n      saveFlag: false,\n      extractList: [],\n      timeLineHeight: '',\n      headerData: [{\n        name: '',\n        value: '',\n        // 是否显示新增按钮\n        show: 'true'\n      }],\n      paramData: [{\n        name: '',\n        value: '',\n        // 是否显示新增按钮\n        show: 'true'\n      }],\n      bodyFlag: false,\n      paramFlag: true\n    }\n  },\n  mounted() {\n    // 窗口滑动\n    this.timeLineHeight = document.documentElement.clientHeight - 150\n    window.onresize = () => { this.timeLineHeight = document.documentElement.clientHeight - 150 }\n    // 初始化数据\n    this.apiForm.module_id = this.mid\n    if (this.cid !== 0) {\n      // 调用接口获取数据\n      this.getCaseInfo()\n    }\n    this.getEnvsList(this.pid)\n  },\n  methods: {\n    // 获取一条用例信息\n    async getCaseInfo() {\n      const resp = await getApiDetail(this.cid)\n      if (resp.success === true) {\n        // 接口获取数据\n        this.apiForm = resp.result\n        const header = resp.result.header.replace(/'/g, '\"')\n        const params_body = resp.result.params_body.replace(/'/g, '\"')\n        const response = resp.result.response.replace(/'/g, '\"')\n        // 将获取到的数据赋值给表单数据\n        this.apiForm.header = JSON.parse(header)\n        this.headerData = resp.result.header\n        // 获取头信息后，添加，是否可展示信息\n        this.headerData[this.headerData.length - 1]['show'] = 'true'\n        if (resp.result.params_type === 'json') {\n          this.apiForm.params_body = JSON.parse(params_body)\n          this.bodyFlag = true\n          this.paramFlag = false\n        } else {\n          this.apiForm.params_body = ''\n          this.paramData = JSON.parse(params_body)\n          this.paramData[this.paramData.length - 1]['show'] = 'true'\n          this.bodyFlag = false\n          this.paramFlag = true\n        }\n        this.apiForm.response = JSON.parse(response)\n        this.extractList = resp.result.extract_list\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    // 发送请求\n    async sendClick() {\n      // 请求头参数转换\n      const req_header = []\n      for (var i = 0; i < this.headerData.length; i++) {\n        const head = {\n          name: this.headerData[i].name,\n          value: this.headerData[i].value\n        }\n        req_header.push(head)\n      }\n      // 入参进行转换\n      const req = {\n        method: this.apiForm.method,\n        url: this.request_path + this.apiForm.api_path,\n        header: req_header,\n        params_type: this.apiForm.params_type,\n        params_body: this.apiForm.params_type === 'params' ? JSON.stringify(this.paramData) : JSON.stringify(this.apiForm.params_body)\n      }\n      const resp = await debugApi(req)\n      if (resp.success === true) {\n        if (resp.result.response === 'Method not allowed') {\n          this.$message.error('接口请求方法错误！')\n        } else {\n          this.apiForm.response = JSON.parse(resp.result.response)\n        }\n      } else {\n        if (resp.error.code === '10044') {\n          this.$message.error(resp.error.message)\n        }\n        console.log(resp)\n      }\n    },\n    // 接口断言\n    async assertClick() {\n      const req = {\n        response: JSON.stringify(this.apiForm.response),\n        assert_type: this.apiForm.assert_type,\n        assert_text: this.apiForm.assert_text\n      }\n      const resp = await assertApi(req)\n      if (resp.success === true) {\n        this.$message.success('断言成功')\n      } else {\n        this.$message.error('断言失败')\n      }\n    },\n    // 保存用例\n    async saveTestCase() {\n      // 请求头参数转换\n      const req_header = this.dictHeaderData()\n      const req_params = this.dictParamsData()\n      if (this.apiForm.params_type !== 'json') {\n        this.apiForm.params_body = req_params\n      }\n      this.apiForm.extract_list = this.extractList\n      this.apiForm.header = req_header\n      this.apiForm.response = JSON.stringify(this.apiForm.response)\n      const resp = await createApi(this.apiForm)\n      if (resp.success === true) {\n        this.$message.success('保存成功')\n        this.saveFlag = true\n        // 延时器\n        setTimeout(() => {\n          this.$emit('close')\n          this.$emit('refresh')\n        }, 500)\n      } else {\n        this.$message.error('保存失败')\n      }\n    },\n    // 更新用例\n    async updateTestCase() {\n      // 请求头参数转换\n      const req_header = this.dictHeaderData()\n      const req_params = this.dictParamsData()\n      if (this.apiForm.params_type !== 'json') {\n        this.apiForm.params_body = req_params\n      }\n      this.apiForm.extract_list = this.extractList\n      this.apiForm.header = req_header\n      this.apiForm.response = JSON.stringify(this.apiForm.response)\n      const resp = await updateApi(this.cid, this.apiForm)\n      if (resp.success === true) {\n        this.$message.success('更新成功')\n        this.saveFlag = true\n        // 延时器\n        setTimeout(() => {\n          this.$emit('close')\n          this.$emit('refresh')\n        }, 500)\n      } else {\n        this.$message.error('更新失败')\n      }\n    },\n    // 添加提取规则\n    addExtract() {\n      this.extractList.push({ name: '', value: '' })\n      console.info(this.extractList)\n    },\n    // 删除提取规则\n    removeExtract(index) {\n      this.extractList.splice(index, 1)\n    },\n    // 校验提取规则\n    async checkExtract() {\n      if (this.extractList.length === 0) {\n        this.$message.error('请添加提取器')\n        return\n      }\n      const req = {\n        response: this.apiForm.response,\n        extractList: this.extractList\n      }\n      const resp = await checkExtract(req)\n      if (resp.success === true) {\n        this.$message.success('提取器校验成功')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    // 关闭\n    closeDialog() {\n      this.$emit('close')\n    },\n    // 根据pid获取环境变量\n    async getEnvsList() {\n      const resp = await envsListByProject(this.pid)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.result.length; i++) {\n          this.envsOption.push({\n            value: resp.result[i].id,\n            label: resp.result[i].name\n          })\n        }\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询环境失败！')\n      }\n    },\n    // 获取选中的环境的base_url\n    async changeEnvs(value) {\n      this.evnValue = value\n      this.envLabel = this.envsOption.find(\n        (item) => item.value === value\n      ).label\n      const resp = await getEnvsInfo(value)\n      if (resp.success === true) {\n        const res = resp.result\n        this.request_path = res.protocol + res.base_url\n        console.info('url:', this.request_path)\n      } else {\n        this.$message.error('查询环境信息失败！')\n      }\n    },\n    changeJsonRadio() {\n      this.bodyFlag = true\n      this.paramFlag = false\n    },\n    changeRadio() {\n      this.bodyFlag = false\n      this.paramFlag = true\n    },\n    dictHeaderData() {\n      const req_header = []\n      for (var i = 0; i < this.headerData.length; i++) {\n        const head = {\n          name: this.headerData[i].name,\n          value: this.headerData[i].value\n        }\n        req_header.push(head)\n      }\n      return req_header\n    },\n    dictParamsData() {\n      const req_params = []\n      for (var i = 0; i < this.paramData.length; i++) {\n        const param = {\n          name: this.paramData[i].name,\n          value: this.paramData[i].value\n        }\n        req_params.push(param)\n      }\n      return req_params\n    }\n  }\n}\n</script>\n\n<style>\ndiv.jsoneditor {\n  border: thin solid #ced4da;\n}\ndiv.jsoneditor-menu {\n  display: none;\n}\n.ace-jsoneditor .ace_gutter {\n  background: white;\n}\ndiv.jsoneditor-outer.has-main-menu-bar {\n  margin-top: 0px;\n  padding-top: 0px;\n}\n.per-label {\n  margin-right: 10px;\n  margin-bottom: 4px;\n  font-size: 1rem;\n}\n</style>\n\n<style scoped>\n.debug-button {\n  float: right;\n  margin-right: 20px;\n}\n.div-line {\n  height: auto;\n  width: 100%;\n  text-align: left;\n  margin-bottom: 10px;\n}\n.title-text {\n  font-family: \"Lucida Calligraphy\", cursive, serif, sans-serif;\n  font-size: 18px;\n  font-weight: bolder;\n}\n</style>\n"]}]}