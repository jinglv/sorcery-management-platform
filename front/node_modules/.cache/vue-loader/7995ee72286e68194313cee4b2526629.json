{"remainingRequest":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeanlv/sorcery-management-platform/front/src/views/chat/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeanlv/sorcery-management-platform/front/src/views/chat/index.vue","mtime":1698032217396},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1698032214874},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1698032217227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNoYXRncHQgfSBmcm9tICdAL2FwaS9jaGF0JwppbXBvcnQgQ2hhdGdwdCBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL2NoYXRncHQucG5nJwppbXBvcnQgS2VhaSBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL2tlYWkucG5nJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDaGF0JywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2Nyb2xsVHlwZTogJ3Njcm9sbCcsIC8vIHNjcm9sbCAgbm9yb2xsIOS/qeenjeexu+WeiwogICAgICBwbGFjZWhvbGRlcjogJ+asoui/juS9v+eUqENoYXTlsI/liqnmiYsuLi4nLAogICAgICBpbnB1dE1zZzogJycsCiAgICAgIHRhbGVMaXN0OiBbXSwKICAgICAgdG9vbDogewogICAgICAgIHNob3dFbW9qaTogZmFsc2UsCiAgICAgICAgY2FsbGJhY2s6IHRoaXMudG9vbEV2ZW50CiAgICAgIH0sCiAgICAgIGNvbmZpZzogewogICAgICAgIGltZzogQ2hhdGdwdCwKICAgICAgICBuYW1lOiAnQ2hhdCcsCiAgICAgICAgZGVwdDogJ+acgOeugOWNleOAgeacgOS+v+aNtycsCiAgICAgICAgY2FsbGJhY2s6IHRoaXMuYmluZENvdmVyLAogICAgICAgIGhpc3RvcnlDb25maWc6IHsKICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgdGlwOiAn5Yqg6L295pu05aSa5o+Q56S65qGGLOWPr+S7peebtOaOpeS9v+eUqOe7hOS7tueahCcsCiAgICAgICAgICBjYWxsYmFjazogdGhpcy5iaW5kTG9hZEhpc3RvcnkKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHNob3dSaWdodEJveDogZmFsc2UsCiAgICAgIHdpbkJhckNvbmZpZzogewogICAgICAgIGFjdGl2ZTogJ3dpbjAxJywKICAgICAgICB3aWR0aDogJzI4MHB4JywKICAgICAgICBsaXN0SGVpZ2h0OiAnNjBweCcsCiAgICAgICAgbGlzdDogWwogICAgICAgICAgewogICAgICAgICAgICBpZDogJ3dpbjAwJywKICAgICAgICAgICAgaW1nOiBDaGF0Z3B0LAogICAgICAgICAgICBuYW1lOiAnSndDaGF0JywKICAgICAgICAgICAgZGVwdDogJ+acgOeugOWNleOAgeacgOS+v+aNtycsCiAgICAgICAgICAgIHJlYWROdW06IDEKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIGlkOiAnd2luMDEnLAogICAgICAgICAgICBpbWc6IENoYXRncHQsCiAgICAgICAgICAgIG5hbWU6ICfpmLPlhYnmmI7lqprniLHkuIfniaknLAogICAgICAgICAgICBkZXB0OiAn5rKZ5ouJ6buR5rK5JywKICAgICAgICAgICAgcmVhZE51bTogMTIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgIGNhbGxiYWNrOiB0aGlzLmJpbmRXaW5CYXIKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogQGRlc2NyaXB0aW9uOiDngrnlh7vliqDovb3mm7TlpJrnmoTlm57osIPlh73mlbAKICAgICAqIEBwYXJhbSB7Kn0KICAgICAqIEByZXR1cm4geyp9CiAgICAgKi8KICAgIGFzeW5jIGJpbmRMb2FkSGlzdG9yeSgpIHsKICAgICAgY29uc3QgaGlzdG9yeSA9IG5ldyBBcnJheSgzKS5maWxsKCkubWFwKChpLCBqKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGRhdGU6ICcyMDIwLzA1LzIwIDIzOjE5OjA3JywKICAgICAgICAgIHRleHQ6IHsgdGV4dDogaiArIG5ldyBEYXRlKCkgfSwKICAgICAgICAgIG1pbmU6IGZhbHNlLAogICAgICAgICAgbmFtZTogJ0p3Q2hhdCcsCiAgICAgICAgICBpbWc6ICdpbWFnZS90aHJlZS5qcGVnJwogICAgICAgIH0KICAgICAgfSkKICAgICAgY29uc3QgbGlzdCA9IGhpc3RvcnkuY29uY2F0KHRoaXMudGFsZUxpc3QpCiAgICAgIHRoaXMudGFsZUxpc3QgPSBsaXN0CiAgICAgIGNvbnNvbGUubG9nKCfliqDovb3ljoblj7InLCBsaXN0LCBoaXN0b3J5KQogICAgICAvLyAg5Yqg6L295a6M5oiQ5ZCO6YCa55+l57uE5Lu25YWz6Zet5Yqg6L295Yqo55S7CiAgICAgIHRoaXMuY29uZmlnLmhpc3RvcnlDb25maWcudGlwID0gJ+WKoOi9veWujOaIkCcKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuJHJlZnMuandDaGF0LmZpbmlzaFB1bGxEb3duKCkKICAgICAgfSkKICAgIH0sCiAgICBhc3luYyBiaW5kRW50ZXIoZSkgewogICAgICBjb25zb2xlLmxvZyhlKQogICAgICBjb25zdCBtc2cgPSB0aGlzLmlucHV0TXNnCiAgICAgIGlmICghbXNnKSByZXR1cm4KICAgICAgY29uc3QgbXNnT2JqID0gewogICAgICAgICdkYXRlJzogJzIwMjAvMDUvMjAgMjM6MTk6MDcnLAogICAgICAgICd0ZXh0JzogeyAndGV4dCc6IG1zZyB9LAogICAgICAgICdtaW5lJzogdHJ1ZSwKICAgICAgICAnbmFtZSc6ICdKZWFuJywKICAgICAgICAnaW1nJzogS2VhaQogICAgICB9CiAgICAgIHRoaXMudGFsZUxpc3QucHVzaChtc2dPYmopCgogICAgICBjb25zdCByZXEgPSB7CiAgICAgICAgJ3F1ZXN0aW9uJzogbXNnCiAgICAgIH0KICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IGNoYXRncHQocmVxKQogICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgY29uc3QgcmVzcE9iaiA9IHsKICAgICAgICAgICdkYXRlJzogJzIwMjAvMDYvMjUgMjE6MTk6MDcnLAogICAgICAgICAgJ3RleHQnOiB7ICd0ZXh0JzogcmVzcC5yZXN1bHQuYW5zd2VyIH0sCiAgICAgICAgICAnbWluZSc6IGZhbHNlLAogICAgICAgICAgJ25hbWUnOiAnQ2hhdCcsCiAgICAgICAgICAnaW1nJzogQ2hhdGdwdAogICAgICAgIH0KICAgICAgICB0aGlzLnRhbGVMaXN0LnB1c2gocmVzcE9iaikKICAgICAgfQogICAgICB0aGlzLndpbkJhckNvbmZpZy5saXN0LnB1c2godGhpcy50YWxlTGlzdCkKICAgIH0sCiAgICAvLyDliIfmjaLnlKjmiLfnqpflj6PvvIzliqDovb3lr7nlupTnmoTljoblj7LorrDlvZUKICAgIGJpbmRXaW5CYXIocGxheSA9IHt9KSB7CiAgICAgIGNvbnN0IHsgdHlwZSwgZGF0YSA9IHt9fSA9IHBsYXkKICAgICAgY29uc29sZS5sb2cocGxheSkKICAgICAgaWYgKHR5cGUgPT09ICd3aW5CYXInKSB7CiAgICAgICAgY29uc3QgeyBpZCwgZGVwdCwgbmFtZSwgaW1nIH0gPSBkYXRhCiAgICAgICAgdGhpcy5jb25maWcgPSB7IC4uLnRoaXMuY29uZmlnLCBpZCwgZGVwdCwgbmFtZSwgaW1nIH0KICAgICAgICB0aGlzLndpbkJhckNvbmZpZy5hY3RpdmUgPSBpZAogICAgICAgIC8vIGlmIChpZCA9PT0gJ3dpbjAwJykgewogICAgICAgIC8vICAgdGhpcy50YWxlTGlzdCA9IGdldExpc3RBcnIoKQogICAgICAgIC8vIH0gZWxzZSB0aGlzLnRhbGVMaXN0ID0gZ2V0TGlzdEFycigoTWF0aC5yYW5kb20oKSAqIDQpID4+IDApCiAgICAgIH0KICAgICAgaWYgKHR5cGUgPT09ICd3aW5CdG4nKSB7CiAgICAgICAgY29uc3QgeyB0YXJnZXQ6IHsgaWQgfSA9IHt9fSA9IGRhdGEKICAgICAgICBjb25zdCB7IGxpc3QgfSA9IHRoaXMud2luQmFyQ29uZmlnCiAgICAgICAgdGhpcy53aW5CYXJDb25maWcubGlzdCA9IGxpc3QucmVkdWNlKChwLCBpKSA9PiB7CiAgICAgICAgICBpZiAoaWQgIT09IGkuaWQpIHAucHVzaChpKQogICAgICAgICAgcmV0dXJuIHAKICAgICAgICB9LCBbXSkKICAgICAgfQogICAgfSwKICAgIHRvb2xFdmVudCh0eXBlLCBvYmopIHsKICAgICAgY29uc29sZS5sb2coJ3Rvb2xzJywgdHlwZSwgb2JqKQogICAgfSwKICAgIHRhbGtFdmVudChwbGF5KSB7CiAgICAgIGNvbnNvbGUubG9nKHBsYXkpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqfile":"index.vue","sourceRoot":"src/views/chat","sourcesContent":["<template>\n  <div class=\"chat\">\n    <JwChat-index\n      ref=\"jwChat\"\n      v-model=\"inputMsg\"\n      :tale-list=\"taleList\"\n      :scroll-type=\"scrollType\"\n      :tool-config=\"tool\"\n      :placeholder=\"placeholder\"\n      :config=\"config\"\n      :win-bar-config=\"winBarConfig\"\n      :show-right-box=\"showRightBox\"\n      width=\"1200px\"\n      height=\"750px\"\n      @enter=\"bindEnter\"\n      @clickTalk=\"talkEvent\"\n    />\n  </div>\n</template>\n\n<script>\nimport { chatgpt } from '@/api/chat'\nimport Chatgpt from '../../assets/images/chatgpt.png'\nimport Keai from '../../assets/images/keai.png'\n\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      scrollType: 'scroll', // scroll  noroll 俩种类型\n      placeholder: '欢迎使用Chat小助手...',\n      inputMsg: '',\n      taleList: [],\n      tool: {\n        showEmoji: false,\n        callback: this.toolEvent\n      },\n      config: {\n        img: Chatgpt,\n        name: 'Chat',\n        dept: '最简单、最便捷',\n        callback: this.bindCover,\n        historyConfig: {\n          show: false,\n          tip: '加载更多提示框,可以直接使用组件的',\n          callback: this.bindLoadHistory\n        }\n      },\n      showRightBox: false,\n      winBarConfig: {\n        active: 'win01',\n        width: '280px',\n        listHeight: '60px',\n        list: [\n          {\n            id: 'win00',\n            img: Chatgpt,\n            name: 'JwChat',\n            dept: '最简单、最便捷',\n            readNum: 1\n          },\n          {\n            id: 'win01',\n            img: Chatgpt,\n            name: '阳光明媚爱万物',\n            dept: '沙拉黑油',\n            readNum: 12\n          }\n        ],\n        callback: this.bindWinBar\n      }\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    /**\n     * @description: 点击加载更多的回调函数\n     * @param {*}\n     * @return {*}\n     */\n    async bindLoadHistory() {\n      const history = new Array(3).fill().map((i, j) => {\n        return {\n          date: '2020/05/20 23:19:07',\n          text: { text: j + new Date() },\n          mine: false,\n          name: 'JwChat',\n          img: 'image/three.jpeg'\n        }\n      })\n      const list = history.concat(this.taleList)\n      this.taleList = list\n      console.log('加载历史', list, history)\n      //  加载完成后通知组件关闭加载动画\n      this.config.historyConfig.tip = '加载完成'\n      this.$nextTick(() => {\n        this.$refs.jwChat.finishPullDown()\n      })\n    },\n    async bindEnter(e) {\n      console.log(e)\n      const msg = this.inputMsg\n      if (!msg) return\n      const msgObj = {\n        'date': '2020/05/20 23:19:07',\n        'text': { 'text': msg },\n        'mine': true,\n        'name': 'Jean',\n        'img': Keai\n      }\n      this.taleList.push(msgObj)\n\n      const req = {\n        'question': msg\n      }\n      const resp = await chatgpt(req)\n      if (resp.success === true) {\n        const respObj = {\n          'date': '2020/06/25 21:19:07',\n          'text': { 'text': resp.result.answer },\n          'mine': false,\n          'name': 'Chat',\n          'img': Chatgpt\n        }\n        this.taleList.push(respObj)\n      }\n      this.winBarConfig.list.push(this.taleList)\n    },\n    // 切换用户窗口，加载对应的历史记录\n    bindWinBar(play = {}) {\n      const { type, data = {}} = play\n      console.log(play)\n      if (type === 'winBar') {\n        const { id, dept, name, img } = data\n        this.config = { ...this.config, id, dept, name, img }\n        this.winBarConfig.active = id\n        // if (id === 'win00') {\n        //   this.taleList = getListArr()\n        // } else this.taleList = getListArr((Math.random() * 4) >> 0)\n      }\n      if (type === 'winBtn') {\n        const { target: { id } = {}} = data\n        const { list } = this.winBarConfig\n        this.winBarConfig.list = list.reduce((p, i) => {\n          if (id !== i.id) p.push(i)\n          return p\n        }, [])\n      }\n    },\n    toolEvent(type, obj) {\n      console.log('tools', type, obj)\n    },\n    talkEvent(play) {\n      console.log(play)\n    }\n  }\n}\n</script>\n\n<style>\n.chat {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n}\n</style>\n"]}]}