{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/views/httprunner/suite/index.vue?vue&type=style&index=0&id=88705484&scoped=true&lang=css&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/views/httprunner/suite/index.vue","mtime":1689839481786},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1679466708477},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1679466707591},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1679466707836},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBhZ2luYXRpb24tY29udGFpbmVyewogIHdpZHRoOiAxMDBweDsKICBoZWlnaHQ6IDEwMHB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICByaWdodDogMTAlOwogIGJvdHRvbTogMDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6UA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/httprunner/suite","sourcesContent":["<template>\n  <div class=\"httprunner-suite\">\n    <div class=\"filter-container\">\n      <el-row :gutter=\"24\">\n        <el-col :span=\"6\">\n          <div class=\"demo-input-suffix\">\n            用例集名称:\n            <el-input v-model=\"suiteForm.name\" placeholder=\"请输入用例集名称\" style=\"width: 54%;margin-right: 5px;\" class=\"filter-item\" />\n          </div>\n        </el-col>\n        <el-col :span=\"7\">\n          <div class=\"demo-input-suffix\">\n            HttpRunner项目名称:\n            <el-select\n              v-model=\"projectValue\"\n              placeholder=\"请选择HttpRunner项目名称\"\n              style=\"width: 58%;\"\n              @change=\"changeProject\"\n            >\n              <el-option\n                v-for=\"item in projectOption\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </div>\n        </el-col>\n      </el-row>\n      <div style=\"text-align: right;margin-top: 10px;\">\n        <el-button class=\"filter-item\" icon=\"el-icon-delete\" @click=\"clearSearch()\">重置</el-button>\n        <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"initHttpRunnerSuiteList()\">搜索</el-button>\n      </div>\n    </div>\n    <div style=\"text-align: left; width: 100%; margin-top: 10px;\">\n      <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"showDialog()\">创建HttpRunner测试用例集</el-button>\n      <el-button type=\"warning\" icon=\"el-icon-bicycle\" @click=\"showBatchRunDialog()\">批量执行测试用例集</el-button>\n      <el-button type=\"success\" icon=\"el-icon-view\" @click=\"showResultDialog()\">查看批量执行结果</el-button>\n    </div>\n    <div style=\"margin-top: 10px;\">\n      <el-table ref=\"multipleTable\" :data=\"httpRunnerProjectSuiteData\" border style=\"width: 100%\" @selection-change=\"handleSelectionChange\">\n        <el-table-column\n          type=\"selection\"\n          width=\"55\"\n        />\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"name\" label=\"测试用例集名称\" />\n        <el-table-column prop=\"httprunner_project_name\" label=\"HttpRunner项目名称\" />\n        <el-table-column prop=\"status\" label=\"执行结果\">\n          <template slot-scope=\"{ row }\">\n            <el-tag :type=\"statusType(row.status)\" effect=\"dark\">\n              {{ row.status | resultStatus }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"create_time\" label=\"创建时间\" />\n        <el-table-column fixed=\"right\" label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"text\"\n              @click=\"runSuite(scope.row)\"\n            >执行</el-button>\n            <el-button\n              type=\"text\"\n              @click=\"viewSuiteReport(scope.row)\"\n            >查看报告</el-button>\n            <el-button\n              type=\"text\"\n              @click=\"showRowTestCaseInfo(scope.row)\"\n            >详情</el-button>\n            <el-button\n              type=\"text\"\n              @click=\"updateRowSuiteInfo(scope.row)\"\n            >编辑</el-button>\n            <el-button\n              type=\"text\"\n              @click=\"deleteRowSuiteInfo(scope.row)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <!--分页-->\n    <div class=\"pagination-container\">\n      <el-pagination\n        background\n        layout=\"total, prev, pager, next\"\n        :page-size=\"req.size\"\n        :total=\"total\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n    <el-drawer\n      :title=\"suiteTitle\"\n      :visible.sync=\"drawer\"\n      direction=\"rtl\"\n      size=\"60%\"\n    >\n      <http-runner-suite-dialog v-if=\"drawer\" :title=\"suiteTitle\" :sid=\"currentSuiteId\" @cancel=\"closeDrawer()\" @refresh=\"refreshApiList()\" />\n    </el-drawer>\n    <!--引入子组件-->\n    <http-runner-run-suite-dialog v-if=\"dialogRunFlag\" :ids=\"suiteIds\" @cancel=\"closeDialog\" />\n    <http-runner-run-result-dialog v-if=\"dialogResultFlag\" :type=\"type\" @cancel=\"closeDialog\" />\n    <http-runner-show-test-case-detail-dialog v-if=\"dialogViewApiFlag\" :id=\"currentTestCaseId\" @cancel=\"closeDialog\" />\n  </div>\n</template>\n\n<script>\nimport { httpRunnerProjectList, getHttpRunnerSuiteList, httpRunnerRenderReportApi, deleteHttpRunnerSuite } from '@/api/httprunner'\nimport httpRunnerRunResultDialog from '@/components/HttpRunner/httpRunnerRunResultDialog'\nimport httpRunnerShowTestCaseDetailDialog from '@/components/HttpRunner/httpRunnerShowTestCaseDetailDialog'\nimport httpRunnerSuiteDialog from '@/components/HttpRunner/httpRunnerSuiteDialog'\nimport httpRunnerRunSuiteDialog from '@/components/HttpRunner/httpRunnerRunSuiteDialog'\n\nexport default {\n  name: 'HttpRunnerApi',\n  components: {\n    httpRunnerRunResultDialog,\n    httpRunnerShowTestCaseDetailDialog,\n    httpRunnerSuiteDialog,\n    httpRunnerRunSuiteDialog\n  },\n  filters: {\n    resultStatus(value) {\n      if (value === 'fail') {\n        return '测试失败'\n      } else if (value === 'success') {\n        return '测试通过'\n      } else if (value === 'non') {\n        return '未执行'\n      } else if (value === 'error') {\n        return '执行错误'\n      } else {\n        return '未知状态'\n      }\n    }\n  },\n  data() {\n    return {\n      dialogFlag: false,\n      dialogRunFlag: false,\n      dialogResultFlag: false,\n      dialogViewApiFlag: false,\n      dialogUpdateApiFlag: false,\n      type: 'TESTSUITE',\n      suiteForm: {\n        name: '',\n        httprunner_project_id: ''\n      },\n      projectValue: '',\n      projectLabel: '',\n      projectOption: [],\n      req: {\n        page: 1,\n        size: 6\n      },\n      // 分页页数\n      total: 10,\n      httpRunnerProjectSuiteData: [],\n      suiteIds: [],\n      currentSuiteId: 0,\n      drawer: false,\n      suiteTitle: ''\n    }\n  },\n  mounted() {\n    // 组件加载的时候 进行调用\n    this.initHttpRunnerProjectList()\n    this.initHttpRunnerSuiteList()\n  },\n  methods: {\n    statusType(value) {\n      if (value === 'fail') {\n        return 'danger'\n      } else if (value === 'non') {\n        return 'info'\n      } else if (value === 'error') {\n        return 'warning'\n      } else if (value === 'success') {\n        return 'success'\n      } else {\n        return '未知状态'\n      }\n    },\n    async initHttpRunnerProjectList() {\n      const resp = await httpRunnerProjectList(this.req)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name\n          })\n        }\n        this.total = resp.total\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    changeProject(value) {\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n      this.suiteForm.httprunner_project_id = value\n      console.info('project value:', this.projectValue)\n    },\n    async initHttpRunnerSuiteList() {\n      this.suiteForm.httprunner_project_id = this.projectValue === '' ? 0 : this.projectValue\n      const resp = await getHttpRunnerSuiteList(this.req, this.suiteForm)\n      if (resp.success === true) {\n        this.total = resp.total\n        for (let i = 0; i < resp.items.length; i++) {\n          resp.items[i].create_time = this.$moment(\n            resp.items[i].create_time\n          ).format('YYYY-MM-DD HH:mm:ss')\n        }\n        this.httpRunnerProjectSuiteData = resp.items\n        this.$message.success('查询成功！')\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 清除搜索\n    clearSearch() {\n      this.suiteForm.name = ''\n      this.projectValue = 0\n      if (this.projectValue === 0) {\n        this.projectValue = ''\n      }\n      this.initHttpRunnerSuiteList()\n    },\n    // 展示子组件\n    showDialog() {\n      this.drawer = true\n      this.suiteTitle = '创建测试用例集'\n    },\n    runSuite(row) {\n      this.suiteIds = []\n      this.suiteIds.push(row.id)\n      console.info('suite ids:', this.suiteIds)\n      this.dialogRunFlag = true\n    },\n    async viewSuiteReport(row) {\n      console.info('name:', row.report_name)\n      const reportContent = await httpRunnerRenderReportApi(row.report_name)\n      // 保存进localStorage\n      window.localStorage.removeItem('callbackHTML')\n      window.localStorage.setItem('callbackHTML', reportContent)\n      // 读取本地保存的html数据，使用新窗口打开\n      const newWin = window.open('_', '_blank')\n      newWin.document.write(localStorage.getItem('callbackHTML'))\n      // 关闭输出流\n      newWin.document.close()\n    },\n    showBatchRunDialog() {\n      console.info('batch caseIds:', this.casesIds)\n      this.dialogRunFlag = true\n    },\n    showResultDialog() {\n      this.dialogResultFlag = true\n    },\n    showRowCaseTestInfo(row) {\n      this.currentSuiteId = row.id\n      this.dialogViewApiFlag = true\n    },\n    updateRowSuiteInfo(row) {\n      this.suiteTitle = '编辑测试用例集'\n      this.currentSuiteId = row.id\n      this.drawer = true\n    },\n    async deleteRowSuiteInfo(row) {\n      await deleteHttpRunnerSuite(row.id).then((resp) => {\n        this.$confirm('删除测试用例集, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n          center: true\n        }).then(() => {\n          if (resp.success === true) {\n            this.initHttpRunnerSuiteList()\n          } else {\n            this.$message.error(resp.error.msg)\n          }\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n      })\n    },\n    // 关闭子组件，子组件的closeDialog回调父组件\n    closeDialog() {\n      this.dialogFlag = false\n      this.dialogRunFlag = false\n      this.dialogResultFlag = false\n      this.dialogViewApiFlag = false\n      this.dialogUpdateApiFlag = false\n      this.initHttpRunnerSuiteList()\n    },\n    // 传递子组件，关闭抽屉\n    closeDrawer() {\n      this.drawer = false\n      this.initHttpRunnerSuiteList()\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      // console.log(`当前页: ${val}`)\n      this.req.page = val\n      this.initHttpRunnerSuiteList()\n    },\n    handleSelectionChange(val) {\n      this.selectiveTestCase(val)\n    },\n    selectiveTestCase(multipleSelection) {\n      // 获取选中的API id\n      const casesList = []\n      for (let i = 0; i < multipleSelection.length; i++) {\n        casesList.push(multipleSelection[i].id)\n      }\n      this.casesIds = casesList\n    }\n  }\n}\n</script>\n\n<style scoped>\n.pagination-container{\n  width: 100px;\n  height: 100px;\n  position: absolute;\n  right: 10%;\n  bottom: 0;\n}\n</style>\n"]}]}