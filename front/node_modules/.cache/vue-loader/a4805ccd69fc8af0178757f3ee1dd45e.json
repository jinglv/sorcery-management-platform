{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/views/tests/data/index.vue?vue&type=template&id=50587d16&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/views/tests/data/index.vue","mtime":1687831540795},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1679466707591},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}