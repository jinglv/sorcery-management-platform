{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/views/chat/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/views/chat/index.vue","mtime":1694486537755},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBPcGVuSWNvbiBmcm9tICcuLi8uLi9hc3NldHMvb3Blbi1pY29uLnN2ZycKaW1wb3J0IENsb3NlSWNvbiBmcm9tICcuLi8uLi9hc3NldHMvY2xvc2UtaWNvbi5zdmcnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NoYXQnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpY29uczogewogICAgICAgIG9wZW46IHsKICAgICAgICAgIGltZzogT3Blbkljb24sCiAgICAgICAgICBuYW1lOiAnZGVmYXVsdCcKICAgICAgICB9LAogICAgICAgIGNsb3NlOiB7CiAgICAgICAgICBpbWc6IENsb3NlSWNvbiwKICAgICAgICAgIG5hbWU6ICdkZWZhdWx0JwogICAgICAgIH0sCiAgICAgICAgY2xvc2VTdmc6IHsKICAgICAgICAgIGltZzogQ2xvc2VJY29uLAogICAgICAgICAgbmFtZTogJ2RlZmF1bHQnCiAgICAgICAgfQogICAgICB9LAogICAgICBwYXJ0aWNpcGFudHM6IFsKICAgICAgICB7CiAgICAgICAgICBpZDogJ3VzZXIxJywKICAgICAgICAgIG5hbWU6ICdNYXR0ZW8nLAogICAgICAgICAgaW1hZ2VVcmw6ICdodHRwczovL2F2YXRhcnMzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzE5MTU5ODk/cz0yMzAmdj00JwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgaWQ6ICd1c2VyMicsCiAgICAgICAgICBuYW1lOiAnU3VwcG9ydCcsCiAgICAgICAgICBpbWFnZVVybDogJ2h0dHBzOi8vYXZhdGFyczMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMzcwMTg4MzI/cz0yMDAmdj00JwogICAgICAgIH0KICAgICAgXSwgLy8g5a+56K+d55qE5omA5pyJ5Y+C5LiO6ICF55qE5YiX6KGo44CCJyBuYW1lICfmmK/nlKjmiLflkI3vvIwnIGlkICfnlKjkuo7lu7rnq4vmtojmga/nmoTkvZzogIXvvIwnIGltYWdlVXJsICflupTor6XmmK/nlKjmiLflpLTlg4/jgIIKICAgICAgdGl0bGVJbWFnZVVybDogJ2h0dHBzOi8vYS5zbGFjay1lZGdlLmNvbS82NmY5L2ltZy9hdmF0YXJzLXRlYW1zL2F2YV8wMDAxLTM0LnBuZycsCiAgICAgIG1lc3NhZ2VMaXN0OiBbCiAgICAgICAgeyB0eXBlOiAndGV4dCcsIGF1dGhvcjogYG1lYCwgZGF0YTogeyB0ZXh0OiBgU2F5IHllcyFgIH19LAogICAgICAgIHsgdHlwZTogJ3RleHQnLCBhdXRob3I6IGB1c2VyMWAsIGRhdGE6IHsgdGV4dDogYE5vLmAgfX0KICAgICAgXSwKICAgICAgLy8gLy8g6KaB5pi+56S655qE5raI5oGv5YiX6KGo5Y+v5Lul5Yqo5oCB5Zyw5YiG6aG15ZKM6LCD5pW0CiAgICAgIG5ld01lc3NhZ2VzQ291bnQ6IDAsCiAgICAgIGlzQ2hhdE9wZW46IHRydWUsIC8vIOehruWumuiBiuWkqeeql+WPo+W6lOivpeaJk+W8gOi/mOaYr+WFs+mXrQogICAgICBzaG93VHlwaW5nSW5kaWNhdG9yOiAnJywgLy8g5b2T6K6+572u5Li65Yy56YWN5Y+C5LiO6ICF55qE5YC85pe244CC5a6D5pi+56S654m55a6a55So5oi355qE6L6T5YWl5oyH56S6CiAgICAgIGNvbG9yczogewogICAgICAgIGhlYWRlcjogewogICAgICAgICAgYmc6ICcjNGU4Y2ZmJywKICAgICAgICAgIHRleHQ6ICcjZmZmZmZmJwogICAgICAgIH0sCiAgICAgICAgbGF1bmNoZXI6IHsKICAgICAgICAgIGJnOiAnIzRlOGNmZicKICAgICAgICB9LAogICAgICAgIG1lc3NhZ2VMaXN0OiB7CiAgICAgICAgICBiZzogJyNmZmZmZmYnCiAgICAgICAgfSwKICAgICAgICBzZW50TWVzc2FnZTogewogICAgICAgICAgYmc6ICcjNGU4Y2ZmJywKICAgICAgICAgIHRleHQ6ICcjZmZmZmZmJwogICAgICAgIH0sCiAgICAgICAgcmVjZWl2ZWRNZXNzYWdlOiB7CiAgICAgICAgICBiZzogJyNlYWVhZWEnLAogICAgICAgICAgdGV4dDogJyMyMjIyMjInCiAgICAgICAgfSwKICAgICAgICB1c2VySW5wdXQ6IHsKICAgICAgICAgIGJnOiAnI2Y0ZjdmOScsCiAgICAgICAgICB0ZXh0OiAnIzU2NTg2NycKICAgICAgICB9CiAgICAgIH0sIC8vIHNwZWNpZmllcyB0aGUgY29sb3Igc2NoZW1lIGZvciB0aGUgY29tcG9uZW50CiAgICAgIGFsd2F5c1Njcm9sbFRvQm90dG9tOiBmYWxzZSwgLy8g5b2T6K6+572u5Li6dHJ1ZeaXtu+8jOW9k+acieaWsOS6i+S7tuWPkeeUn+aXtijmlrDmtojmga/vvIznlKjmiLflvIDlp4vovpPlhaXigKYp77yM5oC75piv5bCG6IGK5aSp5rua5Yqo5Yiw5bqV6YOo44CCCiAgICAgIG1lc3NhZ2VTdHlsaW5nOiB0cnVlIC8vIOWQr+eUqCpib2xkKiAvZW1waC8gX3VuZGVybGluZV/nrYko5pu05aSa5L+h5oGv6K+36K6/6ZeuZ2l0aHViLmNvbS9tYXR0ZXp6YS9tc2dkb3duKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2VuZE1lc3NhZ2UodGV4dCkgewogICAgICBpZiAodGV4dC5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5uZXdNZXNzYWdlc0NvdW50ID0gdGhpcy5pc0NoYXRPcGVuID8gdGhpcy5uZXdNZXNzYWdlc0NvdW50IDogdGhpcy5uZXdNZXNzYWdlc0NvdW50ICsgMQogICAgICAgIHRoaXMub25NZXNzYWdlV2FzU2VudCh7IGF1dGhvcjogJ3N1cHBvcnQnLCB0eXBlOiAndGV4dCcsIGRhdGE6IHsgdGV4dCB9fSkKICAgICAgfQogICAgfSwKICAgIG9uTWVzc2FnZVdhc1NlbnQobWVzc2FnZSkgewogICAgICAvLyDlvZPnlKjmiLflj5HpgIHmtojmga/ml7bosIPnlKgKICAgICAgdGhpcy5tZXNzYWdlTGlzdCA9IFsuLi50aGlzLm1lc3NhZ2VMaXN0LCBtZXNzYWdlXQogICAgfSwKICAgIG9wZW5DaGF0KCkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIGZhYiBidXR0b24gdG8gb3BlbiB0aGUgY2hhdAogICAgICB0aGlzLmlzQ2hhdE9wZW4gPSB0cnVlCiAgICAgIHRoaXMubmV3TWVzc2FnZXNDb3VudCA9IDAKICAgIH0sCiAgICBjbG9zZUNoYXQoKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgYm90dG9uIHRvIGNsb3NlIHRoZSBjaGF0CiAgICAgIHRoaXMuaXNDaGF0T3BlbiA9IGZhbHNlCiAgICB9LAogICAgaGFuZGxlU2Nyb2xsVG9Ub3AoKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIHNjcm9sbHMgbWVzc2FnZSBsaXN0IHRvIHRvcAogICAgICAvLyBsZXZlcmFnZSBwYWdpbmF0aW9uIGZvciBsb2FkaW5nIGFub3RoZXIgcGFnZSBvZiBtZXNzYWdlcwogICAgfSwKICAgIGhhbmRsZU9uVHlwZSgpIHsKICAgICAgY29uc29sZS5sb2coJ0VtaXQgdHlwaW5nIGV2ZW50JykKICAgIH0sCiAgICBlZGl0TWVzc2FnZShtZXNzYWdlKSB7CiAgICAgIGNvbnN0IG0gPSB0aGlzLm1lc3NhZ2VMaXN0LmZpbmQobSA9PiBtLmlkID09PSBtZXNzYWdlLmlkKQogICAgICBtLmlzRWRpdGVkID0gdHJ1ZQogICAgICBtLmRhdGEudGV4dCA9IG1lc3NhZ2UuZGF0YS50ZXh0CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/views/chat","sourcesContent":["<template>\n  <div class=\"chat\" style=\"margin: 0 auto;\">\n    <beautiful-chat\n      :participants=\"participants\"\n      :on-message-was-sent=\"onMessageWasSent\"\n      :message-list=\"messageList\"\n      :new-messages-count=\"newMessagesCount\"\n      :is-open=\"isChatOpen\"\n      :open=\"openChat\"\n      :icons=\"icons\"\n      :show-close-button=\"false\"\n      :colors=\"colors\"\n      @onType=\"handleOnType\"\n      @edit=\"editMessage\"\n    />\n  </div>\n</template>\n\n<script>\nimport OpenIcon from '../../assets/open-icon.svg'\nimport CloseIcon from '../../assets/close-icon.svg'\n\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      icons: {\n        open: {\n          img: OpenIcon,\n          name: 'default'\n        },\n        close: {\n          img: CloseIcon,\n          name: 'default'\n        },\n        closeSvg: {\n          img: CloseIcon,\n          name: 'default'\n        }\n      },\n      participants: [\n        {\n          id: 'user1',\n          name: 'Matteo',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/1915989?s=230&v=4'\n        },\n        {\n          id: 'user2',\n          name: 'Support',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/37018832?s=200&v=4'\n        }\n      ], // 对话的所有参与者的列表。' name '是用户名，' id '用于建立消息的作者，' imageUrl '应该是用户头像。\n      titleImageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png',\n      messageList: [\n        { type: 'text', author: `me`, data: { text: `Say yes!` }},\n        { type: 'text', author: `user1`, data: { text: `No.` }}\n      ],\n      // // 要显示的消息列表可以动态地分页和调整\n      newMessagesCount: 0,\n      isChatOpen: true, // 确定聊天窗口应该打开还是关闭\n      showTypingIndicator: '', // 当设置为匹配参与者的值时。它显示特定用户的输入指示\n      colors: {\n        header: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        launcher: {\n          bg: '#4e8cff'\n        },\n        messageList: {\n          bg: '#ffffff'\n        },\n        sentMessage: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        receivedMessage: {\n          bg: '#eaeaea',\n          text: '#222222'\n        },\n        userInput: {\n          bg: '#f4f7f9',\n          text: '#565867'\n        }\n      }, // specifies the color scheme for the component\n      alwaysScrollToBottom: false, // 当设置为true时，当有新事件发生时(新消息，用户开始输入…)，总是将聊天滚动到底部。\n      messageStyling: true // 启用*bold* /emph/ _underline_等(更多信息请访问github.com/mattezza/msgdown)\n    }\n  },\n  methods: {\n    sendMessage(text) {\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        this.onMessageWasSent({ author: 'support', type: 'text', data: { text }})\n      }\n    },\n    onMessageWasSent(message) {\n      // 当用户发送消息时调用\n      this.messageList = [...this.messageList, message]\n    },\n    openChat() {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat() {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    handleScrollToTop() {\n      // called when the user scrolls message list to top\n      // leverage pagination for loading another page of messages\n    },\n    handleOnType() {\n      console.log('Emit typing event')\n    },\n    editMessage(message) {\n      const m = this.messageList.find(m => m.id === message.id)\n      m.isEdited = true\n      m.data.text = message.data.text\n    }\n  }\n}\n</script>\n"]}]}