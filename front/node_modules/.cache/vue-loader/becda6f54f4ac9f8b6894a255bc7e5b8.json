{"remainingRequest":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeanlv/sorcery-management-platform/front/src/components/Project/projectDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeanlv/sorcery-management-platform/front/src/components/Project/projectDialog.vue","mtime":1701677545657},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1698032214874},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1698032217227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldFByb2plY3QsIGNyZWF0ZVByb2plY3QsIHVwZGF0ZVByb2plY3QgfSBmcm9tICdAL2FwaS9wcm9qZWN0cycKaW1wb3J0IHsgdXBkYXRlSW1hZ2UgfSBmcm9tICdAL2FwaS9jb21tb25zJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQb3JqZWN0RGlhbG9nJywKICBjb21wb25lbnRzOiB7fSwKICBwcm9wczogewogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcGlkOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpYWxvZ1Zpc2libGU6IHRydWUsCiAgICAgIHNob3dUaXRsZTogJycsCiAgICAgIHVwZGF0ZVVSTDogJycsCiAgICAgIHByb2plY3RGb3JtOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgZGVzY3JpYmU6ICcnLAogICAgICAgIGltYWdlOiAnJwogICAgICB9LAogICAgICBydWxlczogewogICAgICAgIG5hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXpobnnm67nmoTlkI3np7AnLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgZmlsZUxpc3Q6IFtdLCAvLyDnjrDmnInlm77niYfliJfooagKICAgICAgaW1hZ2VVcmw6ICcnLCAvLyDlm77niYfot6/lvoQKICAgICAgaW1hZ2VWaXNpYmxlOiBmYWxzZSwKICAgICAgZGlzYWJsZWQ6IGZhbHNlCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKHRoaXMudGl0bGUgPT09ICdjcmVhdGUnKSB7CiAgICAgIHRoaXMuc2hvd1RpdGxlID0gJ+WIm+W7uumhueebricKICAgIH0gZWxzZSBpZiAodGhpcy50aXRsZSA9PT0gJ2RldGFpbCcpIHsKICAgICAgdGhpcy5zaG93VGl0bGUgPSAn6aG555uu6K+m5oOFJwogICAgICB0aGlzLmluaXRQcm9qZWN0RGV0YWlsKCkKICAgIH0gZWxzZSBpZiAodGhpcy50aXRsZSA9PT0gJ2VkaXQnKSB7CiAgICAgIHRoaXMuc2hvd1RpdGxlID0gJ+e8lui+kemhueebricKICAgICAgdGhpcy5pbml0UHJvamVjdERldGFpbCgpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZURpYWxvZygpIHsKICAgICAgY29uc29sZS5sb2coJ2Nsb3NlRGlhbG9nJykKICAgICAgdGhpcy4kZW1pdCgnY2FuY2VsJywge30pCiAgICB9LAogICAgLy8g5p+l6K+i6aG555uu6K+m5oOFCiAgICBhc3luYyBpbml0UHJvamVjdERldGFpbCgpIHsKICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IGdldFByb2plY3QodGhpcy5waWQpCiAgICAgIGlmIChyZXNwLnN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICB0aGlzLnByb2plY3RGb3JtID0gcmVzcC5yZXN1bHQKICAgICAgICB0aGlzLmZpbGVMaXN0LnB1c2goewogICAgICAgICAgbmFtZTogcmVzcC5yZXN1bHQuaW1hZ2UsCiAgICAgICAgICB1cmw6ICdzdGF0aWMvaW1hZ2VzLycgKyByZXNwLnJlc3VsdC5pbWFnZQogICAgICAgIH0pCiAgICAgICAgdGhpcy5pbWFnZVVybCA9ICdzdGF0aWMvaW1hZ2VzLycgKyByZXNwLnJlc3VsdC5pbWFnZQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn6aG555uu6K+m5oOF5oiQ5Yqf77yBJykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfpobnnm67or6bmg4XlpLHotKXvvIEnKQogICAgICB9CiAgICB9LAogICAgLy8g5Yib5bu66aG555uuCiAgICBzdWJtaXRQcm9qZWN0KGZvcm1OYW1lKSB7CiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKHRoaXMudGl0bGUgPT09ICdjcmVhdGUnKSB7CiAgICAgICAgICAgIGNyZWF0ZVByb2plY3QodGhpcy5wcm9qZWN0Rm9ybSkudGhlbigocmVzcCkgPT4gewogICAgICAgICAgICAgIGlmIChyZXNwLnN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgIC8vIOWIm+W7uuaIkOWKn++8jOWFs+mXreW8ueeqlwogICAgICAgICAgICAgICAgdGhpcy5jbG9zZURpYWxvZygpCiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+mhueebruWIm+W7uuaIkOWKn++8gScpCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcC5lcnJvci5tZXNzYWdlKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy50aXRsZSA9PT0gJ2VkaXQnKSB7CiAgICAgICAgICAgIHVwZGF0ZVByb2plY3QodGhpcy5waWQsIHRoaXMucHJvamVjdEZvcm0pLnRoZW4oKHJlc3ApID0+IHsKICAgICAgICAgICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlRGlhbG9nKCkKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn6aG555uu57yW6L6R5oiQ5Yqf77yBJykKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwLmVycm9yLm1lc3NhZ2UpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgLy8g5Yig6Zmk5Zu+54mHCiAgICBoYW5kbGVSZW1vdmUoZmlsZSkgewogICAgICBjb25zb2xlLmxvZygn5Yig6ZmkJywgZmlsZSkKICAgIH0sCiAgICAvLyDpooTop4jlm77niYcKICAgIGhhbmRsZVByZXZpZXcoZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgY29uc29sZS5sb2coJ+S4iuS8oOaIkOWKnycsIGZpbGUsIGZpbGVMaXN0KQogICAgICB0aGlzLmltYWdlVXJsID0gZmlsZS51cmwKICAgICAgdGhpcy5pbWFnZVZpc2libGUgPSB0cnVlCiAgICB9LAogICAgLy8g5LiK5Lyg5paH5Lu2CiAgICBhc3luYyBiZWZvcmVVcGxvYWQoZmlsZSkgewogICAgICBjb25zdCBmYiA9IG5ldyBGb3JtRGF0YSgpCiAgICAgIGZiLmFwcGVuZCgnZmlsZScsIGZpbGUpCiAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCB1cGRhdGVJbWFnZShmYikKICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgIC8vIOiOt+WPluS4iuS8oOaWh+S7tu+8jOi/lOWbnueahOaWh+S7tuWQje+8jOeUqOS6juWIm+W7uumhueebruWtmOWCqAogICAgICAgIHRoaXMucHJvamVjdEZvcm0uaW1hZ2UgPSByZXNwLnJlc3VsdC5uYW1lCiAgICAgICAgLy8g5ou85o6l6Z2Z5oCB5paH5Lu26Lev5b6E77yM55So5LqO5Zu+54mH5bGV56S6CiAgICAgICAgY29uc3QgaW1hZ2VQYXRoID0gJy9zdGF0aWMvaW1hZ2VzLycgKyByZXNwLnJlc3VsdC5uYW1lCiAgICAgICAgY29uc3QgaW1hZ2VJbmZvID0gewogICAgICAgICAgbmFtZTogZmlsZS5uYW1lLAogICAgICAgICAgdXJsOiBpbWFnZVBhdGgKICAgICAgICB9CiAgICAgICAgdGhpcy5maWxlTGlzdC5wdXNoKGltYWdlSW5mbykKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+S4iuS8oOaIkOWKn++8gScpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwLmVycm9yLm1lc3NhZ2UpCiAgICAgIH0KICAgIH0sCiAgICAvLyDopobnm5bpu5jorqTnmoTkuIrkvKDooYzkuLrvvIzlj6/ku6Xoh6rlrprkuYnkuIrkvKDnmoTlrp7njrDvvIzpgb/lhY3kvb/nlKjmoYbmnrboh6rliqjkuIrkvKDlip/og70KICAgIGh0dHBSZXF1ZXN0KCkge30KICB9Cn0K"},{"version":3,"sources":["projectDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"projectDialog.vue","sourceRoot":"src/components/Project","sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"500px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      v-if=\"title == 'detail'\"\n      ref=\"ruleForm\"\n      :model=\"projectForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"name\">{{\n        projectForm.name\n      }}</el-form-item>\n      <el-form-item\n        label=\"项目描述\"\n        prop=\"desc\"\n      >{{ projectForm.describe }}\n      </el-form-item>\n      <el-form-item label=\"图片\" prop=\"image\">\n        <div id=\"image\">\n          <el-image\n            style=\"width: 100px; height: 100px\"\n            :src=\"imageUrl\"\n          />\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <el-button @click=\"closeDialog\">返回</el-button>\n      </el-form-item>\n    </el-form>\n    <el-form\n      v-if=\"title != 'detail'\"\n      ref=\"ruleForm\"\n      :model=\"projectForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"name\">\n        <el-input v-model=\"projectForm.name\" />\n      </el-form-item>\n      <el-form-item label=\"项目描述\" prop=\"desc\">\n        <el-input v-model=\"projectForm.describe\" type=\"textarea\" />\n      </el-form-item>\n      <el-form-item label=\"图片\" prop=\"desc\">\n        <div id=\"image\">\n          <el-upload\n            action=\"#\"\n            :before-upload=\"beforeUpload\"\n            :http-request=\"httpRequest\"\n            list-type=\"picture-card\"\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            :file-list=\"fileList\"\n          >\n            <i class=\"el-icon-plus\" />\n          </el-upload>\n          <el-dialog :visible.sync=\"imageVisible\">\n            <img width=\"100%\" :src=\"imageUrl\" alt=\"\">\n          </el-dialog>\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <el-button @click=\"closeDialog\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"submitProject('ruleForm')\"\n        >确定</el-button>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n<script>\nimport { getProject, createProject, updateProject } from '@/api/projects'\nimport { updateImage } from '@/api/commons'\n\nexport default {\n  name: 'PorjectDialog',\n  components: {},\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    pid: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      dialogVisible: true,\n      showTitle: '',\n      updateURL: '',\n      projectForm: {\n        name: '',\n        describe: '',\n        image: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入项目的名称', trigger: 'blur' }\n        ]\n      },\n      fileList: [], // 现有图片列表\n      imageUrl: '', // 图片路径\n      imageVisible: false,\n      disabled: false\n    }\n  },\n  mounted() {\n    if (this.title === 'create') {\n      this.showTitle = '创建项目'\n    } else if (this.title === 'detail') {\n      this.showTitle = '项目详情'\n      this.initProjectDetail()\n    } else if (this.title === 'edit') {\n      this.showTitle = '编辑项目'\n      this.initProjectDetail()\n    }\n  },\n  methods: {\n    closeDialog() {\n      console.log('closeDialog')\n      this.$emit('cancel', {})\n    },\n    // 查询项目详情\n    async initProjectDetail() {\n      const resp = await getProject(this.pid)\n      if (resp.success === true) {\n        this.projectForm = resp.result\n        this.fileList.push({\n          name: resp.result.image,\n          url: 'static/images/' + resp.result.image\n        })\n        this.imageUrl = 'static/images/' + resp.result.image\n        this.$message.success('项目详情成功！')\n      } else {\n        this.$message.error('项目详情失败！')\n      }\n    },\n    // 创建项目\n    submitProject(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          if (this.title === 'create') {\n            createProject(this.projectForm).then((resp) => {\n              if (resp.success === true) {\n                // 创建成功，关闭弹窗\n                this.closeDialog()\n                this.$message.success('项目创建成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          } else if (this.title === 'edit') {\n            updateProject(this.pid, this.projectForm).then((resp) => {\n              if (resp.success === true) {\n                this.closeDialog()\n                this.$message.success('项目编辑成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    // 删除图片\n    handleRemove(file) {\n      console.log('删除', file)\n    },\n    // 预览图片\n    handlePreview(file, fileList) {\n      console.log('上传成功', file, fileList)\n      this.imageUrl = file.url\n      this.imageVisible = true\n    },\n    // 上传文件\n    async beforeUpload(file) {\n      const fb = new FormData()\n      fb.append('file', file)\n      const resp = await updateImage(fb)\n      if (resp.success === true) {\n        // 获取上传文件，返回的文件名，用于创建项目存储\n        this.projectForm.image = resp.result.name\n        // 拼接静态文件路径，用于图片展示\n        const imagePath = '/static/images/' + resp.result.name\n        const imageInfo = {\n          name: file.name,\n          url: imagePath\n        }\n        this.fileList.push(imageInfo)\n        this.$message.success('上传成功！')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    // 覆盖默认的上传行为，可以自定义上传的实现，避免使用框架自动上传功能\n    httpRequest() {}\n  }\n}\n</script>\n"]}]}