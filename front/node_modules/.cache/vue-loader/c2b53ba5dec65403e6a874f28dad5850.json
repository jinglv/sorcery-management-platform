{"remainingRequest":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeanlv/sorcery-management-platform/front/src/views/cases/demand/index.vue?vue&type=template&id=3764b418&scoped=true&","dependencies":[{"path":"/Users/jeanlv/sorcery-management-platform/front/src/views/cases/demand/index.vue","mtime":1702621109518},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1698032217228},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1698032215054},{"path":"/Users/jeanlv/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1698032217227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}