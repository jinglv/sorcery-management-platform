{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/Envs/envsDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/Envs/envsDialog.vue","mtime":1685671628987},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHByb2plY3RMaXN0IH0gZnJvbSAnQC9hcGkvcHJvamVjdHMnCmltcG9ydCB7IGNyZWF0ZUVudnMsIHVwZGF0ZUVudnMsIGdldEVudnNJbmZvIH0gZnJvbSAnQC9hcGkvZW52cycKCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcGlkOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfSwKICAgIGVpZDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzaG93VGl0bGU6ICcnLAogICAgICBkaWFsb2dWaXNpYmxlOiB0cnVlLAogICAgICBlbnZGb3JtOiB7CiAgICAgICAgcHJvamVjdF9pZDogMCwKICAgICAgICBuYW1lOiAnJywKICAgICAgICBlbnY6ICcnLAogICAgICAgIGJyb3dzZXI6ICcnLAogICAgICAgIHByb3RvY29sOiAnJywKICAgICAgICBiYXNlX3VybDogJycKICAgICAgfSwKICAgICAgcnVsZXM6IHsKICAgICAgICBuYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl546v5aKD55qE5ZCN56ewJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdLAogICAgICAgIGVudjogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeeOr+Wig+eahOWAvCzlpoI6ZGV244CBdGVzdOOAgXByb2QnLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgICAgYmFzZV91cmw6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXnjq/looPnmoTln7rnoYBVUkwnLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgaHR0cFZhbHVlOiAxLAogICAgICBodHRwTGFiZWw6ICdodHRwOi8vJywKICAgICAgaHR0cE9wdGlvbjogWwogICAgICAgIHsKICAgICAgICAgIHZhbHVlOiAxLAogICAgICAgICAgbGFiZWw6ICdodHRwOi8vJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdmFsdWU6IDIsCiAgICAgICAgICBsYWJlbDogJ2h0dHBzOi8vJwogICAgICAgIH0KICAgICAgXSwKICAgICAgc2F2ZUZsYWc6IGZhbHNlLAogICAgICBwcm9qZWN0VmFsdWU6ICcnLAogICAgICBwcm9qZWN0TGFiZWw6ICcnLAogICAgICBwcm9qZWN0T3B0aW9uOiBbXQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdFByb2plY3RMaXN0KCkKICAgIGlmICh0aGlzLnRpdGxlID09PSAnY3JlYXRlJykgewogICAgICB0aGlzLnNob3dUaXRsZSA9ICfliJvlu7rnjq/looPor6bmg4UnCiAgICB9IGVsc2UgaWYgKHRoaXMudGl0bGUgPT09ICdlZGl0JykgewogICAgICB0aGlzLnNob3dUaXRsZSA9ICfnvJbovpHnjq/looPor6bmg4UnCiAgICAgIHRoaXMuZ2V0RW52c0luZm8oKQogICAgfSBlbHNlIGlmICh0aGlzLnRpdGxlID09PSAndmlldycpIHsKICAgICAgdGhpcy5zaG93VGl0bGUgPSAn5p+l55yL546v5aKD6K+m5oOFJwogICAgICB0aGlzLmdldEVudnNJbmZvKCkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNsb3NlRGlhbG9nKCkgewogICAgICB0aGlzLiRlbWl0KCdjYW5jZWwnLCB7fSkKICAgIH0sCiAgICBzdWJtaXRGb3JtKGZvcm1OYW1lKSB7CiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKHRoaXMudGl0bGUgPT09ICdjcmVhdGUnKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnBpZCAhPT0gMCkgewogICAgICAgICAgICAgIHRoaXMuZW52Rm9ybS5wcm9qZWN0X2lkID0gdGhpcy5waWQKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGlzLmVudkZvcm0ucHJvamVjdF9pZCA9IHRoaXMucHJvamVjdFZhbHVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5lbnZGb3JtLnByb3RvY29sID0gdGhpcy5odHRwTGFiZWwKICAgICAgICAgICAgY3JlYXRlRW52cyh0aGlzLmVudkZvcm0pLnRoZW4oKHJlc3ApID0+IHsKICAgICAgICAgICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAvLyDlu7bml7blmagKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICB0aGlzLnNhdmVGbGFnID0gdHJ1ZQogICAgICAgICAgICAgICAgfSwgNTAwKQogICAgICAgICAgICAgICAgdGhpcy5jbG9zZURpYWxvZygpCiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIm+W7uuaIkOWKn++8gScpCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcC5lcnJvci5tZXNzYWdlKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy50aXRsZSA9PT0gJ2VkaXQnKSB7CiAgICAgICAgICAgIHRoaXMuZW52Rm9ybS5wcm9qZWN0X2lkID0gdGhpcy5wcm9qZWN0VmFsdWUKICAgICAgICAgICAgdGhpcy5lbnZGb3JtLnByb3RvY29sID0gdGhpcy5odHRwTGFiZWwKICAgICAgICAgICAgdXBkYXRlRW52cyh0aGlzLmVpZCwgdGhpcy5lbnZGb3JtKS50aGVuKChyZXNwKSA9PiB7CiAgICAgICAgICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgLy8g5bu25pe25ZmoCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgICAgdGhpcy5zYXZlRmxhZyA9IHRydWUKICAgICAgICAgICAgICAgIH0sIDUwMCkKICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VEaWFsb2coKQogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmm7TmlrDmiJDlip/vvIEnKQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3AuZXJyb3IubWVzc2FnZSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBmYWxzZQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICAvLyDojrflj5bpgInkuK3nmoTljY/orq7lgLwKICAgIGNoYW5nZVByb3RvY29sKHZhbHVlKSB7CiAgICAgIHRoaXMuaHR0cFZhbHVlID0gdmFsdWUKICAgICAgdGhpcy5odHRwTGFiZWwgPSB0aGlzLmh0dHBPcHRpb24uZmluZCgKICAgICAgICAoaXRlbSkgPT4gaXRlbS52YWx1ZSA9PT0gdmFsdWUKICAgICAgKS5sYWJlbAogICAgICBjb25zb2xlLmxvZygn6YCJ5Lit5ZCN56ewJywgdGhpcy5odHRwTGFiZWwpCiAgICB9LAogICAgLy8g5Yid5aeL5YyW6aG555uu5YiX6KGoCiAgICBhc3luYyBpbml0UHJvamVjdExpc3QoKSB7CiAgICAgIGNvbnN0IHJlcV9ib2R5ID0gewogICAgICAgICduYW1lJzogJycKICAgICAgfQogICAgICBjb25zdCByZXNwID0gYXdhaXQgcHJvamVjdExpc3QodGhpcy5yZXEsIHJlcV9ib2R5KQogICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXNwLml0ZW1zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB0aGlzLnByb2plY3RPcHRpb24ucHVzaCh7CiAgICAgICAgICAgIHZhbHVlOiByZXNwLml0ZW1zW2ldLmlkLAogICAgICAgICAgICBsYWJlbDogcmVzcC5pdGVtc1tpXS5uYW1lCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgICAvLyB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuafpeivouaIkOWKn++8gSIpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5p+l6K+i5aSx6LSl77yBJykKICAgICAgfQogICAgfSwKICAgIC8vIOS/ruaUuemAieS4remhueebrgogICAgY2hhbmdlUHJvamVjdCh2YWx1ZSkgewogICAgICB0aGlzLnByb2plY3RWYWx1ZSA9IHZhbHVlCiAgICAgIHRoaXMucHJvamVjdExhYmVsID0gdGhpcy5wcm9qZWN0T3B0aW9uLmZpbmQoCiAgICAgICAgKGl0ZW0pID0+IGl0ZW0udmFsdWUgPT09IHZhbHVlCiAgICAgICkubGFiZWwKICAgIH0sCiAgICBhc3luYyBnZXRFbnZzSW5mbygpIHsKICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IGdldEVudnNJbmZvKHRoaXMuZWlkKQogICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy5lbnZGb3JtID0gcmVzcC5yZXN1bHQKICAgICAgICB0aGlzLnByb2plY3RWYWx1ZSA9IHJlc3AucmVzdWx0LnByb2plY3RfaWQKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3AuZXJyb3IubWVzc2FnZSkKICAgICAgfQogICAgfSwKICAgIGp1bXBFbnZzKCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2VudnMvaW5kZXgnKQogICAgfQogIH0KfQo="},{"version":3,"sources":["envsDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"envsDialog.vue","sourceRoot":"src/components/Envs","sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"1000px\"\n    :before-close=\"closeDialog\"\n  >\n    <div v-if=\"title === 'view'\">\n      <el-form\n        :model=\"envForm\"\n        label-width=\"100px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"项目名称：\" prop=\"project_name\">{{ envForm.project_name }}</el-form-item>\n        <el-form-item label=\"环境名称：\" prop=\"name\">{{ envForm.name }}</el-form-item>\n        <el-form-item label=\"环境值：\" prop=\"env\">{{ envForm.env }}</el-form-item>\n        <el-form-item label=\"浏览器：\" prop=\"browser\">{{ envForm.browser }}</el-form-item>\n        <el-form-item label=\"请求协议：\" prop=\"protocol\">{{ envForm.protocol }}</el-form-item>\n        <el-form-item label=\"基础URL:\" prop=\"base_url\">{{ envForm.base_url }}</el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog()\">返回</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div v-if=\"title !== 'view'\">\n      <el-form\n        ref=\"ruleForm\"\n        :model=\"envForm\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item v-if=\"pid===0\" label=\"请选择项目\" prop=\"name\">\n          <el-select\n            v-model=\"projectValue\"\n            placeholder=\"请选择项目\"\n            style=\"width: 100%;\"\n            @change=\"changeProject\"\n          >\n            <el-option\n              v-for=\"item in projectOption\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"环境名称\" prop=\"name\">\n          <el-input v-model=\"envForm.name\" />\n        </el-form-item>\n        <el-form-item label=\"环境值\" prop=\"env\">\n          <el-input v-model=\"envForm.env\" />\n        </el-form-item>\n        <el-form-item label=\"浏览器\">\n          <el-input v-model=\"envForm.browser\" />\n        </el-form-item>\n        <el-form-item label=\"基础URL\" prop=\"base_url\" :inline=\"true\">\n          <el-select\n            v-model=\"httpValue\"\n            style=\"width: 15%; float: left\"\n            @change=\"changeProtocol\"\n          >\n            <el-option\n              v-for=\"item in httpOption\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n          <el-input v-model=\"envForm.base_url\" style=\"width:85%\" />\n        </el-form-item>\n        <el-form-item>\n          <div class=\"dialog-footer\" style=\"text-align: right\">\n            <el-button v-if=\"pid!==0\" type=\"primary\" @click=\"jumpEnvs()\">查看环境列表</el-button>\n            <el-button @click=\"closeDialog()\">取消</el-button>\n            <el-button\n              type=\"primary\"\n              :disabled=\"saveFlag\"\n              @click=\"submitForm('ruleForm')\"\n            >保存</el-button>\n          </div>\n        </el-form-item>\n      </el-form>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { projectList } from '@/api/projects'\nimport { createEnvs, updateEnvs, getEnvsInfo } from '@/api/envs'\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    pid: {\n      type: Number,\n      default: 0\n    },\n    eid: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      showTitle: '',\n      dialogVisible: true,\n      envForm: {\n        project_id: 0,\n        name: '',\n        env: '',\n        browser: '',\n        protocol: '',\n        base_url: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入环境的名称', trigger: 'blur' }\n        ],\n        env: [\n          { required: true, message: '请输入环境的值,如:dev、test、prod', trigger: 'blur' }\n        ],\n        base_url: [\n          { required: true, message: '请输入环境的基础URL', trigger: 'blur' }\n        ]\n      },\n      httpValue: 1,\n      httpLabel: 'http://',\n      httpOption: [\n        {\n          value: 1,\n          label: 'http://'\n        },\n        {\n          value: 2,\n          label: 'https://'\n        }\n      ],\n      saveFlag: false,\n      projectValue: '',\n      projectLabel: '',\n      projectOption: []\n    }\n  },\n  mounted() {\n    this.initProjectList()\n    if (this.title === 'create') {\n      this.showTitle = '创建环境详情'\n    } else if (this.title === 'edit') {\n      this.showTitle = '编辑环境详情'\n      this.getEnvsInfo()\n    } else if (this.title === 'view') {\n      this.showTitle = '查看环境详情'\n      this.getEnvsInfo()\n    }\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          if (this.title === 'create') {\n            if (this.pid !== 0) {\n              this.envForm.project_id = this.pid\n            } else {\n              this.envForm.project_id = this.projectValue\n            }\n            this.envForm.protocol = this.httpLabel\n            createEnvs(this.envForm).then((resp) => {\n              if (resp.success === true) {\n                // 延时器\n                setTimeout(() => {\n                  this.saveFlag = true\n                }, 500)\n                this.closeDialog()\n                this.$message.success('创建成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          } else if (this.title === 'edit') {\n            this.envForm.project_id = this.projectValue\n            this.envForm.protocol = this.httpLabel\n            updateEnvs(this.eid, this.envForm).then((resp) => {\n              if (resp.success === true) {\n                // 延时器\n                setTimeout(() => {\n                  this.saveFlag = true\n                }, 500)\n                this.closeDialog()\n                this.$message.success('更新成功！')\n              } else {\n                this.$message.error(resp.error.message)\n              }\n            })\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    // 获取选中的协议值\n    changeProtocol(value) {\n      this.httpValue = value\n      this.httpLabel = this.httpOption.find(\n        (item) => item.value === value\n      ).label\n      console.log('选中名称', this.httpLabel)\n    },\n    // 初始化项目列表\n    async initProjectList() {\n      const req_body = {\n        'name': ''\n      }\n      const resp = await projectList(this.req, req_body)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name\n          })\n        }\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 修改选中项目\n    changeProject(value) {\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n    },\n    async getEnvsInfo() {\n      const resp = await getEnvsInfo(this.eid)\n      if (resp.success === true) {\n        this.envForm = resp.result\n        this.projectValue = resp.result.project_id\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    jumpEnvs() {\n      this.$router.push('/envs/index')\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n</style>\n"]}]}