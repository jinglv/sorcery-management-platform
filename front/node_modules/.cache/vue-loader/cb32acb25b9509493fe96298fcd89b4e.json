{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/aceCodeEditorDialog.vue?vue&type=style&index=0&id=73b996be&lang=scss&scoped=true&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/aceCodeEditorDialog.vue","mtime":1688696052166},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1679466708477},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1679466707591},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1679466707836},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/sass-loader/dist/cjs.js","mtime":1679466716634},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWNlLWNvbnRhaW5lciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwoKICAuYWNlLWVkaXRvciB7CiAgICB3aWR0aDogNjAwcHg7CiAgICBoZWlnaHQ6IDIwMHB4OwogIH0KCiAgLmJvb2ttYXJrbGV0IHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAwOwogICAgYm90dG9tOiAwOwogICAgd2lkdGg6IDIwcHg7CiAgICBoZWlnaHQ6IDIwcHg7CiAgICB6LWluZGV4OiAyOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgYm9yZGVyLXdpZHRoOiA5cHg7CiAgICBib3JkZXItc3R5bGU6IHNvbGlkOwogICAgYm9yZGVyLWNvbG9yOiBsaWdodGJsdWUgZ3JheSBncmF5IHJnYigyMDYsIDE3MywgMjMwKTsKICAgIGJvcmRlci1pbWFnZTogaW5pdGlhbDsKICB9Cn0K"},{"version":3,"sources":["aceCodeEditorDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"aceCodeEditorDialog.vue","sourceRoot":"src/components/HttpRunner","sourcesContent":["<template>\n  <div class=\"ace-container\">\n    <!-- 官方文档中使用 id，这里禁止使用，在后期打包后容易出现问题，使用 ref 或者 DOM 就行 -->\n    <div ref=\"ace\" class=\"ace-editor\" />\n  </div>\n</template>\n\n<script>\nimport ace from 'ace-builds'\nimport 'ace-builds/webpack-resolver' // 在 webpack 环境中使用必须要导入\nimport 'ace-builds/src-noconflict/theme-monokai' // 默认设置的主题\nimport 'ace-builds/src-noconflict/theme-chrome' // 默认设置的主题\nimport 'ace-builds/src-noconflict/mode-javascript' // 默认设置的语言模式\nimport 'ace-builds/src-min-noconflict/mode-python' // python\nimport 'ace-builds/src-min-noconflict/mode-batchfile' // bash\nimport 'ace-builds/src-min-noconflict/mode-powershell' // powershell\nimport 'ace-builds/src-min-noconflict/mode-yaml' // yaml\nimport 'ace-builds/src-min-noconflict/mode-text' // 文本\nimport 'ace-builds/src-min-noconflict/snippets/json' // json\nimport 'ace-builds/src-noconflict/snippets/text'\nimport 'ace-builds/src-min-noconflict/ext-language_tools'\n\nexport default {\n  name: 'AceEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    themePath: {\n      type: String,\n      default: 'ace/theme/textmate'\n    },\n    modePath: {\n      type: String,\n      default: 'text'\n    },\n    maxLines: {\n      type: Number,\n      default: 20\n    },\n    minLines: {\n      type: Number,\n      default: 20\n    },\n    input: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      aceEditor: null\n    }\n  },\n  watch: {\n    value: {\n      handler(newValue) {\n        if (newValue === '' || newValue) {\n          this.aceEditor.setValue(newValue)\n        }\n      }\n    },\n    modePath: {\n      handler(newValue) {\n        if (newValue) {\n          this.aceEditor.getSession().setMode('ace/mode/' + newValue)\n        }\n      }\n    }\n  },\n  mounted() {\n    this.aceEditor = ace.edit(this.$refs.ace, {\n      value: this.value,\n      maxLines: this.maxLines, // 最大行数，超过会自动出现滚动条\n      minLines: this.minLines, // 最小行数，还未到最大行数时，编辑器会自动伸缩大小\n      fontSize: 14, // 编辑器内字体大小\n      theme: this.themePath, // 默认设置的主题\n      mode: 'ace/mode/' + this.modePath, // 默认设置的语言模式\n      tabSize: 4 // 制表符设置为 4 个空格大小\n    })\n    // 激活自动提示\n    this.aceEditor.setOptions({\n      enableSnippets: true, // 启用代码段\n      enableLiveAutocompletion: true, // 启用实时自动完成功能 （比如：智能代码提示）\n      enableBasicAutocompletion: true // 启用基本自动补全完成功能\n    })\n    this.aceEditor.getSession().on('change', this.change)\n  },\n  methods: {\n    change() {\n      this.$emit('getCode', this.aceEditor.getSession().getValue())\n    }\n  }\n}\n\n</script>\n  <style lang='scss' scoped>\n  .ace-container {\n    position: relative;\n\n    .ace-editor {\n      width: 600px;\n      height: 200px;\n    }\n\n    .bookmarklet {\n      position: absolute;\n      right: 0;\n      bottom: 0;\n      width: 20px;\n      height: 20px;\n      z-index: 2;\n      cursor: pointer;\n      border-width: 9px;\n      border-style: solid;\n      border-color: lightblue gray gray rgb(206, 173, 230);\n      border-image: initial;\n    }\n  }\n  </style>\n"]}]}