{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerCreateApiDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerCreateApiDialog.vue","mtime":1687688325894},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNyZWF0ZUh0dHBSdW5uZXJBcGkgfSBmcm9tICdAL2FwaS9odHRwcnVubmVyJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHt9LAogIHByb3BzOiB7CiAgICBkYXRhczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIHByb2plY3Q6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd1RpdGxlOiAn5Yib5bu6SHR0cFJ1bm5lcuW3peeoi+aOpeWPoycsCiAgICAgIGRpYWxvZ1Zpc2libGU6IHRydWUsCiAgICAgIGh0dHBydW5uZXJfYXBpX25hbWU6ICcnLAogICAgICBhcGlJbmZvTGlzdDogW10sCiAgICAgIHNhdmVGbGFnOiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzSW5wdXRFbXB0eSgpIHsKICAgICAgLy8g5qOA5p+l6L6T5YWl5qGG55qE5YC85piv5ZCm5Li656m6CiAgICAgIHJldHVybiB0aGlzLmh0dHBydW5uZXJfYXBpX25hbWUudHJpbSgpID09PSAnJwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNsb3NlRGlhbG9nKCkgewogICAgICB0aGlzLiRlbWl0KCdjYW5jZWwnLCB7fSkKICAgIH0sCiAgICBiYWNrRGlhbG9nKCkgewogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZQogICAgICB0aGlzLiRlbWl0KCd2aXNpYmxlJywgdGhpcy5kaWFsb2dWaXNpYmxlKQogICAgfSwKICAgIC8vIOmAieaLqeaJgOacieaOpeWPo+S/oeaBrwogICAgc2VsZWN0aW9uQWxsQXBpKHZhbCkgewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbC5sZW5ndGg7IGkrKykgewogICAgICAgIHRoaXMuYXBpSW5mb0xpc3QucHVzaCh7CiAgICAgICAgICAnbmFtZSc6IHZhbFtpXS52YWx1ZSwKICAgICAgICAgICdiYXNlX2FwaV9pZCc6IHZhbFtpXS5pZCwKICAgICAgICAgICdodHRwcnVubmVyX3Byb2plY3RfaWQnOiB0aGlzLnByb2plY3QKICAgICAgICB9KQogICAgICAgIHRoaXMuaHR0cHJ1bm5lcl9hcGlfbmFtZSA9IHZhbFtpXS52YWx1ZQogICAgICB9CiAgICB9LAogICAgLy8g6YCJ5oup5LiA5p2h5o6l5Y+jCiAgICBzZWxlY3Rpb25PbmVBcGkodmFsKSB7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdGhpcy5hcGlJbmZvTGlzdC5wdXNoKHsKICAgICAgICAgICduYW1lJzogdmFsW2ldLnZhbHVlLAogICAgICAgICAgJ2Jhc2VfYXBpX2lkJzogdmFsW2ldLmlkLAogICAgICAgICAgJ2h0dHBydW5uZXJfcHJvamVjdF9pZCc6IHRoaXMucHJvamVjdAogICAgICAgIH0pCiAgICAgICAgdGhpcy5odHRwcnVubmVyX2FwaV9uYW1lID0gdmFsW2ldLnZhbHVlCiAgICAgIH0KICAgIH0sCiAgICAvLyDliJvlu7rmjqXlj6MKICAgIGFzeW5jIGNyZWF0ZUh0dHBSdW5uZXJBcGkoKSB7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5hcGlJbmZvTGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgIGNvbnN0IHJlcSA9IHRoaXMuYXBpSW5mb0xpc3RbaV0KICAgICAgICBpZiAodGhpcy5pc0lucHV0RW1wdHkpIHsKICAgICAgICAgIC8vIOi+k+WFpeWGheWuueS4uuepuu+8jOaYvuekuuW/heWhq+aPkOekuu+8jOS4jei/m+ihjOaPkOS6pOaTjeS9nAogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+36L6T5YWl5o6l5Y+j5ZCN56ewJykKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBjb25zdCByZXNwID0gYXdhaXQgY3JlYXRlSHR0cFJ1bm5lckFwaShyZXEpCiAgICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgICAgdGhpcy5jbG9zZURpYWxvZygpCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIm+W7uuaIkOWKn++8gScpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcC5lcnJvci5tZXNzYWdlKQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["httpRunnerCreateApiDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"httpRunnerCreateApiDialog.vue","sourceRoot":"src/components/HttpRunner","sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"800px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      ref=\"ruleForm\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item>\n        <el-table\n          ref=\"multipleTable\"\n          :data=\"datas\"\n          border\n          style=\"width: 100%\"\n          @select=\"selectionOneApi\"\n          @select-all=\"selectionAllApi\"\n        >\n          <el-table-column type=\"selection\" width=\"55\" />\n          <el-table-column prop=\"id\" label=\"接口ID\" width=\"70\" />\n          <el-table-column prop=\"name\" label=\"接口名称\" width=\"150\" />\n          <el-table-column prop=\"api_path\" label=\"接口地址\" />\n          <el-table-column label=\"httpRunner项目接口名称\">\n            <template slot-scope=\"scope\">\n              <el-input\n                v-model=\"scope.row.value\"\n                :required=\"true\"\n                placeholder=\"请输入httpRunner项目接口名称\"\n              />\n              <span v-if=\"isInputEmpty\" style=\"color: red;\">*接口名称不能为空</span>\n            </template>\n          </el-table-column>>\n        </el-table>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <div class=\"dialog-footer\">\n          <el-button @click=\"backDialog()\">返回上一步</el-button>\n          <el-button\n            type=\"primary\"\n            :disabled=\"saveFlag\"\n            @click=\"createHttpRunnerApi\"\n          >创建HttpRunner工程接口</el-button>\n        </div>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n\n<script>\nimport { createHttpRunnerApi } from '@/api/httprunner'\n\nexport default {\n  components: {},\n  props: {\n    datas: {\n      type: Array,\n      default: null\n    },\n    project: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      showTitle: '创建HttpRunner工程接口',\n      dialogVisible: true,\n      httprunner_api_name: '',\n      apiInfoList: [],\n      saveFlag: false\n    }\n  },\n  computed: {\n    isInputEmpty() {\n      // 检查输入框的值是否为空\n      return this.httprunner_api_name.trim() === ''\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n    },\n    backDialog() {\n      this.dialogVisible = false\n      this.$emit('visible', this.dialogVisible)\n    },\n    // 选择所有接口信息\n    selectionAllApi(val) {\n      for (let i = 0; i < val.length; i++) {\n        this.apiInfoList.push({\n          'name': val[i].value,\n          'base_api_id': val[i].id,\n          'httprunner_project_id': this.project\n        })\n        this.httprunner_api_name = val[i].value\n      }\n    },\n    // 选择一条接口\n    selectionOneApi(val) {\n      for (let i = 0; i < val.length; i++) {\n        this.apiInfoList.push({\n          'name': val[i].value,\n          'base_api_id': val[i].id,\n          'httprunner_project_id': this.project\n        })\n        this.httprunner_api_name = val[i].value\n      }\n    },\n    // 创建接口\n    async createHttpRunnerApi() {\n      for (let i = 0; i < this.apiInfoList.length; i++) {\n        const req = this.apiInfoList[i]\n        if (this.isInputEmpty) {\n          // 输入内容为空，显示必填提示，不进行提交操作\n          this.$message.error('请输入接口名称')\n          return\n        }\n        const resp = await createHttpRunnerApi(req)\n        if (resp.success === true) {\n          this.closeDialog()\n          this.$message.success('创建成功！')\n        } else {\n          this.$message.error(resp.error.message)\n        }\n      }\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n</style>\n"]}]}