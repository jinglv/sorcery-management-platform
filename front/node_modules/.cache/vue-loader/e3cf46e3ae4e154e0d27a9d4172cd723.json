{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/Cases/demandDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/Cases/demandDialog.vue","mtime":1701510034477},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/babel-loader/lib/index.js","mtime":1679466716072},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["demandDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"demandDialog.vue","sourceRoot":"src/components/Cases","sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"70%\"\n    :before-close=\"closeDialog\"\n    :close-on-click-modal=\"false\"\n  >\n    <div v-if=\"showTitle == '需求详情'\" class=\"div-line\">\n      <el-form\n        ref=\"ruleForm\"\n        :model=\"demandForm\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-col :span=\"8\">\n          <el-form-item label=\"需求名称：\" prop=\"name\">{{ demandForm.name }}</el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"需求类型：\" prop=\"requirements_type\">{{ demandForm.requirements_type }}</el-form-item>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-form-item label=\"需求连接：\" prop=\"requirements\">{{ demandForm.requirements }}</el-form-item>\n        </el-col>\n        <el-form-item label=\"需求文件：\" prop=\"requirements_upload_file\">\n          <div v-for=\"(file, index) in fileList\" :key=\"index\">\n            <el-link :href=\"file.url\" target=\"_blank\">{{ file.name }}</el-link>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"需求分析：\" prop=\"requirements\">\n          <div class=\"w-e-text\" style=\"height: 400px; overflow-y: auto;\" v-html=\"demandForm.demand_analysis\" />\n        </el-form-item>\n        <el-form-item label=\"描述：\" prop=\"describe\">{{ demandForm.describe }}</el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog\">返回</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div v-if=\"showTitle != '需求详情'\">\n      <el-form\n        ref=\"ruleForm\"\n        :model=\"demandForm\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"需求名称\" prop=\"name\">\n          <el-input v-model=\"demandForm.name\" />\n        </el-form-item>\n        <el-form-item label=\"版本号\" prop=\"version_number\">\n          <el-input v-model=\"demandForm.version_number\" />\n        </el-form-item>\n        <el-form-item label=\"需求类型\" prop=\"requirements_type\">\n          <el-select\n            v-model=\"typeValue\"\n            placeholder=\"请选择需求类型\"\n            style=\"width: 100%;\"\n            @change=\"changeType\"\n          >\n            <el-option\n              v-for=\"item in typeOption\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"需求\" prop=\"requirements\">\n          <el-input v-model=\"demandForm.requirements\" placeholder=\"请输入需求链接地址或者上传需求文档……\" />\n          <el-upload\n            class=\"upload-demo\"\n            action=\"#\"\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            :before-remove=\"beforeRemove\"\n            multiple\n            :limit=\"3\"\n            :on-exceed=\"handleExceed\"\n            :file-list=\"fileList\"\n            :before-upload=\"beforeUpload\"\n          >\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n            <div slot=\"tip\" class=\"el-upload__tip\">只能上传文本和图片格式，且不超过2MB</div>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"需求分析\" prop=\"demand_analysis\">\n          <div id=\"editor_demand\" />\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"describe\">\n          <el-input v-model=\"demandForm.describe\" />\n        </el-form-item>\n        <el-form-item style=\"text-align: right\">\n          <el-button @click=\"closeDialog\">取消</el-button>\n          <el-button\n            v-if=\"title != '编辑需求'\"\n            type=\"primary\"\n            @click=\"createDemand('ruleForm')\"\n          >确定</el-button>\n          <el-button\n            v-if=\"title == '编辑需求'\"\n            type=\"primary\"\n            @click=\"updateDemand('ruleForm')\"\n          >更新</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { uploadFile } from '@/api/commons'\nimport { createDemand, getDemandDetail, updateDemandDetail } from '@/api/cases'\nimport { getToken } from '@/utils/auth'\nimport E from 'wangeditor'\nimport hljs from 'highlight.js'\n\nexport default {\n  name: 'DemandDialog',\n  components: {},\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    did: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      showTitle: '',\n      dialogVisible: true,\n      demandForm: {\n        name: '',\n        version_number: '',\n        requirements_type: '',\n        requirements: '',\n        requirements_upload_file: [],\n        demand_analysis: '',\n        describe: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入需求名称', trigger: 'blur' }\n        ],\n        version_number: [\n          { required: true, message: '请输入需求版本号', trigger: 'blur' }\n        ],\n        requirements_type: [\n          { required: true, message: '请选择需求类型', trigger: 'blur' }\n        ],\n        requirements: [\n          { required: true, message: '请填写需求', trigger: 'blur' }\n        ]\n      },\n      typeValue: '',\n      typeLabel: '',\n      typeOption: [\n        {\n          value: 'business',\n          label: '业务类需求'\n        },\n        {\n          value: 'improve',\n          label: '改进类需求'\n        },\n        {\n          value: 'technical',\n          label: '技术类需求'\n        }\n      ],\n      fileList: [],\n      imageVisible: false,\n      disabled: false,\n      editor_demand: null\n    }\n  },\n  created() {\n    this.showTitle = this.title\n    if (this.title === '需求详情') {\n      this.getDemandDetail()\n    } else {\n      // 组件打开则进行加载\n      // 使用时钟函数进行延迟，否则获取不到元素 -- 等元素加载完成后再进行创建E\n      this.$nextTick(() => {\n        this.editor_demand = new E('#editor_demand')\n        this.editor_demand.highlight = hljs\n        // 富文本组价设置图片上传接口\n        this.editor_demand.config.uploadImgServer = '/api/commons/editor/file/image'\n        this.editor_demand.config.uploadFileName = 'file'\n        this.editor_demand.config.uploadImgHeaders = {\n          Authorization: 'Bearer ' + getToken()\n        }\n        // 富文本组价设置视频上传接口\n        this.editor_demand.config.uploadVideoServer = '/api/commons/editor/file/video'\n        this.editor_demand.config.uploadVideoName = 'file'\n        this.editor_demand.config.uploadVideoHeaders = {\n          Authorization: 'Bearer ' + getToken()\n        }\n        // 创建\n        this.editor_demand.create()\n      })\n      // 判断不同操作\n      if (this.title === '编辑需求') {\n        this.getDemandDetail()\n      }\n    }\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n      if (this.title !== '需求详情') {\n        // 关闭弹窗，销毁E\n        this.editor_demand.destroy()\n        this.editor_demand = null\n      }\n    },\n    changeType(value) {\n      this.typeValue = value\n      this.typeLabel = this.typeOption.find(\n        (item) => item.value === value\n      ).label\n      this.demandForm.requirements_type = value\n    },\n    // 创建需求详情\n    createDemand(formName) {\n      this.$refs[formName].validate((valid) => {\n        // 获取编辑框的内容\n        const content = this.editor_demand.txt.html()\n        this.demandForm.demand_analysis = content\n        if (valid) {\n          createDemand(this.demandForm).then((resp) => {\n            if (resp.success === true) {\n              this.closeDialog()\n              this.$message.success('创建成功！')\n            } else {\n              this.$message.error(resp.error.message)\n            }\n          })\n        }\n      })\n    },\n    handleRemove(file, fileList) {\n      console.log(file, fileList)\n    },\n    handlePreview(file) {\n      console.log('上传成功', file)\n    },\n    handleExceed(files, fileList) {\n      this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`)\n    },\n    beforeRemove(file, fileList) {\n      return this.$confirm(`确定移除 ${file.name}？`)\n    },\n    // 上传文件\n    async beforeUpload(file) {\n      const fb = new FormData()\n      fb.append('file', file)\n      const resp = await uploadFile(fb)\n      if (resp.success === true) {\n        // 获取文件名\n        const fileName = resp.result.name\n        this.demandForm.requirements_upload_file.push(fileName)\n        const filePath = '/static/file/' + fileName\n        const fileInfo = {\n          name: file.name,\n          url: filePath\n        }\n        this.fileList.push(fileInfo)\n        console.info('已上传文件：', fileName)\n        this.$message.success('上传成功！')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    async getDemandDetail() {\n      const resp = await getDemandDetail(this.did)\n      if (resp.success === true) {\n        this.demandForm = resp.result\n        this.typeValue = resp.result.requirements_type\n        if (this.showTitle !== '需求详情') {\n          // 设置富文本中获取的数据\n          this.editor_demand.txt.html(resp.result.demand_analysis)\n        }\n        const files = JSON.parse(resp.result.requirements_upload_file.replace(/'/g, '\"'))\n        if (files.length > 0) {\n          for (let i = 0; i < files.length; i++) {\n            const fileInfos = {\n              name: files[i],\n              url: '/static/file/' + files[i]\n            }\n            this.fileList.push(fileInfos)\n            this.demandForm.requirements_upload_file = []\n            this.demandForm.requirements_upload_file.push(files[i])\n          }\n        } else {\n          this.demandForm.requirements_upload_file = []\n        }\n        console.info('获取数据：', this.demandForm)\n        this.$message.success('查询成功')\n      } else {\n        this.$message.error(resp.error.message)\n      }\n    },\n    updateDemand(formName) {\n      this.$refs[formName].validate((valid) => {\n        // 获取编辑框的内容\n        const content = this.editor_demand.txt.html()\n        this.demandForm.demand_analysis = content\n        if (valid) {\n          updateDemandDetail(this.did, this.demandForm).then((resp) => {\n            if (resp.success === true) {\n              this.closeDialog()\n              this.$message.success('更新成功！')\n            } else {\n              this.$message.error(resp.error.message)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n\n#editor_requirements {\n  border: 1px solid #ccc;\n  z-index: 100; /* 按需定义 */\n}\n\n#editor_demand {\n  border: 1px solid #ccc;\n  z-index: 100; /* 按需定义 */\n}\n</style>\n"]}]}