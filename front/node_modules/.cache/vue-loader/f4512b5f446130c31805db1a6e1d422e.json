{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/views/chat/index.vue?vue&type=style&index=0&id=71064116&lang=css&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/views/chat/index.vue","mtime":1694505340594},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1679466708477},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1679466707591},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1679466707836},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2hhdCB7CiAgZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBjb2xvcjogIzJjM2U1MDsKICBtYXJnaW4tdG9wOiA2MHB4OwogIGRpc3BsYXk6ZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOwogIGFsaWduLWl0ZW1zOmNlbnRlcjsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/chat","sourcesContent":["<template>\n  <div class=\"chat\">\n    <JwChat-index\n      ref=\"jwChat\"\n      v-model=\"inputMsg\"\n      :tale-list=\"taleList\"\n      :scroll-type=\"scrollType\"\n      :tool-config=\"tool\"\n      :placeholder=\"placeholder\"\n      :config=\"config\"\n      :win-bar-config=\"winBarConfig\"\n      :show-right-box=\"showRightBox\"\n      width=\"1200px\"\n      height=\"750px\"\n      @enter=\"bindEnter\"\n      @clickTalk=\"talkEvent\"\n    />\n  </div>\n</template>\n\n<script>\nimport { chatgpt } from '@/api/chat'\nimport Chatgpt from '../../assets/images/chatgpt.png'\nimport Keai from '../../assets/images/keai.png'\n\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      scrollType: 'scroll', // scroll  noroll 俩种类型\n      placeholder: '欢迎使用Chat小助手...',\n      inputMsg: '',\n      taleList: [],\n      tool: {\n        showEmoji: false,\n        callback: this.toolEvent\n      },\n      config: {\n        img: Chatgpt,\n        name: 'Chat',\n        dept: '最简单、最便捷',\n        callback: this.bindCover,\n        historyConfig: {\n          show: false,\n          tip: '加载更多提示框,可以直接使用组件的',\n          callback: this.bindLoadHistory\n        }\n      },\n      showRightBox: false,\n      winBarConfig: {\n        active: 'win01',\n        width: '280px',\n        listHeight: '60px',\n        list: [\n          {\n            id: 'win00',\n            img: Chatgpt,\n            name: 'JwChat',\n            dept: '最简单、最便捷',\n            readNum: 1\n          },\n          {\n            id: 'win01',\n            img: Chatgpt,\n            name: '阳光明媚爱万物',\n            dept: '沙拉黑油',\n            readNum: 12\n          }\n        ],\n        callback: this.bindWinBar\n      }\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    /**\n     * @description: 点击加载更多的回调函数\n     * @param {*}\n     * @return {*}\n     */\n    async bindLoadHistory() {\n      const history = new Array(3).fill().map((i, j) => {\n        return {\n          date: '2020/05/20 23:19:07',\n          text: { text: j + new Date() },\n          mine: false,\n          name: 'JwChat',\n          img: 'image/three.jpeg'\n        }\n      })\n      const list = history.concat(this.taleList)\n      this.taleList = list\n      console.log('加载历史', list, history)\n      //  加载完成后通知组件关闭加载动画\n      this.config.historyConfig.tip = '加载完成'\n      this.$nextTick(() => {\n        this.$refs.jwChat.finishPullDown()\n      })\n    },\n    async bindEnter(e) {\n      console.log(e)\n      const msg = this.inputMsg\n      if (!msg) return\n      const msgObj = {\n        'date': '2020/05/20 23:19:07',\n        'text': { 'text': msg },\n        'mine': true,\n        'name': 'Jean',\n        'img': Keai\n      }\n      this.taleList.push(msgObj)\n\n      const req = {\n        'question': msg\n      }\n      const resp = await chatgpt(req)\n      if (resp.success === true) {\n        const respObj = {\n          'date': '2020/06/25 21:19:07',\n          'text': { 'text': resp.result.answer },\n          'mine': false,\n          'name': 'Chat',\n          'img': Chatgpt\n        }\n        this.taleList.push(respObj)\n      }\n      this.winBarConfig.list.push(this.taleList)\n    },\n    // 切换用户窗口，加载对应的历史记录\n    bindWinBar(play = {}) {\n      const { type, data = {}} = play\n      console.log(play)\n      if (type === 'winBar') {\n        const { id, dept, name, img } = data\n        this.config = { ...this.config, id, dept, name, img }\n        this.winBarConfig.active = id\n        // if (id === 'win00') {\n        //   this.taleList = getListArr()\n        // } else this.taleList = getListArr((Math.random() * 4) >> 0)\n      }\n      if (type === 'winBtn') {\n        const { target: { id } = {}} = data\n        const { list } = this.winBarConfig\n        this.winBarConfig.list = list.reduce((p, i) => {\n          if (id !== i.id) p.push(i)\n          return p\n        }, [])\n      }\n    },\n    toolEvent(type, obj) {\n      console.log('tools', type, obj)\n    },\n    talkEvent(play) {\n      console.log(play)\n    }\n  }\n}\n</script>\n\n<style>\n.chat {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n}\n</style>\n"]}]}