{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerSuiteDialog.vue?vue&type=style&index=0&id=7d284021&scoped=true&lang=css&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/components/HttpRunner/httpRunnerSuiteDialog.vue","mtime":1690945573846},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1679466708477},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1679466707591},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1679466707836},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNpbWFnZSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQouY29udGFpbmVyIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KLmJ0biB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHJpZ2h0OiAwOwp9Ci5sYWJlbC10ZXh0IHsKICBmb250LWZhbWlseTogIkx1Y2lkYSBDYWxsaWdyYXBoeSIsIGN1cnNpdmUsIHNlcmlmLCBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMjBweDsKICBmb250LXdlaWdodDogYm9sZGVyOwogIG1hcmdpbi10b3A6IDVweDsKfQo="},{"version":3,"sources":["httpRunnerSuiteDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"httpRunnerSuiteDialog.vue","sourceRoot":"src/components/HttpRunner","sourcesContent":["<template>\n  <div :style=\"{'max-height': timeLineHeight +'px'}\" style=\"margin-left: 10px; margin-right: 10px; overflow-y:scroll;\">\n    <el-form\n      ref=\"ruleForm\"\n      :model=\"suiteFrom\"\n      label-width=\"180px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"HttpRunner项目：\">\n        <el-select\n          v-model=\"suiteFrom.httprunner_project_id\"\n          placeholder=\"请选择HttpRunner项目名称\"\n          style=\"width: 100%;\"\n          @change=\"changeProject\"\n        >\n          <el-option\n            v-for=\"item in projectOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"测试用例集名称：\" prop=\"name\">\n        <el-input v-model=\"suiteFrom.name\" placeholder=\"请输入测试用例集名称\" />\n      </el-form-item>\n      <el-tabs v-model=\"activeName\">\n        <el-tab-pane label=\"测试用例\" name=\"first\" prop=\"testSteps\">\n          <div style=\"height: 600px; overflow-y: auto;\">\n            <el-table :data=\"testCaseList\">\n              <el-table-column>\n                <template slot-scope=\"scope\">\n                  <el-form label-width=\"120px\">\n                    <div class=\"container\">\n                      <span class=\"label-text\">TestCase: {{ scope.$index + 1 }}</span>\n                      <el-button\n                        v-if=\"scope.row.show === 'true'\"\n                        type=\"success\"\n                        class=\"btn\"\n                        icon=\"el-icon-circle-plus-outline\"\n                        size=\"mini\"\n                        style=\"margin-right: 50px;\"\n                        plain\n                        @click=\"addTestCase(scope.$index)\"\n                      />\n                      <el-button\n                        class=\"btn\"\n                        type=\"danger\"\n                        size=\"mini\"\n                        icon=\"el-icon-delete\"\n                        plain\n                        @click=\"removeTestCase(scope.$index)\"\n                      />\n                    </div>\n                    <div style=\"margin-top: 15px;\">\n                      <el-form-item label=\"测试步骤名称：\" prop=\"name\">\n                        <el-input v-model=\"scope.row.name\" placeholder=\"请输入测试用例名称\" size=\"small\" />\n                      </el-form-item>\n                      <el-form-item label=\"选择测试用例：\" prop=\"case_id\">\n                        <el-select\n                          v-model=\"scope.row.case_id\"\n                          placeholder=\"请选择HttpRunner项目下的测试用例\"\n                          size=\"small\"\n                          style=\"width: 100%;\"\n                        >\n                          <el-option\n                            v-for=\"i in casesOption\"\n                            :key=\"'api' + i.value\"\n                            :label=\"i.label\"\n                            :value=\"i.value\"\n                          />\n                        </el-select>\n                      </el-form-item>\n                      <el-collapse>\n                        <el-collapse-item title=\"其他内容\">\n                          <div style=\"height: 200px; overflow-y: auto;\">\n                            <el-form-item label=\"参数：\" prop=\"extracts\">\n                              <el-button\n                                type=\"primary\"\n                                size=\"mini\"\n                                icon=\"el-icon-plus\"\n                                plain\n                                @click=\"addParams(scope)\"\n                              >添加</el-button>\n                              <div v-for=\"(item, index) in scope.row.params\" :key=\"index\" style=\"margin-top: 5px;\">\n                                <el-col :span=\"6\">\n                                  <el-input\n                                    v-model=\"item.name\"\n                                    placeholder=\"参数名\"\n                                    style=\"width: 200px\"\n                                  />\n                                </el-col>\n                                <el-col :span=\"7\">\n                                  <el-input\n                                    v-model=\"item.value\"\n                                    placeholder=\"参数值\"\n                                    style=\"width: 100%\"\n                                  />\n                                </el-col>\n                                <el-button\n                                  type=\"text\"\n                                  style=\"padding-right: 10px\"\n                                  @click=\"removeParams(scope, index)\"\n                                >\n                                  <i class=\"el-icon-remove-outline\" />\n                                </el-button>\n                              </div>\n                            </el-form-item>\n                            <el-form-item label=\"变量：\" prop=\"variables\">\n                              <el-button\n                                type=\"primary\"\n                                size=\"mini\"\n                                icon=\"el-icon-plus\"\n                                plain\n                                @click=\"addVariables(scope)\"\n                              >添加</el-button>\n                              <div v-for=\"(item, index) in scope.row.variables\" :key=\"index\" style=\"margin-top: 5px;\">\n                                <el-col :span=\"6\">\n                                  <el-input\n                                    v-model=\"item.name\"\n                                    placeholder=\"变量名\"\n                                    style=\"width: 200px\"\n                                  />\n                                </el-col>\n                                <el-col :span=\"7\">\n                                  <el-input\n                                    v-model=\"item.value\"\n                                    placeholder=\"变量值\"\n                                    style=\"width: 100%\"\n                                  />\n                                </el-col>\n                                <el-button\n                                  type=\"text\"\n                                  style=\"padding-right: 10px\"\n                                  @click=\"removeVariables(scope,index)\"\n                                >\n                                  <i class=\"el-icon-remove-outline\" />\n                                </el-button>\n                              </div>\n                            </el-form-item>\n                          </div>\n                        </el-collapse-item>\n                      </el-collapse>\n                    </div>\n                  </el-form>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"公共变量\" name=\"second\" :lazy=\"true\">\n          <div style=\"height: 300px; overflow-y: auto;\">\n            <dict-dialog :dict-data=\"publicVariable\" />\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n      <el-form-item style=\"text-align: right; margin-top: 20px;\">\n        <div class=\"dialog-footer\">\n          <el-button @click=\"closeDialog()\">取消</el-button>\n          <el-button v-if=\"title != '编辑测试用例集'\" :loading=\"loading\" type=\"primary\" @click=\"createSuite()\">保存</el-button>\n          <el-button v-if=\"title == '编辑测试用例集'\" :loading=\"loading\" type=\"primary\" @click=\"updateSuite()\">更新</el-button>\n        </div>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { httpRunnerProjectList, getHttpRunnerTestCaseIds, createHttpRunnerSuite, updateHttpRunnerSuite, httpRunnerSuiteDetail } from '@/api/httprunner'\nimport dictDialog from '@/components/Api/dictDialog'\n\nexport default {\n  components: {\n    dictDialog\n  },\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    sid: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      timeLineHeight: '',\n      projectValue: '',\n      projectLabel: '',\n      projectOption: [],\n      apiDetailInfo: {},\n      testCaseList: [{\n        name: '',\n        case_id: '',\n        params: [],\n        variables: [],\n        // 是否显示新增按钮\n        show: 'true'\n      }],\n      apiValue: '',\n      apiLabel: '',\n      casesOption: [],\n      suiteFrom: {\n        name: '',\n        httprunner_project_id: '',\n        public_variables: '',\n        test_cases: []\n      },\n      publicVariable: [{\n        name: '',\n        value: '',\n        // 是否显示新增按钮\n        show: 'true'\n      }],\n      params: [],\n      variables: [],\n      assertLabel: '',\n      activeName: 'first',\n      loading: false\n    }\n  },\n  mounted() {\n    // 窗口滑动\n    this.timeLineHeight = document.documentElement.clientHeight - 150\n    window.onresize = () => { this.timeLineHeight = document.documentElement.clientHeight - 150 }\n    this.initHttpRunnerProjectList()\n    if (this.title === '编辑测试用例集') {\n      this.httpRunnerSuiteDetail()\n    }\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('cancel', {})\n    },\n    async initHttpRunnerProjectList() {\n      const resp = await httpRunnerProjectList(this.req)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.items.length; i++) {\n          this.projectOption.push({\n            value: resp.items[i].id,\n            label: resp.items[i].name\n          })\n        }\n        this.total = resp.total\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    changeProject(value) {\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n      this.httpRunnerTestCaseIds(value)\n    },\n    async httpRunnerTestCaseIds(projectId) {\n      const resp = await getHttpRunnerTestCaseIds(projectId)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.result.length; i++) {\n          this.casesOption.push({\n            value: resp.result[i].id,\n            label: resp.result[i].name\n          })\n        }\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 添加测试步骤\n    addTestCase(index) {\n      const list = this.testCaseList\n      list[index].show = 'false'\n      list.push({\n        name: '',\n        case_id: '',\n        params: [],\n        variables: [],\n        show: 'true'\n      })\n      this.testCaseList = list\n    },\n    addParams(scope) {\n      scope.row.params.push({ name: '', value: '' })\n    },\n    removeParams(scope, index) {\n      scope.row.params.splice(index, 1)\n    },\n    addVariables(scope) {\n      scope.row.variables.push({ name: '', value: '' })\n    },\n    removeVariables(scope, index) {\n      scope.row.variables.splice(index, 1)\n    },\n    removeTestCase(index) {\n      const list = this.testCaseList\n      if (index === 0 && list.length === 1) {\n        list.splice(index, 1)\n        list.push({\n          name: '',\n          case_id: '',\n          params: [],\n          variables: [],\n          show: 'true'\n        })\n      } else {\n        list.splice(index, 1)\n      }\n      if (index === list.length) {\n        list[index - 1].show = 'true'\n      }\n      this.testCaseList = list\n    },\n    async createSuite() {\n      const testCases = []\n      for (let i = 0; i < this.testCaseList.length; i++) {\n        const case_info = this.testCaseList[i]\n        const case_dict = {\n          'name': case_info.name,\n          'case_id': case_info.case_id,\n          'params': this.params_data_dict(case_info.params),\n          'variables': this.list_to_dict(case_info.variables)\n        }\n        testCases.push(case_dict)\n      }\n      const public_variables_dict = this.list_to_dict(this.publicVariable)\n      this.suiteFrom.public_variables = public_variables_dict\n      this.suiteFrom.test_cases = testCases\n      this.loading = true\n      const resp = await createHttpRunnerSuite(this.suiteFrom)\n      if (resp.success === true) {\n        this.$message.success('创建成功！')\n        this.loading = false\n        this.closeDialog()\n      } else {\n        this.$message.error('创建失败！')\n      }\n    },\n    async updateSuite() {\n      const testCases = []\n      for (let i = 0; i < this.testCaseList.length; i++) {\n        const case_info = this.testCaseList[i]\n        const case_dict = {\n          'name': case_info.name,\n          'case_id': case_info.case_id,\n          'params': this.params_data_dict(case_info.params),\n          'variables': this.list_to_dict(case_info.variables)\n        }\n        testCases.push(case_dict)\n      }\n      const public_variables_dict = this.list_to_dict(this.publicVariable)\n      this.suiteFrom.public_variables = public_variables_dict\n      this.suiteFrom.test_cases = testCases\n      this.loading = true\n      const resp = await updateHttpRunnerSuite(this.sid, this.suiteFrom)\n      if (resp.success === true) {\n        this.$message.success('更新成功！')\n        this.loading = false\n        this.closeDialog()\n      } else {\n        this.$message.error('更新失败！')\n      }\n    },\n    async httpRunnerSuiteDetail() {\n      const resp = await httpRunnerSuiteDetail(this.sid)\n      if (resp.success === true) {\n        this.suiteFrom = resp.result\n        const config_content = JSON.parse(resp.result.config.replace(/'/g, '\"'))\n        if (Object.keys(config_content).length !== 0) {\n          this.publicVariable = this.dict_to_list(config_content)\n          this.publicVariable[this.publicVariable.length - 1]['show'] = 'true'\n        }\n        const testCasesResult = []\n        const testCases = JSON.parse(this.suiteFrom.test_cases.replace(/'/g, '\"'))\n        for (let i = 0; i < testCases.length; i++) {\n          if (testCases[i].params !== undefined) {\n            this.params = this.params_data_list(testCases[i].params)\n          }\n          if (testCases.variables !== undefined) {\n            this.variables = this.dict_to_list(testCases.variables)\n          }\n          testCasesResult.push({\n            name: testCases[i].name,\n            case_id: testCases[i].case_id,\n            params: this.params,\n            variables: this.variables\n          })\n        }\n        this.testCaseList = testCasesResult\n        this.testCaseList[this.testCaseList.length - 1]['show'] = 'true'\n        this.httpRunnerTestCaseIds(resp.result.httprunner_project_id)\n        // this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 列表转换字典\n    list_to_dict(lst) {\n      if (lst !== undefined) {\n        const dict = {}\n        for (let i = 0; i < lst.length; i++) {\n          const item = lst[i]\n          if (item.name === '' && item.value === '') {\n            return dict\n          }\n          dict[item.name] = item.value\n        }\n        return dict\n      }\n    },\n    // 字典转换列表\n    dict_to_list(dic) {\n      if (dic !== undefined) {\n        const result = Object.entries(dic).map(([name, value]) => {\n          return { 'name': name, 'value': value }\n        })\n        return result\n      }\n    },\n    params_data_dict(lst) {\n      const output = {}\n      lst.forEach(item => {\n        const name = item['name']\n        const value = item['value']\n        if (output[name]) {\n          output[name].push(value)\n        } else {\n          output[name] = [value]\n        }\n      })\n      return output\n    },\n    params_data_list(dic) {\n      /**\n       * 将数据 {\"aa\": 111, \"bb\": 222}转换为\n       * [{\"name\": \"aa\", \"value\": 111}, {\"name\": \"bb\", \"value\": 222}]\n       */\n      const output = Object.entries(dic).flatMap(([name, values]) => {\n        return values.map(value => ({ name, value }))\n      })\n      return output\n    }\n  }\n}\n</script>\n<style scoped>\n#image {\n  text-align: left;\n}\n.container {\n  position: relative;\n}\n.btn {\n  position: absolute;\n  right: 0;\n}\n.label-text {\n  font-family: \"Lucida Calligraphy\", cursive, serif, sans-serif;\n  font-size: 20px;\n  font-weight: bolder;\n  margin-top: 5px;\n}\n</style>\n"]}]}