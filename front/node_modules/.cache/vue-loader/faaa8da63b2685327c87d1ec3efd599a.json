{"remainingRequest":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery-management-platform/front/src/views/infos/yapi/index.vue?vue&type=style&index=0&id=c09897b0&lang=css&","dependencies":[{"path":"/Users/lvjing/sorcery-management-platform/front/src/views/infos/yapi/index.vue","mtime":1691393327588},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/css-loader/dist/cjs.js","mtime":1679466708477},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1679466707591},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/postcss-loader/src/index.js","mtime":1679466707836},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/cache-loader/dist/cjs.js","mtime":1679466716417},{"path":"/Users/lvjing/sorcery-management-platform/front/node_modules/vue-loader/lib/index.js","mtime":1679466707590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRlbW8tdGFibGUtZXhwYW5kIHsKICAgIGZvbnQtc2l6ZTogMDsKfQouZGVtby10YWJsZS1leHBhbmQgbGFiZWwgewogICAgd2lkdGg6IDkwcHg7CiAgICBjb2xvcjogIzk5YTliZjsKfQouZGVtby10YWJsZS1leHBhbmQgLmVsLWZvcm0taXRlbSB7CiAgICBtYXJnaW4tcmlnaHQ6IDA7CiAgICBtYXJnaW4tYm90dG9tOiAwOwogICAgd2lkdGg6IDUwJTsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/infos/yapi","sourcesContent":["<template>\n  <div id=\"yapi-api\">\n    <el-form :inline=\"true\" :model=\"yapiFrom\" class=\"demo-form-inline\">\n      <el-form-item label=\"Yapi基础地址\">\n        <el-input v-model=\"yapiFrom.yapiBaseUrl\" placeholder=\"请输入Yapi基础地址\" style=\"width: 250px;\" />\n      </el-form-item>\n      <el-form-item label=\"Yapi项目Token\">\n        <el-input v-model=\"yapiFrom.yapiToken\" placeholder=\"请输入Yapi项目Token\" style=\"width: 450px;\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"getYapiProjectInfo()\">查询</el-button>\n      </el-form-item>\n    </el-form>\n    <el-form v-show=\"showFlag\" :inline=\"true\" class=\"demo-form-inline\">\n      <el-form-item label=\"Yapi项目信息\" />\n      <br>\n      <el-form-item label=\"Yapi项目ID:\" label-width=\"200px\">{{ project_id }}</el-form-item>\n      <br>\n      <el-form-item label=\"Yapi项目名称:\" label-width=\"200px\">{{ project_name }}</el-form-item>\n    </el-form>5\n    <div style=\"text-align: left\">\n      <el-form :inline=\"true\">\n        <el-form-item label=\"Yapi项目分类\">\n          <el-select\n            v-model=\"categoryName\"\n            size=\"medium\"\n            placeholder=\"请选择项目分类\"\n            @change=\"changeCategory\"\n          >\n            <el-option\n              v-for=\"item in categoryOption\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"接口总数量:\" style=\"float: right\">{{ total }}</el-form-item>\n      </el-form>\n    </div>\n    <el-table\n      :data=\"apiData\"\n      border\n      stripe\n      style=\"width: 100%\"\n    >\n      <el-table-column\n        prop=\"api_id\"\n        label=\"接口ID\"\n        width=\"200\"\n      />\n      <el-table-column\n        prop=\"api_name\"\n        label=\"接口名称\"\n        width=\"250\"\n      />\n      <el-table-column\n        prop=\"api_path\"\n        label=\"接口地址\"\n      />\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"250\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            @click=\"apiDetailDialog(scope.row)\"\n          >查看接口详情</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div style=\"width: 100%; text-align: right\">\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :page-size=\"req.size\"\n        :total=\"total\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getYapiProjectInfo, getYapiCategoryList, getYapiApiList } from '@/api/infos'\n\nexport default {\n  components: {\n  },\n  data() {\n    return {\n      yapiFrom: {\n        yapiBaseUrl: '',\n        yapiToken: ''\n      },\n      project_id: 1,\n      project_name: '',\n      categoryOption: [],\n      categoryId: 1,\n      categoryName: '',\n      categoryListFrom: {\n        yapi_base_url: '',\n        yapi_token: ''\n      },\n      showFlag: false,\n      apiData: [],\n      req: {\n        page: 1,\n        size: 10\n      },\n      total: 0,\n      drawer: false,\n      apiId: 0,\n      apiDetailTitle: ''\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    // 获取Yapi项目信息\n    async getYapiProjectInfo() {\n      const req = {\n        yapi_base_url: this.yapiFrom.yapiBaseUrl,\n        yapi_token: this.yapiFrom.yapiToken\n      }\n      const resp = await getYapiProjectInfo(req)\n      if (resp.success === true) {\n        this.project_id = resp.result.project_id\n        this.project_name = resp.result.project_name\n        this.$message.success('查询成功！')\n        this.showFlag = true\n        this.clickCategoryList()\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 项目分类列表\n    async clickCategoryList() {\n      const req = {\n        project_id: this.project_id,\n        yapi_base_url: this.yapiFrom.yapiBaseUrl,\n        yapi_token: this.yapiFrom.yapiToken\n      }\n      const resp = await getYapiCategoryList(req)\n      if (resp.success === true) {\n        this.categoryId = resp.result[0].category_id\n        this.categoryName = resp.result[0].category_name\n        for (let i = 0; i < resp.result.length; i++) {\n          this.categoryOption.push({\n            value: resp.result[i].category_id,\n            label: resp.result[i].category_name\n          })\n        }\n        this.apiList(this.categoryId)\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 项目分类接口列表\n    async apiList(categoryId) {\n      const req = {\n        category_id: categoryId,\n        yapi_base_url: this.yapiFrom.yapiBaseUrl,\n        yapi_token: this.yapiFrom.yapiToken,\n        page: this.req.page,\n        size: this.req.size\n      }\n      const resp = await getYapiApiList(this.req, req)\n      if (resp.success === true) {\n        this.apiData = resp.items\n        this.total = resp.total\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 修改选中分类\n    changeCategory(value) {\n      this.categoryId = value\n      this.apiList(value)\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      this.req.page = val\n      this.apiList(this.categoryId)\n    },\n    // 查看接口详情\n    apiDetailDialog(row) {\n      // 点击获取用例\n      this.apiId = row.api_id\n      this.drawer = true\n      this.apiDetailTitle = '查看接口详情'\n    },\n    // 传递子组件，关闭抽屉\n    closeDrawer() {\n      this.drawer = false\n    }\n  }\n}\n</script>\n\n<style>\n.demo-table-expand {\n    font-size: 0;\n}\n.demo-table-expand label {\n    width: 90px;\n    color: #99a9bf;\n}\n.demo-table-expand .el-form-item {\n    margin-right: 0;\n    margin-bottom: 0;\n    width: 50%;\n}\n</style>\n"]}]}